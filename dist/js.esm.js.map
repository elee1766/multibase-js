{"version":3,"file":"js.esm.js","sources":["../src/constants/chains.ts","../node_modules/ajv/lib/compile/codegen/code.ts","../node_modules/ajv/lib/compile/codegen/scope.ts","../node_modules/ajv/lib/compile/codegen/index.ts","../node_modules/ajv/lib/compile/util.ts","../node_modules/ajv/lib/compile/names.ts","../node_modules/ajv/lib/compile/errors.ts","../node_modules/ajv/lib/compile/validate/boolSchema.ts","../node_modules/ajv/lib/compile/rules.ts","../node_modules/ajv/lib/compile/validate/applicability.ts","../node_modules/ajv/lib/compile/validate/dataType.ts","../node_modules/ajv/lib/compile/validate/defaults.ts","../node_modules/ajv/lib/vocabularies/code.ts","../node_modules/ajv/lib/compile/validate/keyword.ts","../node_modules/ajv/lib/compile/validate/subschema.ts","../node_modules/fast-deep-equal/index.js","../node_modules/json-schema-traverse/index.js","../node_modules/ajv/lib/compile/resolve.ts","../node_modules/ajv/lib/compile/validate/index.ts","../node_modules/ajv/lib/runtime/validation_error.ts","../node_modules/ajv/lib/compile/ref_error.ts","../node_modules/ajv/lib/compile/index.ts","../node_modules/uri-js/src/util.ts","../node_modules/uri-js/src/regexps-uri.ts","../node_modules/uri-js/src/regexps-iri.ts","../node_modules/uri-js/node_modules/punycode/punycode.es6.js","../node_modules/uri-js/src/uri.ts","../node_modules/uri-js/src/schemes/http.ts","../node_modules/uri-js/src/schemes/https.ts","../node_modules/uri-js/src/schemes/ws.ts","../node_modules/uri-js/src/schemes/wss.ts","../node_modules/uri-js/src/schemes/mailto.ts","../node_modules/uri-js/src/schemes/urn.ts","../node_modules/uri-js/src/schemes/urn-uuid.ts","../node_modules/uri-js/src/index.ts","../node_modules/ajv/lib/runtime/uri.ts","../node_modules/ajv/lib/core.ts","../node_modules/ajv/lib/vocabularies/core/id.ts","../node_modules/ajv/lib/vocabularies/core/ref.ts","../node_modules/ajv/lib/vocabularies/core/index.ts","../node_modules/ajv/lib/vocabularies/validation/limitNumber.ts","../node_modules/ajv/lib/vocabularies/validation/multipleOf.ts","../node_modules/ajv/lib/runtime/ucs2length.ts","../node_modules/ajv/lib/vocabularies/validation/limitLength.ts","../node_modules/ajv/lib/vocabularies/validation/pattern.ts","../node_modules/ajv/lib/vocabularies/validation/limitProperties.ts","../node_modules/ajv/lib/vocabularies/validation/required.ts","../node_modules/ajv/lib/vocabularies/validation/limitItems.ts","../node_modules/ajv/lib/runtime/equal.ts","../node_modules/ajv/lib/vocabularies/validation/uniqueItems.ts","../node_modules/ajv/lib/vocabularies/validation/const.ts","../node_modules/ajv/lib/vocabularies/validation/enum.ts","../node_modules/ajv/lib/vocabularies/validation/index.ts","../node_modules/ajv/lib/vocabularies/applicator/additionalItems.ts","../node_modules/ajv/lib/vocabularies/applicator/items.ts","../node_modules/ajv/lib/vocabularies/applicator/prefixItems.ts","../node_modules/ajv/lib/vocabularies/applicator/items2020.ts","../node_modules/ajv/lib/vocabularies/applicator/contains.ts","../node_modules/ajv/lib/vocabularies/applicator/dependencies.ts","../node_modules/ajv/lib/vocabularies/applicator/propertyNames.ts","../node_modules/ajv/lib/vocabularies/applicator/additionalProperties.ts","../node_modules/ajv/lib/vocabularies/applicator/properties.ts","../node_modules/ajv/lib/vocabularies/applicator/patternProperties.ts","../node_modules/ajv/lib/vocabularies/applicator/not.ts","../node_modules/ajv/lib/vocabularies/applicator/anyOf.ts","../node_modules/ajv/lib/vocabularies/applicator/oneOf.ts","../node_modules/ajv/lib/vocabularies/applicator/allOf.ts","../node_modules/ajv/lib/vocabularies/applicator/if.ts","../node_modules/ajv/lib/vocabularies/applicator/thenElse.ts","../node_modules/ajv/lib/vocabularies/applicator/index.ts","../node_modules/ajv/lib/vocabularies/format/format.ts","../node_modules/ajv/lib/vocabularies/format/index.ts","../node_modules/ajv/lib/vocabularies/metadata.ts","../node_modules/ajv/lib/vocabularies/draft7.ts","../node_modules/ajv/lib/vocabularies/discriminator/types.ts","../node_modules/ajv/lib/vocabularies/discriminator/index.ts","../node_modules/ajv/lib/ajv.ts","../src/constants/index.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/moment/moment.js","../node_modules/js-cookie/dist/js.cookie.mjs","../src/utils/index.ts","../src/utils/context.ts","../src/types/base.ts","../src/utils/user.ts","../src/utils/connector.ts","../src/exceptions/index.ts","../src/MultibaseCore.ts"],"sourcesContent":["import { Chain } from \"../types/base\"\n\nexport const ethereum: Chain = {\n    id: 1,\n    multibaseId: 'eth',\n    validIds: [\"1\", \"eth\", \"ethereum\", \"mainnet\", \"homestead\"] \n}\n\nexport const arbitrum: Chain = {\n    id: 42_161,\n    multibaseId: 'arb',\n    validIds: [\"42_161\", \"42161\", \"arb\", \"arbitrum\", \"arbitrum-one\"]\n}\n\nexport const polygon: Chain = {\n    id: 137,\n    multibaseId: 'matic',\n    validIds: [\"137\", \"matic\", \"polygon\", \"polygon-pos\", \"polygon-pos-v1\"]\n}\n\nexport const avalanche: Chain = {\n    id: 43_114,\n    multibaseId: 'avax',\n    validIds: [\"43_114\", \"43114\", \"avax\", \"avalanche\", \"avalanche-mainnet\", \"avalanche-c-chain\"]\n}\n\nexport const fantom: Chain = {\n    id: 250,\n    multibaseId: 'ftm',\n    validIds: [\"250\", \"ftm\", \"fantom\", \"fantom-mainnet\"]\n}\n\nexport const bsc: Chain = {\n    id: 56,\n    multibaseId: 'bsc',\n    validIds: [\"56\", \"bsc\", \"binance\", \"binance-smart-chain\", \"binance-smart-chain-mainnet\"]\n}","export abstract class _CodeOrName {\n  abstract readonly str: string\n  abstract readonly names: UsedNames\n  abstract toString(): string\n  abstract emptyStr(): boolean\n}\n\nexport const IDENTIFIER = /^[a-z$_][a-z$_0-9]*$/i\n\nexport class Name extends _CodeOrName {\n  readonly str: string\n  constructor(s: string) {\n    super()\n    if (!IDENTIFIER.test(s)) throw new Error(\"CodeGen: name must be a valid identifier\")\n    this.str = s\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    return false\n  }\n\n  get names(): UsedNames {\n    return {[this.str]: 1}\n  }\n}\n\nexport class _Code extends _CodeOrName {\n  readonly _items: readonly CodeItem[]\n  private _str?: string\n  private _names?: UsedNames\n\n  constructor(code: string | readonly CodeItem[]) {\n    super()\n    this._items = typeof code === \"string\" ? [code] : code\n  }\n\n  toString(): string {\n    return this.str\n  }\n\n  emptyStr(): boolean {\n    if (this._items.length > 1) return false\n    const item = this._items[0]\n    return item === \"\" || item === '\"\"'\n  }\n\n  get str(): string {\n    return (this._str ??= this._items.reduce((s: string, c: CodeItem) => `${s}${c}`, \"\"))\n  }\n\n  get names(): UsedNames {\n    return (this._names ??= this._items.reduce((names: UsedNames, c) => {\n      if (c instanceof Name) names[c.str] = (names[c.str] || 0) + 1\n      return names\n    }, {}))\n  }\n}\n\nexport type CodeItem = Name | string | number | boolean | null\n\nexport type UsedNames = Record<string, number | undefined>\n\nexport type Code = _Code | Name\n\nexport type SafeExpr = Code | number | boolean | null\n\nexport const nil = new _Code(\"\")\n\ntype CodeArg = SafeExpr | string | undefined\n\nexport function _(strs: TemplateStringsArray, ...args: CodeArg[]): _Code {\n  const code: CodeItem[] = [strs[0]]\n  let i = 0\n  while (i < args.length) {\n    addCodeArg(code, args[i])\n    code.push(strs[++i])\n  }\n  return new _Code(code)\n}\n\nconst plus = new _Code(\"+\")\n\nexport function str(strs: TemplateStringsArray, ...args: (CodeArg | string[])[]): _Code {\n  const expr: CodeItem[] = [safeStringify(strs[0])]\n  let i = 0\n  while (i < args.length) {\n    expr.push(plus)\n    addCodeArg(expr, args[i])\n    expr.push(plus, safeStringify(strs[++i]))\n  }\n  optimize(expr)\n  return new _Code(expr)\n}\n\nexport function addCodeArg(code: CodeItem[], arg: CodeArg | string[]): void {\n  if (arg instanceof _Code) code.push(...arg._items)\n  else if (arg instanceof Name) code.push(arg)\n  else code.push(interpolate(arg))\n}\n\nfunction optimize(expr: CodeItem[]): void {\n  let i = 1\n  while (i < expr.length - 1) {\n    if (expr[i] === plus) {\n      const res = mergeExprItems(expr[i - 1], expr[i + 1])\n      if (res !== undefined) {\n        expr.splice(i - 1, 3, res)\n        continue\n      }\n      expr[i++] = \"+\"\n    }\n    i++\n  }\n}\n\nfunction mergeExprItems(a: CodeItem, b: CodeItem): CodeItem | undefined {\n  if (b === '\"\"') return a\n  if (a === '\"\"') return b\n  if (typeof a == \"string\") {\n    if (b instanceof Name || a[a.length - 1] !== '\"') return\n    if (typeof b != \"string\") return `${a.slice(0, -1)}${b}\"`\n    if (b[0] === '\"') return a.slice(0, -1) + b.slice(1)\n    return\n  }\n  if (typeof b == \"string\" && b[0] === '\"' && !(a instanceof Name)) return `\"${a}${b.slice(1)}`\n  return\n}\n\nexport function strConcat(c1: Code, c2: Code): Code {\n  return c2.emptyStr() ? c1 : c1.emptyStr() ? c2 : str`${c1}${c2}`\n}\n\n// TODO do not allow arrays here\nfunction interpolate(x?: string | string[] | number | boolean | null): SafeExpr | string {\n  return typeof x == \"number\" || typeof x == \"boolean\" || x === null\n    ? x\n    : safeStringify(Array.isArray(x) ? x.join(\",\") : x)\n}\n\nexport function stringify(x: unknown): Code {\n  return new _Code(safeStringify(x))\n}\n\nexport function safeStringify(x: unknown): string {\n  return JSON.stringify(x)\n    .replace(/\\u2028/g, \"\\\\u2028\")\n    .replace(/\\u2029/g, \"\\\\u2029\")\n}\n\nexport function getProperty(key: Code | string | number): Code {\n  return typeof key == \"string\" && IDENTIFIER.test(key) ? new _Code(`.${key}`) : _`[${key}]`\n}\n\n//Does best effort to format the name properly\nexport function getEsmExportName(key: Code | string | number): Code {\n  if (typeof key == \"string\" && IDENTIFIER.test(key)) {\n    return new _Code(`${key}`)\n  }\n  throw new Error(`CodeGen: invalid export name: ${key}, use explicit $id name mapping`)\n}\n\nexport function regexpCode(rx: RegExp): Code {\n  return new _Code(rx.toString())\n}\n","import {_, nil, Code, Name} from \"./code\"\n\ninterface NameGroup {\n  prefix: string\n  index: number\n}\n\nexport interface NameValue {\n  ref: ValueReference // this is the reference to any value that can be referred to from generated code via `globals` var in the closure\n  key?: unknown // any key to identify a global to avoid duplicates, if not passed ref is used\n  code?: Code // this is the code creating the value needed for standalone code wit_out closure - can be a primitive value, function or import (`require`)\n}\n\nexport type ValueReference = unknown // possibly make CodeGen parameterized type on this type\n\nclass ValueError extends Error {\n  readonly value?: NameValue\n  constructor(name: ValueScopeName) {\n    super(`CodeGen: \"code\" for ${name} not defined`)\n    this.value = name.value\n  }\n}\n\ninterface ScopeOptions {\n  prefixes?: Set<string>\n  parent?: Scope\n}\n\ninterface ValueScopeOptions extends ScopeOptions {\n  scope: ScopeStore\n  es5?: boolean\n  lines?: boolean\n}\n\nexport type ScopeStore = Record<string, ValueReference[] | undefined>\n\ntype ScopeValues = {\n  [Prefix in string]?: Map<unknown, ValueScopeName>\n}\n\nexport type ScopeValueSets = {\n  [Prefix in string]?: Set<ValueScopeName>\n}\n\nexport enum UsedValueState {\n  Started,\n  Completed,\n}\n\nexport type UsedScopeValues = {\n  [Prefix in string]?: Map<ValueScopeName, UsedValueState | undefined>\n}\n\nexport const varKinds = {\n  const: new Name(\"const\"),\n  let: new Name(\"let\"),\n  var: new Name(\"var\"),\n}\n\nexport class Scope {\n  protected readonly _names: {[Prefix in string]?: NameGroup} = {}\n  protected readonly _prefixes?: Set<string>\n  protected readonly _parent?: Scope\n\n  constructor({prefixes, parent}: ScopeOptions = {}) {\n    this._prefixes = prefixes\n    this._parent = parent\n  }\n\n  toName(nameOrPrefix: Name | string): Name {\n    return nameOrPrefix instanceof Name ? nameOrPrefix : this.name(nameOrPrefix)\n  }\n\n  name(prefix: string): Name {\n    return new Name(this._newName(prefix))\n  }\n\n  protected _newName(prefix: string): string {\n    const ng = this._names[prefix] || this._nameGroup(prefix)\n    return `${prefix}${ng.index++}`\n  }\n\n  private _nameGroup(prefix: string): NameGroup {\n    if (this._parent?._prefixes?.has(prefix) || (this._prefixes && !this._prefixes.has(prefix))) {\n      throw new Error(`CodeGen: prefix \"${prefix}\" is not allowed in this scope`)\n    }\n    return (this._names[prefix] = {prefix, index: 0})\n  }\n}\n\ninterface ScopePath {\n  property: string\n  itemIndex: number\n}\n\nexport class ValueScopeName extends Name {\n  readonly prefix: string\n  value?: NameValue\n  scopePath?: Code\n\n  constructor(prefix: string, nameStr: string) {\n    super(nameStr)\n    this.prefix = prefix\n  }\n\n  setValue(value: NameValue, {property, itemIndex}: ScopePath): void {\n    this.value = value\n    this.scopePath = _`.${new Name(property)}[${itemIndex}]`\n  }\n}\n\ninterface VSOptions extends ValueScopeOptions {\n  _n: Code\n}\n\nconst line = _`\\n`\n\nexport class ValueScope extends Scope {\n  protected readonly _values: ScopeValues = {}\n  protected readonly _scope: ScopeStore\n  readonly opts: VSOptions\n\n  constructor(opts: ValueScopeOptions) {\n    super(opts)\n    this._scope = opts.scope\n    this.opts = {...opts, _n: opts.lines ? line : nil}\n  }\n\n  get(): ScopeStore {\n    return this._scope\n  }\n\n  name(prefix: string): ValueScopeName {\n    return new ValueScopeName(prefix, this._newName(prefix))\n  }\n\n  value(nameOrPrefix: ValueScopeName | string, value: NameValue): ValueScopeName {\n    if (value.ref === undefined) throw new Error(\"CodeGen: ref must be passed in value\")\n    const name = this.toName(nameOrPrefix) as ValueScopeName\n    const {prefix} = name\n    const valueKey = value.key ?? value.ref\n    let vs = this._values[prefix]\n    if (vs) {\n      const _name = vs.get(valueKey)\n      if (_name) return _name\n    } else {\n      vs = this._values[prefix] = new Map()\n    }\n    vs.set(valueKey, name)\n\n    const s = this._scope[prefix] || (this._scope[prefix] = [])\n    const itemIndex = s.length\n    s[itemIndex] = value.ref\n    name.setValue(value, {property: prefix, itemIndex})\n    return name\n  }\n\n  getValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    const vs = this._values[prefix]\n    if (!vs) return\n    return vs.get(keyOrRef)\n  }\n\n  scopeRefs(scopeName: Name, values: ScopeValues | ScopeValueSets = this._values): Code {\n    return this._reduceValues(values, (name: ValueScopeName) => {\n      if (name.scopePath === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n      return _`${scopeName}${name.scopePath}`\n    })\n  }\n\n  scopeCode(\n    values: ScopeValues | ScopeValueSets = this._values,\n    usedValues?: UsedScopeValues,\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    return this._reduceValues(\n      values,\n      (name: ValueScopeName) => {\n        if (name.value === undefined) throw new Error(`CodeGen: name \"${name}\" has no value`)\n        return name.value.code\n      },\n      usedValues,\n      getCode\n    )\n  }\n\n  private _reduceValues(\n    values: ScopeValues | ScopeValueSets,\n    valueCode: (n: ValueScopeName) => Code | undefined,\n    usedValues: UsedScopeValues = {},\n    getCode?: (n: ValueScopeName) => Code | undefined\n  ): Code {\n    let code: Code = nil\n    for (const prefix in values) {\n      const vs = values[prefix]\n      if (!vs) continue\n      const nameSet = (usedValues[prefix] = usedValues[prefix] || new Map())\n      vs.forEach((name: ValueScopeName) => {\n        if (nameSet.has(name)) return\n        nameSet.set(name, UsedValueState.Started)\n        let c = valueCode(name)\n        if (c) {\n          const def = this.opts.es5 ? varKinds.var : varKinds.const\n          code = _`${code}${def} ${name} = ${c};${this.opts._n}`\n        } else if ((c = getCode?.(name))) {\n          code = _`${code}${c}${this.opts._n}`\n        } else {\n          throw new ValueError(name)\n        }\n        nameSet.set(name, UsedValueState.Completed)\n      })\n    }\n    return code\n  }\n}\n","import type {ScopeValueSets, NameValue, ValueScope, ValueScopeName} from \"./scope\"\nimport {_, nil, _Code, Code, Name, UsedNames, CodeItem, addCodeArg, _CodeOrName} from \"./code\"\nimport {Scope, varKinds} from \"./scope\"\n\nexport {_, str, strConcat, nil, getProperty, stringify, regexpCode, Name, Code} from \"./code\"\nexport {Scope, ScopeStore, ValueScope, ValueScopeName, ScopeValueSets, varKinds} from \"./scope\"\n\n// type for expressions that can be safely inserted in code without quotes\nexport type SafeExpr = Code | number | boolean | null\n\n// type that is either Code of function that adds code to CodeGen instance using its methods\nexport type Block = Code | (() => void)\n\nexport const operators = {\n  GT: new _Code(\">\"),\n  GTE: new _Code(\">=\"),\n  LT: new _Code(\"<\"),\n  LTE: new _Code(\"<=\"),\n  EQ: new _Code(\"===\"),\n  NEQ: new _Code(\"!==\"),\n  NOT: new _Code(\"!\"),\n  OR: new _Code(\"||\"),\n  AND: new _Code(\"&&\"),\n  ADD: new _Code(\"+\"),\n}\n\nabstract class Node {\n  abstract readonly names: UsedNames\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    return this\n  }\n\n  optimizeNames(_names: UsedNames, _constants: Constants): this | undefined {\n    return this\n  }\n\n  // get count(): number {\n  //   return 1\n  // }\n}\n\nclass Def extends Node {\n  constructor(private readonly varKind: Name, private readonly name: Name, private rhs?: SafeExpr) {\n    super()\n  }\n\n  render({es5, _n}: CGOptions): string {\n    const varKind = es5 ? varKinds.var : this.varKind\n    const rhs = this.rhs === undefined ? \"\" : ` = ${this.rhs}`\n    return `${varKind} ${this.name}${rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!names[this.name.str]) return\n    if (this.rhs) this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.rhs instanceof _CodeOrName ? this.rhs.names : {}\n  }\n}\n\nclass Assign extends Node {\n  constructor(readonly lhs: Code, public rhs: SafeExpr, private readonly sideEffects?: boolean) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} = ${this.rhs};` + _n\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (this.lhs instanceof Name && !names[this.lhs.str] && !this.sideEffects) return\n    this.rhs = optimizeExpr(this.rhs, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = this.lhs instanceof Name ? {} : {...this.lhs.names}\n    return addExprNames(names, this.rhs)\n  }\n}\n\nclass AssignOp extends Assign {\n  constructor(lhs: Code, private readonly op: Code, rhs: SafeExpr, sideEffects?: boolean) {\n    super(lhs, rhs, sideEffects)\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.lhs} ${this.op}= ${this.rhs};` + _n\n  }\n}\n\nclass Label extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label: Name) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.label}:` + _n\n  }\n}\n\nclass Break extends Node {\n  readonly names: UsedNames = {}\n  constructor(readonly label?: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    const label = this.label ? ` ${this.label}` : \"\"\n    return `break${label};` + _n\n  }\n}\n\nclass Throw extends Node {\n  constructor(readonly error: Code) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `throw ${this.error};` + _n\n  }\n\n  get names(): UsedNames {\n    return this.error.names\n  }\n}\n\nclass AnyCode extends Node {\n  constructor(private code: SafeExpr) {\n    super()\n  }\n\n  render({_n}: CGOptions): string {\n    return `${this.code};` + _n\n  }\n\n  optimizeNodes(): this | undefined {\n    return `${this.code}` ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    this.code = optimizeExpr(this.code, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return this.code instanceof _CodeOrName ? this.code.names : {}\n  }\n}\n\nabstract class ParentNode extends Node {\n  constructor(readonly nodes: ChildNode[] = []) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return this.nodes.reduce((code, n) => code + n.render(opts), \"\")\n  }\n\n  optimizeNodes(): this | ChildNode | ChildNode[] | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      const n = nodes[i].optimizeNodes()\n      if (Array.isArray(n)) nodes.splice(i, 1, ...n)\n      else if (n) nodes[i] = n\n      else nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    const {nodes} = this\n    let i = nodes.length\n    while (i--) {\n      // iterating backwards improves 1-pass optimization\n      const n = nodes[i]\n      if (n.optimizeNames(names, constants)) continue\n      subtractNames(names, n.names)\n      nodes.splice(i, 1)\n    }\n    return nodes.length > 0 ? this : undefined\n  }\n\n  get names(): UsedNames {\n    return this.nodes.reduce((names: UsedNames, n) => addNames(names, n.names), {})\n  }\n\n  // get count(): number {\n  //   return this.nodes.reduce((c, n) => c + n.count, 1)\n  // }\n}\n\nabstract class BlockNode extends ParentNode {\n  render(opts: CGOptions): string {\n    return \"{\" + opts._n + super.render(opts) + \"}\" + opts._n\n  }\n}\n\nclass Root extends ParentNode {}\n\nclass Else extends BlockNode {\n  static readonly kind = \"else\"\n}\n\nclass If extends BlockNode {\n  static readonly kind = \"if\"\n  else?: If | Else\n  constructor(private condition: Code | boolean, nodes?: ChildNode[]) {\n    super(nodes)\n  }\n\n  render(opts: CGOptions): string {\n    let code = `if(${this.condition})` + super.render(opts)\n    if (this.else) code += \"else \" + this.else.render(opts)\n    return code\n  }\n\n  optimizeNodes(): If | ChildNode[] | undefined {\n    super.optimizeNodes()\n    const cond = this.condition\n    if (cond === true) return this.nodes // else is ignored here\n    let e = this.else\n    if (e) {\n      const ns = e.optimizeNodes()\n      e = this.else = Array.isArray(ns) ? new Else(ns) : (ns as Else | undefined)\n    }\n    if (e) {\n      if (cond === false) return e instanceof If ? e : e.nodes\n      if (this.nodes.length) return this\n      return new If(not(cond), e instanceof If ? [e] : e.nodes)\n    }\n    if (cond === false || !this.nodes.length) return undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    this.else = this.else?.optimizeNames(names, constants)\n    if (!(super.optimizeNames(names, constants) || this.else)) return\n    this.condition = optimizeExpr(this.condition, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    addExprNames(names, this.condition)\n    if (this.else) addNames(names, this.else.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.else?.count || 0)\n  // }\n}\n\nabstract class For extends BlockNode {\n  static readonly kind = \"for\"\n}\n\nclass ForLoop extends For {\n  constructor(private iteration: Code) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.iteration})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iteration = optimizeExpr(this.iteration, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iteration.names)\n  }\n}\n\nclass ForRange extends For {\n  constructor(\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private readonly from: SafeExpr,\n    private readonly to: SafeExpr\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const varKind = opts.es5 ? varKinds.var : this.varKind\n    const {name, from, to} = this\n    return `for(${varKind} ${name}=${from}; ${name}<${to}; ${name}++)` + super.render(opts)\n  }\n\n  get names(): UsedNames {\n    const names = addExprNames(super.names, this.from)\n    return addExprNames(names, this.to)\n  }\n}\n\nclass ForIter extends For {\n  constructor(\n    private readonly loop: \"of\" | \"in\",\n    private readonly varKind: Name,\n    private readonly name: Name,\n    private iterable: Code\n  ) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `for(${this.varKind} ${this.name} ${this.loop} ${this.iterable})` + super.render(opts)\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this | undefined {\n    if (!super.optimizeNames(names, constants)) return\n    this.iterable = optimizeExpr(this.iterable, names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    return addNames(super.names, this.iterable.names)\n  }\n}\n\nclass Func extends BlockNode {\n  static readonly kind = \"func\"\n  constructor(public name: Name, public args: Code, public async?: boolean) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    const _async = this.async ? \"async \" : \"\"\n    return `${_async}function ${this.name}(${this.args})` + super.render(opts)\n  }\n}\n\nclass Return extends ParentNode {\n  static readonly kind = \"return\"\n\n  render(opts: CGOptions): string {\n    return \"return \" + super.render(opts)\n  }\n}\n\nclass Try extends BlockNode {\n  catch?: Catch\n  finally?: Finally\n\n  render(opts: CGOptions): string {\n    let code = \"try\" + super.render(opts)\n    if (this.catch) code += this.catch.render(opts)\n    if (this.finally) code += this.finally.render(opts)\n    return code\n  }\n\n  optimizeNodes(): this {\n    super.optimizeNodes()\n    this.catch?.optimizeNodes() as Catch | undefined\n    this.finally?.optimizeNodes() as Finally | undefined\n    return this\n  }\n\n  optimizeNames(names: UsedNames, constants: Constants): this {\n    super.optimizeNames(names, constants)\n    this.catch?.optimizeNames(names, constants)\n    this.finally?.optimizeNames(names, constants)\n    return this\n  }\n\n  get names(): UsedNames {\n    const names = super.names\n    if (this.catch) addNames(names, this.catch.names)\n    if (this.finally) addNames(names, this.finally.names)\n    return names\n  }\n\n  // get count(): number {\n  //   return super.count + (this.catch?.count || 0) + (this.finally?.count || 0)\n  // }\n}\n\nclass Catch extends BlockNode {\n  static readonly kind = \"catch\"\n  constructor(readonly error: Name) {\n    super()\n  }\n\n  render(opts: CGOptions): string {\n    return `catch(${this.error})` + super.render(opts)\n  }\n}\n\nclass Finally extends BlockNode {\n  static readonly kind = \"finally\"\n  render(opts: CGOptions): string {\n    return \"finally\" + super.render(opts)\n  }\n}\n\ntype StartBlockNode = If | For | Func | Return | Try\n\ntype LeafNode = Def | Assign | Label | Break | Throw | AnyCode\n\ntype ChildNode = StartBlockNode | LeafNode\n\ntype EndBlockNodeType =\n  | typeof If\n  | typeof Else\n  | typeof For\n  | typeof Func\n  | typeof Return\n  | typeof Catch\n  | typeof Finally\n\ntype Constants = Record<string, SafeExpr | undefined>\n\nexport interface CodeGenOptions {\n  es5?: boolean\n  lines?: boolean\n  ownProperties?: boolean\n}\n\ninterface CGOptions extends CodeGenOptions {\n  _n: \"\\n\" | \"\"\n}\n\nexport class CodeGen {\n  readonly _scope: Scope\n  readonly _extScope: ValueScope\n  readonly _values: ScopeValueSets = {}\n  private readonly _nodes: ParentNode[]\n  private readonly _blockStarts: number[] = []\n  private readonly _constants: Constants = {}\n  private readonly opts: CGOptions\n\n  constructor(extScope: ValueScope, opts: CodeGenOptions = {}) {\n    this.opts = {...opts, _n: opts.lines ? \"\\n\" : \"\"}\n    this._extScope = extScope\n    this._scope = new Scope({parent: extScope})\n    this._nodes = [new Root()]\n  }\n\n  toString(): string {\n    return this._root.render(this.opts)\n  }\n\n  // returns unique name in the internal scope\n  name(prefix: string): Name {\n    return this._scope.name(prefix)\n  }\n\n  // reserves unique name in the external scope\n  scopeName(prefix: string): ValueScopeName {\n    return this._extScope.name(prefix)\n  }\n\n  // reserves unique name in the external scope and assigns value to it\n  scopeValue(prefixOrName: ValueScopeName | string, value: NameValue): Name {\n    const name = this._extScope.value(prefixOrName, value)\n    const vs = this._values[name.prefix] || (this._values[name.prefix] = new Set())\n    vs.add(name)\n    return name\n  }\n\n  getScopeValue(prefix: string, keyOrRef: unknown): ValueScopeName | undefined {\n    return this._extScope.getValue(prefix, keyOrRef)\n  }\n\n  // return code that assigns values in the external scope to the names that are used internally\n  // (same names that were returned by gen.scopeName or gen.scopeValue)\n  scopeRefs(scopeName: Name): Code {\n    return this._extScope.scopeRefs(scopeName, this._values)\n  }\n\n  scopeCode(): Code {\n    return this._extScope.scopeCode(this._values)\n  }\n\n  private _def(\n    varKind: Name,\n    nameOrPrefix: Name | string,\n    rhs?: SafeExpr,\n    constant?: boolean\n  ): Name {\n    const name = this._scope.toName(nameOrPrefix)\n    if (rhs !== undefined && constant) this._constants[name.str] = rhs\n    this._leafNode(new Def(varKind, name, rhs))\n    return name\n  }\n\n  // `const` declaration (`var` in es5 mode)\n  const(nameOrPrefix: Name | string, rhs: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.const, nameOrPrefix, rhs, _constant)\n  }\n\n  // `let` declaration with optional assignment (`var` in es5 mode)\n  let(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.let, nameOrPrefix, rhs, _constant)\n  }\n\n  // `var` declaration with optional assignment\n  var(nameOrPrefix: Name | string, rhs?: SafeExpr, _constant?: boolean): Name {\n    return this._def(varKinds.var, nameOrPrefix, rhs, _constant)\n  }\n\n  // assignment code\n  assign(lhs: Code, rhs: SafeExpr, sideEffects?: boolean): CodeGen {\n    return this._leafNode(new Assign(lhs, rhs, sideEffects))\n  }\n\n  // `+=` code\n  add(lhs: Code, rhs: SafeExpr): CodeGen {\n    return this._leafNode(new AssignOp(lhs, operators.ADD, rhs))\n  }\n\n  // appends passed SafeExpr to code or executes Block\n  code(c: Block | SafeExpr): CodeGen {\n    if (typeof c == \"function\") c()\n    else if (c !== nil) this._leafNode(new AnyCode(c))\n    return this\n  }\n\n  // returns code for object literal for the passed argument list of key-value pairs\n  object(...keyValues: [Name | string, SafeExpr | string][]): _Code {\n    const code: CodeItem[] = [\"{\"]\n    for (const [key, value] of keyValues) {\n      if (code.length > 1) code.push(\",\")\n      code.push(key)\n      if (key !== value || this.opts.es5) {\n        code.push(\":\")\n        addCodeArg(code, value)\n      }\n    }\n    code.push(\"}\")\n    return new _Code(code)\n  }\n\n  // `if` clause (or statement if `thenBody` and, optionally, `elseBody` are passed)\n  if(condition: Code | boolean, thenBody?: Block, elseBody?: Block): CodeGen {\n    this._blockNode(new If(condition))\n\n    if (thenBody && elseBody) {\n      this.code(thenBody).else().code(elseBody).endIf()\n    } else if (thenBody) {\n      this.code(thenBody).endIf()\n    } else if (elseBody) {\n      throw new Error('CodeGen: \"else\" body without \"then\" body')\n    }\n    return this\n  }\n\n  // `else if` clause - invalid without `if` or after `else` clauses\n  elseIf(condition: Code | boolean): CodeGen {\n    return this._elseNode(new If(condition))\n  }\n\n  // `else` clause - only valid after `if` or `else if` clauses\n  else(): CodeGen {\n    return this._elseNode(new Else())\n  }\n\n  // end `if` statement (needed if gen.if was used only with condition)\n  endIf(): CodeGen {\n    return this._endBlockNode(If, Else)\n  }\n\n  private _for(node: For, forBody?: Block): CodeGen {\n    this._blockNode(node)\n    if (forBody) this.code(forBody).endFor()\n    return this\n  }\n\n  // a generic `for` clause (or statement if `forBody` is passed)\n  for(iteration: Code, forBody?: Block): CodeGen {\n    return this._for(new ForLoop(iteration), forBody)\n  }\n\n  // `for` statement for a range of values\n  forRange(\n    nameOrPrefix: Name | string,\n    from: SafeExpr,\n    to: SafeExpr,\n    forBody: (index: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.let\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForRange(varKind, name, from, to), () => forBody(name))\n  }\n\n  // `for-of` statement (in es5 mode replace with a normal for loop)\n  forOf(\n    nameOrPrefix: Name | string,\n    iterable: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = varKinds.const\n  ): CodeGen {\n    const name = this._scope.toName(nameOrPrefix)\n    if (this.opts.es5) {\n      const arr = iterable instanceof Name ? iterable : this.var(\"_arr\", iterable)\n      return this.forRange(\"_i\", 0, _`${arr}.length`, (i) => {\n        this.var(name, _`${arr}[${i}]`)\n        forBody(name)\n      })\n    }\n    return this._for(new ForIter(\"of\", varKind, name, iterable), () => forBody(name))\n  }\n\n  // `for-in` statement.\n  // With option `ownProperties` replaced with a `for-of` loop for object keys\n  forIn(\n    nameOrPrefix: Name | string,\n    obj: Code,\n    forBody: (item: Name) => void,\n    varKind: Code = this.opts.es5 ? varKinds.var : varKinds.const\n  ): CodeGen {\n    if (this.opts.ownProperties) {\n      return this.forOf(nameOrPrefix, _`Object.keys(${obj})`, forBody)\n    }\n    const name = this._scope.toName(nameOrPrefix)\n    return this._for(new ForIter(\"in\", varKind, name, obj), () => forBody(name))\n  }\n\n  // end `for` loop\n  endFor(): CodeGen {\n    return this._endBlockNode(For)\n  }\n\n  // `label` statement\n  label(label: Name): CodeGen {\n    return this._leafNode(new Label(label))\n  }\n\n  // `break` statement\n  break(label?: Code): CodeGen {\n    return this._leafNode(new Break(label))\n  }\n\n  // `return` statement\n  return(value: Block | SafeExpr): CodeGen {\n    const node = new Return()\n    this._blockNode(node)\n    this.code(value)\n    if (node.nodes.length !== 1) throw new Error('CodeGen: \"return\" should have one node')\n    return this._endBlockNode(Return)\n  }\n\n  // `try` statement\n  try(tryBody: Block, catchCode?: (e: Name) => void, finallyCode?: Block): CodeGen {\n    if (!catchCode && !finallyCode) throw new Error('CodeGen: \"try\" without \"catch\" and \"finally\"')\n    const node = new Try()\n    this._blockNode(node)\n    this.code(tryBody)\n    if (catchCode) {\n      const error = this.name(\"e\")\n      this._currNode = node.catch = new Catch(error)\n      catchCode(error)\n    }\n    if (finallyCode) {\n      this._currNode = node.finally = new Finally()\n      this.code(finallyCode)\n    }\n    return this._endBlockNode(Catch, Finally)\n  }\n\n  // `throw` statement\n  throw(error: Code): CodeGen {\n    return this._leafNode(new Throw(error))\n  }\n\n  // start self-balancing block\n  block(body?: Block, nodeCount?: number): CodeGen {\n    this._blockStarts.push(this._nodes.length)\n    if (body) this.code(body).endBlock(nodeCount)\n    return this\n  }\n\n  // end the current self-balancing block\n  endBlock(nodeCount?: number): CodeGen {\n    const len = this._blockStarts.pop()\n    if (len === undefined) throw new Error(\"CodeGen: not in self-balancing block\")\n    const toClose = this._nodes.length - len\n    if (toClose < 0 || (nodeCount !== undefined && toClose !== nodeCount)) {\n      throw new Error(`CodeGen: wrong number of nodes: ${toClose} vs ${nodeCount} expected`)\n    }\n    this._nodes.length = len\n    return this\n  }\n\n  // `function` heading (or definition if funcBody is passed)\n  func(name: Name, args: Code = nil, async?: boolean, funcBody?: Block): CodeGen {\n    this._blockNode(new Func(name, args, async))\n    if (funcBody) this.code(funcBody).endFunc()\n    return this\n  }\n\n  // end function definition\n  endFunc(): CodeGen {\n    return this._endBlockNode(Func)\n  }\n\n  optimize(n = 1): void {\n    while (n-- > 0) {\n      this._root.optimizeNodes()\n      this._root.optimizeNames(this._root.names, this._constants)\n    }\n  }\n\n  private _leafNode(node: LeafNode): CodeGen {\n    this._currNode.nodes.push(node)\n    return this\n  }\n\n  private _blockNode(node: StartBlockNode): void {\n    this._currNode.nodes.push(node)\n    this._nodes.push(node)\n  }\n\n  private _endBlockNode(N1: EndBlockNodeType, N2?: EndBlockNodeType): CodeGen {\n    const n = this._currNode\n    if (n instanceof N1 || (N2 && n instanceof N2)) {\n      this._nodes.pop()\n      return this\n    }\n    throw new Error(`CodeGen: not in block \"${N2 ? `${N1.kind}/${N2.kind}` : N1.kind}\"`)\n  }\n\n  private _elseNode(node: If | Else): CodeGen {\n    const n = this._currNode\n    if (!(n instanceof If)) {\n      throw new Error('CodeGen: \"else\" without \"if\"')\n    }\n    this._currNode = n.else = node\n    return this\n  }\n\n  private get _root(): Root {\n    return this._nodes[0] as Root\n  }\n\n  private get _currNode(): ParentNode {\n    const ns = this._nodes\n    return ns[ns.length - 1]\n  }\n\n  private set _currNode(node: ParentNode) {\n    const ns = this._nodes\n    ns[ns.length - 1] = node\n  }\n\n  // get nodeCount(): number {\n  //   return this._root.count\n  // }\n}\n\nfunction addNames(names: UsedNames, from: UsedNames): UsedNames {\n  for (const n in from) names[n] = (names[n] || 0) + (from[n] || 0)\n  return names\n}\n\nfunction addExprNames(names: UsedNames, from: SafeExpr): UsedNames {\n  return from instanceof _CodeOrName ? addNames(names, from.names) : names\n}\n\nfunction optimizeExpr<T extends SafeExpr | Code>(expr: T, names: UsedNames, constants: Constants): T\nfunction optimizeExpr(expr: SafeExpr, names: UsedNames, constants: Constants): SafeExpr {\n  if (expr instanceof Name) return replaceName(expr)\n  if (!canOptimize(expr)) return expr\n  return new _Code(\n    expr._items.reduce((items: CodeItem[], c: SafeExpr | string) => {\n      if (c instanceof Name) c = replaceName(c)\n      if (c instanceof _Code) items.push(...c._items)\n      else items.push(c)\n      return items\n    }, [])\n  )\n\n  function replaceName(n: Name): SafeExpr {\n    const c = constants[n.str]\n    if (c === undefined || names[n.str] !== 1) return n\n    delete names[n.str]\n    return c\n  }\n\n  function canOptimize(e: SafeExpr): e is _Code {\n    return (\n      e instanceof _Code &&\n      e._items.some(\n        (c) => c instanceof Name && names[c.str] === 1 && constants[c.str] !== undefined\n      )\n    )\n  }\n}\n\nfunction subtractNames(names: UsedNames, from: UsedNames): void {\n  for (const n in from) names[n] = (names[n] || 0) - (from[n] || 0)\n}\n\nexport function not<T extends Code | SafeExpr>(x: T): T\nexport function not(x: Code | SafeExpr): Code | SafeExpr {\n  return typeof x == \"boolean\" || typeof x == \"number\" || x === null ? !x : _`!${par(x)}`\n}\n\nconst andCode = mappend(operators.AND)\n\n// boolean AND (&&) expression with the passed arguments\nexport function and(...args: Code[]): Code {\n  return args.reduce(andCode)\n}\n\nconst orCode = mappend(operators.OR)\n\n// boolean OR (||) expression with the passed arguments\nexport function or(...args: Code[]): Code {\n  return args.reduce(orCode)\n}\n\ntype MAppend = (x: Code, y: Code) => Code\n\nfunction mappend(op: Code): MAppend {\n  return (x, y) => (x === nil ? y : y === nil ? x : _`${par(x)} ${op} ${par(y)}`)\n}\n\nfunction par(x: Code): Code {\n  return x instanceof Name ? x : _`(${x})`\n}\n","import type {AnySchema, EvaluatedProperties, EvaluatedItems} from \"../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \".\"\nimport {_, getProperty, Code, Name, CodeGen} from \"./codegen\"\nimport {_Code} from \"./codegen/code\"\nimport type {Rule, ValidationRules} from \"./rules\"\n\n// TODO refactor to use Set\nexport function toHash<T extends string = string>(arr: T[]): {[K in T]?: true} {\n  const hash: {[K in T]?: true} = {}\n  for (const item of arr) hash[item] = true\n  return hash\n}\n\nexport function alwaysValidSchema(it: SchemaCxt, schema: AnySchema): boolean | void {\n  if (typeof schema == \"boolean\") return schema\n  if (Object.keys(schema).length === 0) return true\n  checkUnknownRules(it, schema)\n  return !schemaHasRules(schema, it.self.RULES.all)\n}\n\nexport function checkUnknownRules(it: SchemaCxt, schema: AnySchema = it.schema): void {\n  const {opts, self} = it\n  if (!opts.strictSchema) return\n  if (typeof schema === \"boolean\") return\n  const rules = self.RULES.keywords\n  for (const key in schema) {\n    if (!rules[key]) checkStrictMode(it, `unknown keyword: \"${key}\"`)\n  }\n}\n\nexport function schemaHasRules(\n  schema: AnySchema,\n  rules: {[Key in string]?: boolean | Rule}\n): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (rules[key]) return true\n  return false\n}\n\nexport function schemaHasRulesButRef(schema: AnySchema, RULES: ValidationRules): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (key !== \"$ref\" && RULES.all[key]) return true\n  return false\n}\n\nexport function schemaRefOrVal(\n  {topSchemaRef, schemaPath}: SchemaObjCxt,\n  schema: unknown,\n  keyword: string,\n  $data?: string | false\n): Code | number | boolean {\n  if (!$data) {\n    if (typeof schema == \"number\" || typeof schema == \"boolean\") return schema\n    if (typeof schema == \"string\") return _`${schema}`\n  }\n  return _`${topSchemaRef}${schemaPath}${getProperty(keyword)}`\n}\n\nexport function unescapeFragment(str: string): string {\n  return unescapeJsonPointer(decodeURIComponent(str))\n}\n\nexport function escapeFragment(str: string | number): string {\n  return encodeURIComponent(escapeJsonPointer(str))\n}\n\nexport function escapeJsonPointer(str: string | number): string {\n  if (typeof str == \"number\") return `${str}`\n  return str.replace(/~/g, \"~0\").replace(/\\//g, \"~1\")\n}\n\nexport function unescapeJsonPointer(str: string): string {\n  return str.replace(/~1/g, \"/\").replace(/~0/g, \"~\")\n}\n\nexport function eachItem<T>(xs: T | T[], f: (x: T) => void): void {\n  if (Array.isArray(xs)) {\n    for (const x of xs) f(x)\n  } else {\n    f(xs)\n  }\n}\n\ntype SomeEvaluated = EvaluatedProperties | EvaluatedItems\n\ntype MergeEvaluatedFunc<T extends SomeEvaluated> = (\n  gen: CodeGen,\n  from: Name | T,\n  to: Name | Exclude<T, true> | undefined,\n  toName?: typeof Name\n) => Name | T\n\ninterface MakeMergeFuncArgs<T extends SomeEvaluated> {\n  mergeNames: (gen: CodeGen, from: Name, to: Name) => void\n  mergeToName: (gen: CodeGen, from: T, to: Name) => void\n  mergeValues: (from: T, to: Exclude<T, true>) => T\n  resultToName: (gen: CodeGen, res?: T) => Name\n}\n\nfunction makeMergeEvaluated<T extends SomeEvaluated>({\n  mergeNames,\n  mergeToName,\n  mergeValues,\n  resultToName,\n}: MakeMergeFuncArgs<T>): MergeEvaluatedFunc<T> {\n  return (gen, from, to, toName) => {\n    const res =\n      to === undefined\n        ? from\n        : to instanceof Name\n        ? (from instanceof Name ? mergeNames(gen, from, to) : mergeToName(gen, from, to), to)\n        : from instanceof Name\n        ? (mergeToName(gen, to, from), from)\n        : mergeValues(from, to)\n    return toName === Name && !(res instanceof Name) ? resultToName(gen, res) : res\n  }\n}\n\ninterface MergeEvaluated {\n  props: MergeEvaluatedFunc<EvaluatedProperties>\n  items: MergeEvaluatedFunc<EvaluatedItems>\n}\n\nexport const mergeEvaluated: MergeEvaluated = {\n  props: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () => {\n        gen.if(\n          _`${from} === true`,\n          () => gen.assign(to, true),\n          () => gen.assign(to, _`${to} || {}`).code(_`Object.assign(${to}, ${from})`)\n        )\n      }),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () => {\n        if (from === true) {\n          gen.assign(to, true)\n        } else {\n          gen.assign(to, _`${to} || {}`)\n          setEvaluated(gen, to, from)\n        }\n      }),\n    mergeValues: (from, to) => (from === true ? true : {...from, ...to}),\n    resultToName: evaluatedPropsToName,\n  }),\n  items: makeMergeEvaluated({\n    mergeNames: (gen, from, to) =>\n      gen.if(_`${to} !== true && ${from} !== undefined`, () =>\n        gen.assign(to, _`${from} === true ? true : ${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeToName: (gen, from, to) =>\n      gen.if(_`${to} !== true`, () =>\n        gen.assign(to, from === true ? true : _`${to} > ${from} ? ${to} : ${from}`)\n      ),\n    mergeValues: (from, to) => (from === true ? true : Math.max(from, to)),\n    resultToName: (gen, items) => gen.var(\"items\", items),\n  }),\n}\n\nexport function evaluatedPropsToName(gen: CodeGen, ps?: EvaluatedProperties): Name {\n  if (ps === true) return gen.var(\"props\", true)\n  const props = gen.var(\"props\", _`{}`)\n  if (ps !== undefined) setEvaluated(gen, props, ps)\n  return props\n}\n\nexport function setEvaluated(gen: CodeGen, props: Name, ps: {[K in string]?: true}): void {\n  Object.keys(ps).forEach((p) => gen.assign(_`${props}${getProperty(p)}`, true))\n}\n\nconst snippets: {[S in string]?: _Code} = {}\n\nexport function useFunc(gen: CodeGen, f: {code: string}): Name {\n  return gen.scopeValue(\"func\", {\n    ref: f,\n    code: snippets[f.code] || (snippets[f.code] = new _Code(f.code)),\n  })\n}\n\nexport enum Type {\n  Num,\n  Str,\n}\n\nexport function getErrorPath(\n  dataProp: Name | string | number,\n  dataPropType?: Type,\n  jsPropertySyntax?: boolean\n): Code | string {\n  // let path\n  if (dataProp instanceof Name) {\n    const isNumber = dataPropType === Type.Num\n    return jsPropertySyntax\n      ? isNumber\n        ? _`\"[\" + ${dataProp} + \"]\"`\n        : _`\"['\" + ${dataProp} + \"']\"`\n      : isNumber\n      ? _`\"/\" + ${dataProp}`\n      : _`\"/\" + ${dataProp}.replace(/~/g, \"~0\").replace(/\\\\//g, \"~1\")` // TODO maybe use global escapePointer\n  }\n  return jsPropertySyntax ? getProperty(dataProp).toString() : \"/\" + escapeJsonPointer(dataProp)\n}\n\nexport function checkStrictMode(\n  it: SchemaCxt,\n  msg: string,\n  mode: boolean | \"log\" = it.opts.strictSchema\n): void {\n  if (!mode) return\n  msg = `strict mode: ${msg}`\n  if (mode === true) throw new Error(msg)\n  it.self.logger.warn(msg)\n}\n","import {Name} from \"./codegen\"\n\nconst names = {\n  // validation function arguments\n  data: new Name(\"data\"), // data passed to validation function\n  // args passed from referencing schema\n  valCxt: new Name(\"valCxt\"), // validation/data context - should not be used directly, it is destructured to the names below\n  instancePath: new Name(\"instancePath\"),\n  parentData: new Name(\"parentData\"),\n  parentDataProperty: new Name(\"parentDataProperty\"),\n  rootData: new Name(\"rootData\"), // root data - same as the data passed to the first/top validation function\n  dynamicAnchors: new Name(\"dynamicAnchors\"), // used to support recursiveRef and dynamicRef\n  // function scoped variables\n  vErrors: new Name(\"vErrors\"), // null or array of validation errors\n  errors: new Name(\"errors\"), // counter of validation errors\n  this: new Name(\"this\"),\n  // \"globals\"\n  self: new Name(\"self\"),\n  scope: new Name(\"scope\"),\n  // JTD serialize/parse name for JSON string and position\n  json: new Name(\"json\"),\n  jsonPos: new Name(\"jsonPos\"),\n  jsonLen: new Name(\"jsonLen\"),\n  jsonPart: new Name(\"jsonPart\"),\n}\n\nexport default names\n","import type {KeywordErrorCxt, KeywordErrorDefinition} from \"../types\"\nimport type {SchemaCxt} from \"./index\"\nimport {CodeGen, _, str, strConcat, Code, Name} from \"./codegen\"\nimport {SafeExpr} from \"./codegen/code\"\nimport {getErrorPath, Type} from \"./util\"\nimport N from \"./names\"\n\nexport const keywordError: KeywordErrorDefinition = {\n  message: ({keyword}) => str`must pass \"${keyword}\" keyword validation`,\n}\n\nexport const keyword$DataError: KeywordErrorDefinition = {\n  message: ({keyword, schemaType}) =>\n    schemaType\n      ? str`\"${keyword}\" keyword must be ${schemaType} ($data)`\n      : str`\"${keyword}\" keyword is invalid ($data)`,\n}\n\nexport interface ErrorPaths {\n  instancePath?: Code\n  schemaPath?: string\n  parentSchema?: boolean\n}\n\nexport function reportError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths,\n  overrideAllErrors?: boolean\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  if (overrideAllErrors ?? (compositeRule || allErrors)) {\n    addError(gen, errObj)\n  } else {\n    returnErrors(it, _`[${errObj}]`)\n  }\n}\n\nexport function reportExtraError(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition = keywordError,\n  errorPaths?: ErrorPaths\n): void {\n  const {it} = cxt\n  const {gen, compositeRule, allErrors} = it\n  const errObj = errorObjectCode(cxt, error, errorPaths)\n  addError(gen, errObj)\n  if (!(compositeRule || allErrors)) {\n    returnErrors(it, N.vErrors)\n  }\n}\n\nexport function resetErrorsCount(gen: CodeGen, errsCount: Name): void {\n  gen.assign(N.errors, errsCount)\n  gen.if(_`${N.vErrors} !== null`, () =>\n    gen.if(\n      errsCount,\n      () => gen.assign(_`${N.vErrors}.length`, errsCount),\n      () => gen.assign(N.vErrors, null)\n    )\n  )\n}\n\nexport function extendErrors({\n  gen,\n  keyword,\n  schemaValue,\n  data,\n  errsCount,\n  it,\n}: KeywordErrorCxt): void {\n  /* istanbul ignore if */\n  if (errsCount === undefined) throw new Error(\"ajv implementation error\")\n  const err = gen.name(\"err\")\n  gen.forRange(\"i\", errsCount, N.errors, (i) => {\n    gen.const(err, _`${N.vErrors}[${i}]`)\n    gen.if(_`${err}.instancePath === undefined`, () =>\n      gen.assign(_`${err}.instancePath`, strConcat(N.instancePath, it.errorPath))\n    )\n    gen.assign(_`${err}.schemaPath`, str`${it.errSchemaPath}/${keyword}`)\n    if (it.opts.verbose) {\n      gen.assign(_`${err}.schema`, schemaValue)\n      gen.assign(_`${err}.data`, data)\n    }\n  })\n}\n\nfunction addError(gen: CodeGen, errObj: Code): void {\n  const err = gen.const(\"err\", errObj)\n  gen.if(\n    _`${N.vErrors} === null`,\n    () => gen.assign(N.vErrors, _`[${err}]`),\n    _`${N.vErrors}.push(${err})`\n  )\n  gen.code(_`${N.errors}++`)\n}\n\nfunction returnErrors(it: SchemaCxt, errs: Code): void {\n  const {gen, validateName, schemaEnv} = it\n  if (schemaEnv.$async) {\n    gen.throw(_`new ${it.ValidationError as Name}(${errs})`)\n  } else {\n    gen.assign(_`${validateName}.errors`, errs)\n    gen.return(false)\n  }\n}\n\nconst E = {\n  keyword: new Name(\"keyword\"),\n  schemaPath: new Name(\"schemaPath\"), // also used in JTD errors\n  params: new Name(\"params\"),\n  propertyName: new Name(\"propertyName\"),\n  message: new Name(\"message\"),\n  schema: new Name(\"schema\"),\n  parentSchema: new Name(\"parentSchema\"),\n}\n\nfunction errorObjectCode(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths?: ErrorPaths\n): Code {\n  const {createErrors} = cxt.it\n  if (createErrors === false) return _`{}`\n  return errorObject(cxt, error, errorPaths)\n}\n\nfunction errorObject(\n  cxt: KeywordErrorCxt,\n  error: KeywordErrorDefinition,\n  errorPaths: ErrorPaths = {}\n): Code {\n  const {gen, it} = cxt\n  const keyValues: [Name, SafeExpr | string][] = [\n    errorInstancePath(it, errorPaths),\n    errorSchemaPath(cxt, errorPaths),\n  ]\n  extraErrorProps(cxt, error, keyValues)\n  return gen.object(...keyValues)\n}\n\nfunction errorInstancePath({errorPath}: SchemaCxt, {instancePath}: ErrorPaths): [Name, Code] {\n  const instPath = instancePath\n    ? str`${errorPath}${getErrorPath(instancePath, Type.Str)}`\n    : errorPath\n  return [N.instancePath, strConcat(N.instancePath, instPath)]\n}\n\nfunction errorSchemaPath(\n  {keyword, it: {errSchemaPath}}: KeywordErrorCxt,\n  {schemaPath, parentSchema}: ErrorPaths\n): [Name, string | Code] {\n  let schPath = parentSchema ? errSchemaPath : str`${errSchemaPath}/${keyword}`\n  if (schemaPath) {\n    schPath = str`${schPath}${getErrorPath(schemaPath, Type.Str)}`\n  }\n  return [E.schemaPath, schPath]\n}\n\nfunction extraErrorProps(\n  cxt: KeywordErrorCxt,\n  {params, message}: KeywordErrorDefinition,\n  keyValues: [Name, SafeExpr | string][]\n): void {\n  const {keyword, data, schemaValue, it} = cxt\n  const {opts, propertyName, topSchemaRef, schemaPath} = it\n  keyValues.push(\n    [E.keyword, keyword],\n    [E.params, typeof params == \"function\" ? params(cxt) : params || _`{}`]\n  )\n  if (opts.messages) {\n    keyValues.push([E.message, typeof message == \"function\" ? message(cxt) : message])\n  }\n  if (opts.verbose) {\n    keyValues.push(\n      [E.schema, schemaValue],\n      [E.parentSchema, _`${topSchemaRef}${schemaPath}`],\n      [N.data, data]\n    )\n  }\n  if (propertyName) keyValues.push([E.propertyName, propertyName])\n}\n","import type {KeywordErrorDefinition, KeywordErrorCxt} from \"../../types\"\nimport type {SchemaCxt} from \"..\"\nimport {reportError} from \"../errors\"\nimport {_, Name} from \"../codegen\"\nimport N from \"../names\"\n\nconst boolError: KeywordErrorDefinition = {\n  message: \"boolean schema is false\",\n}\n\nexport function topBoolOrEmptySchema(it: SchemaCxt): void {\n  const {gen, schema, validateName} = it\n  if (schema === false) {\n    falseSchemaError(it, false)\n  } else if (typeof schema == \"object\" && schema.$async === true) {\n    gen.return(N.data)\n  } else {\n    gen.assign(_`${validateName}.errors`, null)\n    gen.return(true)\n  }\n}\n\nexport function boolOrEmptySchema(it: SchemaCxt, valid: Name): void {\n  const {gen, schema} = it\n  if (schema === false) {\n    gen.var(valid, false) // TODO var\n    falseSchemaError(it)\n  } else {\n    gen.var(valid, true) // TODO var\n  }\n}\n\nfunction falseSchemaError(it: SchemaCxt, overrideAllErrors?: boolean): void {\n  const {gen, data} = it\n  // TODO maybe some other interface should be used for non-keyword validation errors...\n  const cxt: KeywordErrorCxt = {\n    gen,\n    keyword: \"false schema\",\n    data,\n    schema: false,\n    schemaCode: false,\n    schemaValue: false,\n    params: {},\n    it,\n  }\n  reportError(cxt, boolError, undefined, overrideAllErrors)\n}\n","import type {AddedKeywordDefinition} from \"../types\"\n\nconst _jsonTypes = [\"string\", \"number\", \"integer\", \"boolean\", \"null\", \"object\", \"array\"] as const\n\nexport type JSONType = typeof _jsonTypes[number]\n\nconst jsonTypes: Set<string> = new Set(_jsonTypes)\n\nexport function isJSONType(x: unknown): x is JSONType {\n  return typeof x == \"string\" && jsonTypes.has(x)\n}\n\ntype ValidationTypes = {\n  [K in JSONType]: boolean | RuleGroup | undefined\n}\n\nexport interface ValidationRules {\n  rules: RuleGroup[]\n  post: RuleGroup\n  all: {[Key in string]?: boolean | Rule} // rules that have to be validated\n  keywords: {[Key in string]?: boolean} // all known keywords (superset of \"all\")\n  types: ValidationTypes\n}\n\nexport interface RuleGroup {\n  type?: JSONType\n  rules: Rule[]\n}\n\n// This interface wraps KeywordDefinition because definition can have multiple keywords\nexport interface Rule {\n  keyword: string\n  definition: AddedKeywordDefinition\n}\n\nexport function getRules(): ValidationRules {\n  const groups: Record<\"number\" | \"string\" | \"array\" | \"object\", RuleGroup> = {\n    number: {type: \"number\", rules: []},\n    string: {type: \"string\", rules: []},\n    array: {type: \"array\", rules: []},\n    object: {type: \"object\", rules: []},\n  }\n  return {\n    types: {...groups, integer: true, boolean: true, null: true},\n    rules: [{rules: []}, groups.number, groups.string, groups.array, groups.object],\n    post: {rules: []},\n    all: {},\n    keywords: {},\n  }\n}\n","import type {AnySchemaObject} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport type {JSONType, RuleGroup, Rule} from \"../rules\"\n\nexport function schemaHasRulesForType(\n  {schema, self}: SchemaObjCxt,\n  type: JSONType\n): boolean | undefined {\n  const group = self.RULES.types[type]\n  return group && group !== true && shouldUseGroup(schema, group)\n}\n\nexport function shouldUseGroup(schema: AnySchemaObject, group: RuleGroup): boolean {\n  return group.rules.some((rule) => shouldUseRule(schema, rule))\n}\n\nexport function shouldUseRule(schema: AnySchemaObject, rule: Rule): boolean | undefined {\n  return (\n    schema[rule.keyword] !== undefined ||\n    rule.definition.implements?.some((kwd) => schema[kwd] !== undefined)\n  )\n}\n","import type {\n  KeywordErrorDefinition,\n  KeywordErrorCxt,\n  ErrorObject,\n  AnySchemaObject,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {isJSONType, JSONType} from \"../rules\"\nimport {schemaHasRulesForType} from \"./applicability\"\nimport {reportError} from \"../errors\"\nimport {_, nil, and, not, operators, Code, Name} from \"../codegen\"\nimport {toHash, schemaRefOrVal} from \"../util\"\n\nexport enum DataType {\n  Correct,\n  Wrong,\n}\n\nexport function getSchemaTypes(schema: AnySchemaObject): JSONType[] {\n  const types = getJSONTypes(schema.type)\n  const hasNull = types.includes(\"null\")\n  if (hasNull) {\n    if (schema.nullable === false) throw new Error(\"type: null contradicts nullable: false\")\n  } else {\n    if (!types.length && schema.nullable !== undefined) {\n      throw new Error('\"nullable\" cannot be used without \"type\"')\n    }\n    if (schema.nullable === true) types.push(\"null\")\n  }\n  return types\n}\n\nexport function getJSONTypes(ts: unknown | unknown[]): JSONType[] {\n  const types: unknown[] = Array.isArray(ts) ? ts : ts ? [ts] : []\n  if (types.every(isJSONType)) return types\n  throw new Error(\"type must be JSONType or JSONType[]: \" + types.join(\",\"))\n}\n\nexport function coerceAndCheckDataType(it: SchemaObjCxt, types: JSONType[]): boolean {\n  const {gen, data, opts} = it\n  const coerceTo = coerceToTypes(types, opts.coerceTypes)\n  const checkTypes =\n    types.length > 0 &&\n    !(coerceTo.length === 0 && types.length === 1 && schemaHasRulesForType(it, types[0]))\n  if (checkTypes) {\n    const wrongType = checkDataTypes(types, data, opts.strictNumbers, DataType.Wrong)\n    gen.if(wrongType, () => {\n      if (coerceTo.length) coerceData(it, types, coerceTo)\n      else reportTypeError(it)\n    })\n  }\n  return checkTypes\n}\n\nconst COERCIBLE: Set<JSONType> = new Set([\"string\", \"number\", \"integer\", \"boolean\", \"null\"])\nfunction coerceToTypes(types: JSONType[], coerceTypes?: boolean | \"array\"): JSONType[] {\n  return coerceTypes\n    ? types.filter((t) => COERCIBLE.has(t) || (coerceTypes === \"array\" && t === \"array\"))\n    : []\n}\n\nfunction coerceData(it: SchemaObjCxt, types: JSONType[], coerceTo: JSONType[]): void {\n  const {gen, data, opts} = it\n  const dataType = gen.let(\"dataType\", _`typeof ${data}`)\n  const coerced = gen.let(\"coerced\", _`undefined`)\n  if (opts.coerceTypes === \"array\") {\n    gen.if(_`${dataType} == 'object' && Array.isArray(${data}) && ${data}.length == 1`, () =>\n      gen\n        .assign(data, _`${data}[0]`)\n        .assign(dataType, _`typeof ${data}`)\n        .if(checkDataTypes(types, data, opts.strictNumbers), () => gen.assign(coerced, data))\n    )\n  }\n  gen.if(_`${coerced} !== undefined`)\n  for (const t of coerceTo) {\n    if (COERCIBLE.has(t) || (t === \"array\" && opts.coerceTypes === \"array\")) {\n      coerceSpecificType(t)\n    }\n  }\n  gen.else()\n  reportTypeError(it)\n  gen.endIf()\n\n  gen.if(_`${coerced} !== undefined`, () => {\n    gen.assign(data, coerced)\n    assignParentData(it, coerced)\n  })\n\n  function coerceSpecificType(t: string): void {\n    switch (t) {\n      case \"string\":\n        gen\n          .elseIf(_`${dataType} == \"number\" || ${dataType} == \"boolean\"`)\n          .assign(coerced, _`\"\" + ${data}`)\n          .elseIf(_`${data} === null`)\n          .assign(coerced, _`\"\"`)\n        return\n      case \"number\":\n        gen\n          .elseIf(\n            _`${dataType} == \"boolean\" || ${data} === null\n              || (${dataType} == \"string\" && ${data} && ${data} == +${data})`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"integer\":\n        gen\n          .elseIf(\n            _`${dataType} === \"boolean\" || ${data} === null\n              || (${dataType} === \"string\" && ${data} && ${data} == +${data} && !(${data} % 1))`\n          )\n          .assign(coerced, _`+${data}`)\n        return\n      case \"boolean\":\n        gen\n          .elseIf(_`${data} === \"false\" || ${data} === 0 || ${data} === null`)\n          .assign(coerced, false)\n          .elseIf(_`${data} === \"true\" || ${data} === 1`)\n          .assign(coerced, true)\n        return\n      case \"null\":\n        gen.elseIf(_`${data} === \"\" || ${data} === 0 || ${data} === false`)\n        gen.assign(coerced, null)\n        return\n\n      case \"array\":\n        gen\n          .elseIf(\n            _`${dataType} === \"string\" || ${dataType} === \"number\"\n              || ${dataType} === \"boolean\" || ${data} === null`\n          )\n          .assign(coerced, _`[${data}]`)\n    }\n  }\n}\n\nfunction assignParentData({gen, parentData, parentDataProperty}: SchemaObjCxt, expr: Name): void {\n  // TODO use gen.property\n  gen.if(_`${parentData} !== undefined`, () =>\n    gen.assign(_`${parentData}[${parentDataProperty}]`, expr)\n  )\n}\n\nexport function checkDataType(\n  dataType: JSONType,\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct = DataType.Correct\n): Code {\n  const EQ = correct === DataType.Correct ? operators.EQ : operators.NEQ\n  let cond: Code\n  switch (dataType) {\n    case \"null\":\n      return _`${data} ${EQ} null`\n    case \"array\":\n      cond = _`Array.isArray(${data})`\n      break\n    case \"object\":\n      cond = _`${data} && typeof ${data} == \"object\" && !Array.isArray(${data})`\n      break\n    case \"integer\":\n      cond = numCond(_`!(${data} % 1) && !isNaN(${data})`)\n      break\n    case \"number\":\n      cond = numCond()\n      break\n    default:\n      return _`typeof ${data} ${EQ} ${dataType}`\n  }\n  return correct === DataType.Correct ? cond : not(cond)\n\n  function numCond(_cond: Code = nil): Code {\n    return and(_`typeof ${data} == \"number\"`, _cond, strictNums ? _`isFinite(${data})` : nil)\n  }\n}\n\nexport function checkDataTypes(\n  dataTypes: JSONType[],\n  data: Name,\n  strictNums?: boolean | \"log\",\n  correct?: DataType\n): Code {\n  if (dataTypes.length === 1) {\n    return checkDataType(dataTypes[0], data, strictNums, correct)\n  }\n  let cond: Code\n  const types = toHash(dataTypes)\n  if (types.array && types.object) {\n    const notObj = _`typeof ${data} != \"object\"`\n    cond = types.null ? notObj : _`!${data} || ${notObj}`\n    delete types.null\n    delete types.array\n    delete types.object\n  } else {\n    cond = nil\n  }\n  if (types.number) delete types.integer\n  for (const t in types) cond = and(cond, checkDataType(t as JSONType, data, strictNums, correct))\n  return cond\n}\n\nexport type TypeError = ErrorObject<\"type\", {type: string}>\n\nconst typeError: KeywordErrorDefinition = {\n  message: ({schema}) => `must be ${schema}`,\n  params: ({schema, schemaValue}) =>\n    typeof schema == \"string\" ? _`{type: ${schema}}` : _`{type: ${schemaValue}}`,\n}\n\nexport function reportTypeError(it: SchemaObjCxt): void {\n  const cxt = getTypeErrorContext(it)\n  reportError(cxt, typeError)\n}\n\nfunction getTypeErrorContext(it: SchemaObjCxt): KeywordErrorCxt {\n  const {gen, data, schema} = it\n  const schemaCode = schemaRefOrVal(it, schema, \"type\")\n  return {\n    gen,\n    keyword: \"type\",\n    data,\n    schema: schema.type,\n    schemaCode,\n    schemaValue: schemaCode,\n    parentSchema: schema,\n    params: {},\n    it,\n  }\n}\n","import type {SchemaObjCxt} from \"..\"\nimport {_, getProperty, stringify} from \"../codegen\"\nimport {checkStrictMode} from \"../util\"\n\nexport function assignDefaults(it: SchemaObjCxt, ty?: string): void {\n  const {properties, items} = it.schema\n  if (ty === \"object\" && properties) {\n    for (const key in properties) {\n      assignDefault(it, key, properties[key].default)\n    }\n  } else if (ty === \"array\" && Array.isArray(items)) {\n    items.forEach((sch, i: number) => assignDefault(it, i, sch.default))\n  }\n}\n\nfunction assignDefault(it: SchemaObjCxt, prop: string | number, defaultValue: unknown): void {\n  const {gen, compositeRule, data, opts} = it\n  if (defaultValue === undefined) return\n  const childData = _`${data}${getProperty(prop)}`\n  if (compositeRule) {\n    checkStrictMode(it, `default is ignored for: ${childData}`)\n    return\n  }\n\n  let condition = _`${childData} === undefined`\n  if (opts.useDefaults === \"empty\") {\n    condition = _`${condition} || ${childData} === null || ${childData} === \"\"`\n  }\n  // `${childData} === undefined` +\n  // (opts.useDefaults === \"empty\" ? ` || ${childData} === null || ${childData} === \"\"` : \"\")\n  gen.if(condition, _`${childData} = ${stringify(defaultValue)}`)\n}\n","import type {AnySchema, SchemaMap} from \"../types\"\nimport type {SchemaCxt} from \"../compile\"\nimport type {KeywordCxt} from \"../compile/validate\"\nimport {CodeGen, _, and, or, not, nil, strConcat, getProperty, Code, Name} from \"../compile/codegen\"\nimport {alwaysValidSchema, Type} from \"../compile/util\"\nimport N from \"../compile/names\"\nimport {useFunc} from \"../compile/util\"\nexport function checkReportMissingProp(cxt: KeywordCxt, prop: string): void {\n  const {gen, data, it} = cxt\n  gen.if(noPropertyInData(gen, data, prop, it.opts.ownProperties), () => {\n    cxt.setParams({missingProperty: _`${prop}`}, true)\n    cxt.error()\n  })\n}\n\nexport function checkMissingProp(\n  {gen, data, it: {opts}}: KeywordCxt,\n  properties: string[],\n  missing: Name\n): Code {\n  return or(\n    ...properties.map((prop) =>\n      and(noPropertyInData(gen, data, prop, opts.ownProperties), _`${missing} = ${prop}`)\n    )\n  )\n}\n\nexport function reportMissingProp(cxt: KeywordCxt, missing: Name): void {\n  cxt.setParams({missingProperty: missing}, true)\n  cxt.error()\n}\n\nexport function hasPropFunc(gen: CodeGen): Name {\n  return gen.scopeValue(\"func\", {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    ref: Object.prototype.hasOwnProperty,\n    code: _`Object.prototype.hasOwnProperty`,\n  })\n}\n\nexport function isOwnProperty(gen: CodeGen, data: Name, property: Name | string): Code {\n  return _`${hasPropFunc(gen)}.call(${data}, ${property})`\n}\n\nexport function propertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} !== undefined`\n  return ownProperties ? _`${cond} && ${isOwnProperty(gen, data, property)}` : cond\n}\n\nexport function noPropertyInData(\n  gen: CodeGen,\n  data: Name,\n  property: Name | string,\n  ownProperties?: boolean\n): Code {\n  const cond = _`${data}${getProperty(property)} === undefined`\n  return ownProperties ? or(cond, not(isOwnProperty(gen, data, property))) : cond\n}\n\nexport function allSchemaProperties(schemaMap?: SchemaMap): string[] {\n  return schemaMap ? Object.keys(schemaMap).filter((p) => p !== \"__proto__\") : []\n}\n\nexport function schemaProperties(it: SchemaCxt, schemaMap: SchemaMap): string[] {\n  return allSchemaProperties(schemaMap).filter(\n    (p) => !alwaysValidSchema(it, schemaMap[p] as AnySchema)\n  )\n}\n\nexport function callValidateCode(\n  {schemaCode, data, it: {gen, topSchemaRef, schemaPath, errorPath}, it}: KeywordCxt,\n  func: Code,\n  context: Code,\n  passSchema?: boolean\n): Code {\n  const dataAndSchema = passSchema ? _`${schemaCode}, ${data}, ${topSchemaRef}${schemaPath}` : data\n  const valCxt: [Name, Code | number][] = [\n    [N.instancePath, strConcat(N.instancePath, errorPath)],\n    [N.parentData, it.parentData],\n    [N.parentDataProperty, it.parentDataProperty],\n    [N.rootData, N.rootData],\n  ]\n  if (it.opts.dynamicRef) valCxt.push([N.dynamicAnchors, N.dynamicAnchors])\n  const args = _`${dataAndSchema}, ${gen.object(...valCxt)}`\n  return context !== nil ? _`${func}.call(${context}, ${args})` : _`${func}(${args})`\n}\n\nconst newRegExp = _`new RegExp`\n\nexport function usePattern({gen, it: {opts}}: KeywordCxt, pattern: string): Name {\n  const u = opts.unicodeRegExp ? \"u\" : \"\"\n  const {regExp} = opts.code\n  const rx = regExp(pattern, u)\n\n  return gen.scopeValue(\"pattern\", {\n    key: rx.toString(),\n    ref: rx,\n    code: _`${regExp.code === \"new RegExp\" ? newRegExp : useFunc(gen, regExp)}(${pattern}, ${u})`,\n  })\n}\n\nexport function validateArray(cxt: KeywordCxt): Name {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  if (it.allErrors) {\n    const validArr = gen.let(\"valid\", true)\n    validateItems(() => gen.assign(validArr, false))\n    return validArr\n  }\n  gen.var(valid, true)\n  validateItems(() => gen.break())\n  return valid\n\n  function validateItems(notValid: () => void): void {\n    const len = gen.const(\"len\", _`${data}.length`)\n    gen.forRange(\"i\", 0, len, (i) => {\n      cxt.subschema(\n        {\n          keyword,\n          dataProp: i,\n          dataPropType: Type.Num,\n        },\n        valid\n      )\n      gen.if(not(valid), notValid)\n    })\n  }\n}\n\nexport function validateUnion(cxt: KeywordCxt): void {\n  const {gen, schema, keyword, it} = cxt\n  /* istanbul ignore if */\n  if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n  const alwaysValid = schema.some((sch: AnySchema) => alwaysValidSchema(it, sch))\n  if (alwaysValid && !it.opts.unevaluated) return\n\n  const valid = gen.let(\"valid\", false)\n  const schValid = gen.name(\"_valid\")\n\n  gen.block(() =>\n    schema.forEach((_sch: AnySchema, i: number) => {\n      const schCxt = cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          compositeRule: true,\n        },\n        schValid\n      )\n      gen.assign(valid, _`${valid} || ${schValid}`)\n      const merged = cxt.mergeValidEvaluated(schCxt, schValid)\n      // can short-circuit if `unevaluatedProperties/Items` not supported (opts.unevaluated !== true)\n      // or if all properties and items were evaluated (it.props === true && it.items === true)\n      if (!merged) gen.if(not(valid))\n    })\n  )\n\n  cxt.result(\n    valid,\n    () => cxt.reset(),\n    () => cxt.error(true)\n  )\n}\n","import type {KeywordCxt} from \".\"\nimport type {\n  AnySchema,\n  SchemaValidateFunction,\n  AnyValidateFunction,\n  AddedKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, nil, not, stringify, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport type {JSONType} from \"../rules\"\nimport {callValidateCode} from \"../../vocabularies/code\"\nimport {extendErrors} from \"../errors\"\n\ntype KeywordCompilationResult = AnySchema | SchemaValidateFunction | AnyValidateFunction\n\nexport function macroKeywordCode(cxt: KeywordCxt, def: MacroKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, it} = cxt\n  const macroSchema = def.macro.call(it.self, schema, parentSchema, it)\n  const schemaRef = useKeyword(gen, keyword, macroSchema)\n  if (it.opts.validateSchema !== false) it.self.validateSchema(macroSchema, true)\n\n  const valid = gen.name(\"valid\")\n  cxt.subschema(\n    {\n      schema: macroSchema,\n      schemaPath: nil,\n      errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n      topSchemaRef: schemaRef,\n      compositeRule: true,\n    },\n    valid\n  )\n  cxt.pass(valid, () => cxt.error(true))\n}\n\nexport function funcKeywordCode(cxt: KeywordCxt, def: FuncKeywordDefinition): void {\n  const {gen, keyword, schema, parentSchema, $data, it} = cxt\n  checkAsyncKeyword(it, def)\n  const validate =\n    !$data && def.compile ? def.compile.call(it.self, schema, parentSchema, it) : def.validate\n  const validateRef = useKeyword(gen, keyword, validate)\n  const valid = gen.let(\"valid\")\n  cxt.block$data(valid, validateKeyword)\n  cxt.ok(def.valid ?? valid)\n\n  function validateKeyword(): void {\n    if (def.errors === false) {\n      assignValid()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => cxt.error())\n    } else {\n      const ruleErrs = def.async ? validateAsync() : validateSync()\n      if (def.modifying) modifyData(cxt)\n      reportErrs(() => addErrs(cxt, ruleErrs))\n    }\n  }\n\n  function validateAsync(): Name {\n    const ruleErrs = gen.let(\"ruleErrs\", null)\n    gen.try(\n      () => assignValid(_`await `),\n      (e) =>\n        gen.assign(valid, false).if(\n          _`${e} instanceof ${it.ValidationError as Name}`,\n          () => gen.assign(ruleErrs, _`${e}.errors`),\n          () => gen.throw(e)\n        )\n    )\n    return ruleErrs\n  }\n\n  function validateSync(): Code {\n    const validateErrs = _`${validateRef}.errors`\n    gen.assign(validateErrs, null)\n    assignValid(nil)\n    return validateErrs\n  }\n\n  function assignValid(_await: Code = def.async ? _`await ` : nil): void {\n    const passCxt = it.opts.passContext ? N.this : N.self\n    const passSchema = !((\"compile\" in def && !$data) || def.schema === false)\n    gen.assign(\n      valid,\n      _`${_await}${callValidateCode(cxt, validateRef, passCxt, passSchema)}`,\n      def.modifying\n    )\n  }\n\n  function reportErrs(errors: () => void): void {\n    gen.if(not(def.valid ?? valid), errors)\n  }\n}\n\nfunction modifyData(cxt: KeywordCxt): void {\n  const {gen, data, it} = cxt\n  gen.if(it.parentData, () => gen.assign(data, _`${it.parentData}[${it.parentDataProperty}]`))\n}\n\nfunction addErrs(cxt: KeywordCxt, errs: Code): void {\n  const {gen} = cxt\n  gen.if(\n    _`Array.isArray(${errs})`,\n    () => {\n      gen\n        .assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`)\n        .assign(N.errors, _`${N.vErrors}.length`)\n      extendErrors(cxt)\n    },\n    () => cxt.error()\n  )\n}\n\nfunction checkAsyncKeyword({schemaEnv}: SchemaObjCxt, def: FuncKeywordDefinition): void {\n  if (def.async && !schemaEnv.$async) throw new Error(\"async keyword in sync schema\")\n}\n\nfunction useKeyword(gen: CodeGen, keyword: string, result?: KeywordCompilationResult): Name {\n  if (result === undefined) throw new Error(`keyword \"${keyword}\" failed to compile`)\n  return gen.scopeValue(\n    \"keyword\",\n    typeof result == \"function\" ? {ref: result} : {ref: result, code: stringify(result)}\n  )\n}\n\nexport function validSchemaType(\n  schema: unknown,\n  schemaType: JSONType[],\n  allowUndefined = false\n): boolean {\n  // TODO add tests\n  return (\n    !schemaType.length ||\n    schemaType.some((st) =>\n      st === \"array\"\n        ? Array.isArray(schema)\n        : st === \"object\"\n        ? schema && typeof schema == \"object\" && !Array.isArray(schema)\n        : typeof schema == st || (allowUndefined && typeof schema == \"undefined\")\n    )\n  )\n}\n\nexport function validateKeywordUsage(\n  {schema, opts, self, errSchemaPath}: SchemaObjCxt,\n  def: AddedKeywordDefinition,\n  keyword: string\n): void {\n  /* istanbul ignore if */\n  if (Array.isArray(def.keyword) ? !def.keyword.includes(keyword) : def.keyword !== keyword) {\n    throw new Error(\"ajv implementation error\")\n  }\n\n  const deps = def.dependencies\n  if (deps?.some((kwd) => !Object.prototype.hasOwnProperty.call(schema, kwd))) {\n    throw new Error(`parent schema must have dependencies of ${keyword}: ${deps.join(\",\")}`)\n  }\n\n  if (def.validateSchema) {\n    const valid = def.validateSchema(schema[keyword])\n    if (!valid) {\n      const msg =\n        `keyword \"${keyword}\" value is invalid at path \"${errSchemaPath}\": ` +\n        self.errorsText(def.validateSchema.errors)\n      if (opts.validateSchema === \"log\") self.logger.error(msg)\n      else throw new Error(msg)\n    }\n  }\n}\n","import type {AnySchema} from \"../../types\"\nimport type {SchemaObjCxt} from \"..\"\nimport {_, str, getProperty, Code, Name} from \"../codegen\"\nimport {escapeFragment, getErrorPath, Type} from \"../util\"\nimport type {JSONType} from \"../rules\"\n\nexport interface SubschemaContext {\n  // TODO use Optional? align with SchemCxt property types\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef?: Code\n  errorPath?: Code\n  dataLevel?: number\n  dataTypes?: JSONType[]\n  data?: Name\n  parentData?: Name\n  parentDataProperty?: Code | number\n  dataNames?: Name[]\n  dataPathArr?: (Code | number)[]\n  propertyName?: Name\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  compositeRule?: true\n  createErrors?: boolean\n  allErrors?: boolean\n}\n\nexport type SubschemaArgs = Partial<{\n  keyword: string\n  schemaProp: string | number\n  schema: AnySchema\n  schemaPath: Code\n  errSchemaPath: string\n  topSchemaRef: Code\n  data: Name | Code\n  dataProp: Code | string | number\n  dataTypes: JSONType[]\n  definedProperties: Set<string>\n  propertyName: Name\n  dataPropType: Type\n  jtdDiscriminator: string\n  jtdMetadata: boolean\n  compositeRule: true\n  createErrors: boolean\n  allErrors: boolean\n}>\n\nexport function getSubschema(\n  it: SchemaObjCxt,\n  {keyword, schemaProp, schema, schemaPath, errSchemaPath, topSchemaRef}: SubschemaArgs\n): SubschemaContext {\n  if (keyword !== undefined && schema !== undefined) {\n    throw new Error('both \"keyword\" and \"schema\" passed, only one allowed')\n  }\n\n  if (keyword !== undefined) {\n    const sch = it.schema[keyword]\n    return schemaProp === undefined\n      ? {\n          schema: sch,\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}`,\n        }\n      : {\n          schema: sch[schemaProp],\n          schemaPath: _`${it.schemaPath}${getProperty(keyword)}${getProperty(schemaProp)}`,\n          errSchemaPath: `${it.errSchemaPath}/${keyword}/${escapeFragment(schemaProp)}`,\n        }\n  }\n\n  if (schema !== undefined) {\n    if (schemaPath === undefined || errSchemaPath === undefined || topSchemaRef === undefined) {\n      throw new Error('\"schemaPath\", \"errSchemaPath\" and \"topSchemaRef\" are required with \"schema\"')\n    }\n    return {\n      schema,\n      schemaPath,\n      topSchemaRef,\n      errSchemaPath,\n    }\n  }\n\n  throw new Error('either \"keyword\" or \"schema\" must be passed')\n}\n\nexport function extendSubschemaData(\n  subschema: SubschemaContext,\n  it: SchemaObjCxt,\n  {dataProp, dataPropType: dpType, data, dataTypes, propertyName}: SubschemaArgs\n): void {\n  if (data !== undefined && dataProp !== undefined) {\n    throw new Error('both \"data\" and \"dataProp\" passed, only one allowed')\n  }\n\n  const {gen} = it\n\n  if (dataProp !== undefined) {\n    const {errorPath, dataPathArr, opts} = it\n    const nextData = gen.let(\"data\", _`${it.data}${getProperty(dataProp)}`, true)\n    dataContextProps(nextData)\n    subschema.errorPath = str`${errorPath}${getErrorPath(dataProp, dpType, opts.jsPropertySyntax)}`\n    subschema.parentDataProperty = _`${dataProp}`\n    subschema.dataPathArr = [...dataPathArr, subschema.parentDataProperty]\n  }\n\n  if (data !== undefined) {\n    const nextData = data instanceof Name ? data : gen.let(\"data\", data, true) // replaceable if used once?\n    dataContextProps(nextData)\n    if (propertyName !== undefined) subschema.propertyName = propertyName\n    // TODO something is possibly wrong here with not changing parentDataProperty and not appending dataPathArr\n  }\n\n  if (dataTypes) subschema.dataTypes = dataTypes\n\n  function dataContextProps(_nextData: Name): void {\n    subschema.data = _nextData\n    subschema.dataLevel = it.dataLevel + 1\n    subschema.dataTypes = []\n    it.definedProperties = new Set<string>()\n    subschema.parentData = it.data\n    subschema.dataNames = [...it.dataNames, _nextData]\n  }\n}\n\nexport function extendSubschemaMode(\n  subschema: SubschemaContext,\n  {jtdDiscriminator, jtdMetadata, compositeRule, createErrors, allErrors}: SubschemaArgs\n): void {\n  if (compositeRule !== undefined) subschema.compositeRule = compositeRule\n  if (createErrors !== undefined) subschema.createErrors = createErrors\n  if (allErrors !== undefined) subschema.allErrors = allErrors\n  subschema.jtdDiscriminator = jtdDiscriminator // not inherited\n  subschema.jtdMetadata = jtdMetadata // not inherited\n}\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","'use strict';\n\nvar traverse = module.exports = function (schema, opts, cb) {\n  // Legacy support for v0.3.1 and earlier.\n  if (typeof opts == 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  cb = opts.cb || cb;\n  var pre = (typeof cb == 'function') ? cb : cb.pre || function() {};\n  var post = cb.post || function() {};\n\n  _traverse(opts, pre, post, schema, '', schema);\n};\n\n\ntraverse.keywords = {\n  additionalItems: true,\n  items: true,\n  contains: true,\n  additionalProperties: true,\n  propertyNames: true,\n  not: true,\n  if: true,\n  then: true,\n  else: true\n};\n\ntraverse.arrayKeywords = {\n  items: true,\n  allOf: true,\n  anyOf: true,\n  oneOf: true\n};\n\ntraverse.propsKeywords = {\n  $defs: true,\n  definitions: true,\n  properties: true,\n  patternProperties: true,\n  dependencies: true\n};\n\ntraverse.skipKeywords = {\n  default: true,\n  enum: true,\n  const: true,\n  required: true,\n  maximum: true,\n  minimum: true,\n  exclusiveMaximum: true,\n  exclusiveMinimum: true,\n  multipleOf: true,\n  maxLength: true,\n  minLength: true,\n  pattern: true,\n  format: true,\n  maxItems: true,\n  minItems: true,\n  uniqueItems: true,\n  maxProperties: true,\n  minProperties: true\n};\n\n\nfunction _traverse(opts, pre, post, schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex) {\n  if (schema && typeof schema == 'object' && !Array.isArray(schema)) {\n    pre(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n    for (var key in schema) {\n      var sch = schema[key];\n      if (Array.isArray(sch)) {\n        if (key in traverse.arrayKeywords) {\n          for (var i=0; i<sch.length; i++)\n            _traverse(opts, pre, post, sch[i], jsonPtr + '/' + key + '/' + i, rootSchema, jsonPtr, key, schema, i);\n        }\n      } else if (key in traverse.propsKeywords) {\n        if (sch && typeof sch == 'object') {\n          for (var prop in sch)\n            _traverse(opts, pre, post, sch[prop], jsonPtr + '/' + key + '/' + escapeJsonPtr(prop), rootSchema, jsonPtr, key, schema, prop);\n        }\n      } else if (key in traverse.keywords || (opts.allKeys && !(key in traverse.skipKeywords))) {\n        _traverse(opts, pre, post, sch, jsonPtr + '/' + key, rootSchema, jsonPtr, key, schema);\n      }\n    }\n    post(schema, jsonPtr, rootSchema, parentJsonPtr, parentKeyword, parentSchema, keyIndex);\n  }\n}\n\n\nfunction escapeJsonPtr(str) {\n  return str.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n","import type {AnySchema, AnySchemaObject, UriResolver} from \"../types\"\nimport type Ajv from \"../ajv\"\nimport type {URIComponents} from \"uri-js\"\nimport {eachItem} from \"./util\"\nimport * as equal from \"fast-deep-equal\"\nimport * as traverse from \"json-schema-traverse\"\n\n// the hash of local references inside the schema (created by getSchemaRefs), used for inline resolution\nexport type LocalRefs = {[Ref in string]?: AnySchemaObject}\n\n// TODO refactor to use keyword definitions\nconst SIMPLE_INLINED = new Set([\n  \"type\",\n  \"format\",\n  \"pattern\",\n  \"maxLength\",\n  \"minLength\",\n  \"maxProperties\",\n  \"minProperties\",\n  \"maxItems\",\n  \"minItems\",\n  \"maximum\",\n  \"minimum\",\n  \"uniqueItems\",\n  \"multipleOf\",\n  \"required\",\n  \"enum\",\n  \"const\",\n])\n\nexport function inlineRef(schema: AnySchema, limit: boolean | number = true): boolean {\n  if (typeof schema == \"boolean\") return true\n  if (limit === true) return !hasRef(schema)\n  if (!limit) return false\n  return countKeys(schema) <= limit\n}\n\nconst REF_KEYWORDS = new Set([\n  \"$ref\",\n  \"$recursiveRef\",\n  \"$recursiveAnchor\",\n  \"$dynamicRef\",\n  \"$dynamicAnchor\",\n])\n\nfunction hasRef(schema: AnySchemaObject): boolean {\n  for (const key in schema) {\n    if (REF_KEYWORDS.has(key)) return true\n    const sch = schema[key]\n    if (Array.isArray(sch) && sch.some(hasRef)) return true\n    if (typeof sch == \"object\" && hasRef(sch)) return true\n  }\n  return false\n}\n\nfunction countKeys(schema: AnySchemaObject): number {\n  let count = 0\n  for (const key in schema) {\n    if (key === \"$ref\") return Infinity\n    count++\n    if (SIMPLE_INLINED.has(key)) continue\n    if (typeof schema[key] == \"object\") {\n      eachItem(schema[key], (sch) => (count += countKeys(sch)))\n    }\n    if (count === Infinity) return Infinity\n  }\n  return count\n}\n\nexport function getFullPath(resolver: UriResolver, id = \"\", normalize?: boolean): string {\n  if (normalize !== false) id = normalizeId(id)\n  const p = resolver.parse(id)\n  return _getFullPath(resolver, p)\n}\n\nexport function _getFullPath(resolver: UriResolver, p: URIComponents): string {\n  const serialized = resolver.serialize(p)\n  return serialized.split(\"#\")[0] + \"#\"\n}\n\nconst TRAILING_SLASH_HASH = /#\\/?$/\nexport function normalizeId(id: string | undefined): string {\n  return id ? id.replace(TRAILING_SLASH_HASH, \"\") : \"\"\n}\n\nexport function resolveUrl(resolver: UriResolver, baseId: string, id: string): string {\n  id = normalizeId(id)\n  return resolver.resolve(baseId, id)\n}\n\nconst ANCHOR = /^[a-z_][-a-z0-9._]*$/i\n\nexport function getSchemaRefs(this: Ajv, schema: AnySchema, baseId: string): LocalRefs {\n  if (typeof schema == \"boolean\") return {}\n  const {schemaId, uriResolver} = this.opts\n  const schId = normalizeId(schema[schemaId] || baseId)\n  const baseIds: {[JsonPtr in string]?: string} = {\"\": schId}\n  const pathPrefix = getFullPath(uriResolver, schId, false)\n  const localRefs: LocalRefs = {}\n  const schemaRefs: Set<string> = new Set()\n\n  traverse(schema, {allKeys: true}, (sch, jsonPtr, _, parentJsonPtr) => {\n    if (parentJsonPtr === undefined) return\n    const fullPath = pathPrefix + jsonPtr\n    let baseId = baseIds[parentJsonPtr]\n    if (typeof sch[schemaId] == \"string\") baseId = addRef.call(this, sch[schemaId])\n    addAnchor.call(this, sch.$anchor)\n    addAnchor.call(this, sch.$dynamicAnchor)\n    baseIds[jsonPtr] = baseId\n\n    function addRef(this: Ajv, ref: string): string {\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      const _resolve = this.opts.uriResolver.resolve\n      ref = normalizeId(baseId ? _resolve(baseId, ref) : ref)\n      if (schemaRefs.has(ref)) throw ambiguos(ref)\n      schemaRefs.add(ref)\n      let schOrRef = this.refs[ref]\n      if (typeof schOrRef == \"string\") schOrRef = this.refs[schOrRef]\n      if (typeof schOrRef == \"object\") {\n        checkAmbiguosRef(sch, schOrRef.schema, ref)\n      } else if (ref !== normalizeId(fullPath)) {\n        if (ref[0] === \"#\") {\n          checkAmbiguosRef(sch, localRefs[ref], ref)\n          localRefs[ref] = sch\n        } else {\n          this.refs[ref] = fullPath\n        }\n      }\n      return ref\n    }\n\n    function addAnchor(this: Ajv, anchor: unknown): void {\n      if (typeof anchor == \"string\") {\n        if (!ANCHOR.test(anchor)) throw new Error(`invalid anchor \"${anchor}\"`)\n        addRef.call(this, `#${anchor}`)\n      }\n    }\n  })\n\n  return localRefs\n\n  function checkAmbiguosRef(sch1: AnySchema, sch2: AnySchema | undefined, ref: string): void {\n    if (sch2 !== undefined && !equal(sch1, sch2)) throw ambiguos(ref)\n  }\n\n  function ambiguos(ref: string): Error {\n    return new Error(`reference \"${ref}\" resolves to more than one schema`)\n  }\n}\n","import type {\n  AddedKeywordDefinition,\n  AnySchema,\n  AnySchemaObject,\n  KeywordErrorCxt,\n  KeywordCxtParams,\n} from \"../../types\"\nimport type {SchemaCxt, SchemaObjCxt} from \"..\"\nimport type {InstanceOptions} from \"../../core\"\nimport {boolOrEmptySchema, topBoolOrEmptySchema} from \"./boolSchema\"\nimport {coerceAndCheckDataType, getSchemaTypes} from \"./dataType\"\nimport {shouldUseGroup, shouldUseRule} from \"./applicability\"\nimport {checkDataType, checkDataTypes, reportTypeError, DataType} from \"./dataType\"\nimport {assignDefaults} from \"./defaults\"\nimport {funcKeywordCode, macroKeywordCode, validateKeywordUsage, validSchemaType} from \"./keyword\"\nimport {getSubschema, extendSubschemaData, SubschemaArgs, extendSubschemaMode} from \"./subschema\"\nimport {_, nil, str, or, not, getProperty, Block, Code, Name, CodeGen} from \"../codegen\"\nimport N from \"../names\"\nimport {resolveUrl} from \"../resolve\"\nimport {\n  schemaRefOrVal,\n  schemaHasRulesButRef,\n  checkUnknownRules,\n  checkStrictMode,\n  unescapeJsonPointer,\n  mergeEvaluated,\n} from \"../util\"\nimport type {JSONType, Rule, RuleGroup} from \"../rules\"\nimport {\n  ErrorPaths,\n  reportError,\n  reportExtraError,\n  resetErrorsCount,\n  keyword$DataError,\n} from \"../errors\"\n\n// schema compilation - generates validation function, subschemaCode (below) is used for subschemas\nexport function validateFunctionCode(it: SchemaCxt): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      topSchemaObjCode(it)\n      return\n    }\n  }\n  validateFunction(it, () => topBoolOrEmptySchema(it))\n}\n\nfunction validateFunction(\n  {gen, validateName, schema, schemaEnv, opts}: SchemaCxt,\n  body: Block\n): void {\n  if (opts.code.es5) {\n    gen.func(validateName, _`${N.data}, ${N.valCxt}`, schemaEnv.$async, () => {\n      gen.code(_`\"use strict\"; ${funcSourceUrl(schema, opts)}`)\n      destructureValCxtES5(gen, opts)\n      gen.code(body)\n    })\n  } else {\n    gen.func(validateName, _`${N.data}, ${destructureValCxt(opts)}`, schemaEnv.$async, () =>\n      gen.code(funcSourceUrl(schema, opts)).code(body)\n    )\n  }\n}\n\nfunction destructureValCxt(opts: InstanceOptions): Code {\n  return _`{${N.instancePath}=\"\", ${N.parentData}, ${N.parentDataProperty}, ${N.rootData}=${\n    N.data\n  }${opts.dynamicRef ? _`, ${N.dynamicAnchors}={}` : nil}}={}`\n}\n\nfunction destructureValCxtES5(gen: CodeGen, opts: InstanceOptions): void {\n  gen.if(\n    N.valCxt,\n    () => {\n      gen.var(N.instancePath, _`${N.valCxt}.${N.instancePath}`)\n      gen.var(N.parentData, _`${N.valCxt}.${N.parentData}`)\n      gen.var(N.parentDataProperty, _`${N.valCxt}.${N.parentDataProperty}`)\n      gen.var(N.rootData, _`${N.valCxt}.${N.rootData}`)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`${N.valCxt}.${N.dynamicAnchors}`)\n    },\n    () => {\n      gen.var(N.instancePath, _`\"\"`)\n      gen.var(N.parentData, _`undefined`)\n      gen.var(N.parentDataProperty, _`undefined`)\n      gen.var(N.rootData, N.data)\n      if (opts.dynamicRef) gen.var(N.dynamicAnchors, _`{}`)\n    }\n  )\n}\n\nfunction topSchemaObjCode(it: SchemaObjCxt): void {\n  const {schema, opts, gen} = it\n  validateFunction(it, () => {\n    if (opts.$comment && schema.$comment) commentKeyword(it)\n    checkNoDefault(it)\n    gen.let(N.vErrors, null)\n    gen.let(N.errors, 0)\n    if (opts.unevaluated) resetEvaluated(it)\n    typeAndKeywords(it)\n    returnResults(it)\n  })\n  return\n}\n\nfunction resetEvaluated(it: SchemaObjCxt): void {\n  // TODO maybe some hook to execute it in the end to check whether props/items are Name, as in assignEvaluated\n  const {gen, validateName} = it\n  it.evaluated = gen.const(\"evaluated\", _`${validateName}.evaluated`)\n  gen.if(_`${it.evaluated}.dynamicProps`, () => gen.assign(_`${it.evaluated}.props`, _`undefined`))\n  gen.if(_`${it.evaluated}.dynamicItems`, () => gen.assign(_`${it.evaluated}.items`, _`undefined`))\n}\n\nfunction funcSourceUrl(schema: AnySchema, opts: InstanceOptions): Code {\n  const schId = typeof schema == \"object\" && schema[opts.schemaId]\n  return schId && (opts.code.source || opts.code.process) ? _`/*# sourceURL=${schId} */` : nil\n}\n\n// schema compilation - this function is used recursively to generate code for sub-schemas\nfunction subschemaCode(it: SchemaCxt, valid: Name): void {\n  if (isSchemaObj(it)) {\n    checkKeywords(it)\n    if (schemaCxtHasRules(it)) {\n      subSchemaObjCode(it, valid)\n      return\n    }\n  }\n  boolOrEmptySchema(it, valid)\n}\n\nfunction schemaCxtHasRules({schema, self}: SchemaCxt): boolean {\n  if (typeof schema == \"boolean\") return !schema\n  for (const key in schema) if (self.RULES.all[key]) return true\n  return false\n}\n\nfunction isSchemaObj(it: SchemaCxt): it is SchemaObjCxt {\n  return typeof it.schema != \"boolean\"\n}\n\nfunction subSchemaObjCode(it: SchemaObjCxt, valid: Name): void {\n  const {schema, gen, opts} = it\n  if (opts.$comment && schema.$comment) commentKeyword(it)\n  updateContext(it)\n  checkAsyncSchema(it)\n  const errsCount = gen.const(\"_errs\", N.errors)\n  typeAndKeywords(it, errsCount)\n  // TODO var\n  gen.var(valid, _`${errsCount} === ${N.errors}`)\n}\n\nfunction checkKeywords(it: SchemaObjCxt): void {\n  checkUnknownRules(it)\n  checkRefsAndKeywords(it)\n}\n\nfunction typeAndKeywords(it: SchemaObjCxt, errsCount?: Name): void {\n  if (it.opts.jtd) return schemaKeywords(it, [], false, errsCount)\n  const types = getSchemaTypes(it.schema)\n  const checkedTypes = coerceAndCheckDataType(it, types)\n  schemaKeywords(it, types, !checkedTypes, errsCount)\n}\n\nfunction checkRefsAndKeywords(it: SchemaObjCxt): void {\n  const {schema, errSchemaPath, opts, self} = it\n  if (schema.$ref && opts.ignoreKeywordsWithRef && schemaHasRulesButRef(schema, self.RULES)) {\n    self.logger.warn(`$ref: keywords ignored in schema at path \"${errSchemaPath}\"`)\n  }\n}\n\nfunction checkNoDefault(it: SchemaObjCxt): void {\n  const {schema, opts} = it\n  if (schema.default !== undefined && opts.useDefaults && opts.strictSchema) {\n    checkStrictMode(it, \"default is ignored in the schema root\")\n  }\n}\n\nfunction updateContext(it: SchemaObjCxt): void {\n  const schId = it.schema[it.opts.schemaId]\n  if (schId) it.baseId = resolveUrl(it.opts.uriResolver, it.baseId, schId)\n}\n\nfunction checkAsyncSchema(it: SchemaObjCxt): void {\n  if (it.schema.$async && !it.schemaEnv.$async) throw new Error(\"async schema in sync schema\")\n}\n\nfunction commentKeyword({gen, schemaEnv, schema, errSchemaPath, opts}: SchemaObjCxt): void {\n  const msg = schema.$comment\n  if (opts.$comment === true) {\n    gen.code(_`${N.self}.logger.log(${msg})`)\n  } else if (typeof opts.$comment == \"function\") {\n    const schemaPath = str`${errSchemaPath}/$comment`\n    const rootName = gen.scopeValue(\"root\", {ref: schemaEnv.root})\n    gen.code(_`${N.self}.opts.$comment(${msg}, ${schemaPath}, ${rootName}.schema)`)\n  }\n}\n\nfunction returnResults(it: SchemaCxt): void {\n  const {gen, schemaEnv, validateName, ValidationError, opts} = it\n  if (schemaEnv.$async) {\n    // TODO assign unevaluated\n    gen.if(\n      _`${N.errors} === 0`,\n      () => gen.return(N.data),\n      () => gen.throw(_`new ${ValidationError as Name}(${N.vErrors})`)\n    )\n  } else {\n    gen.assign(_`${validateName}.errors`, N.vErrors)\n    if (opts.unevaluated) assignEvaluated(it)\n    gen.return(_`${N.errors} === 0`)\n  }\n}\n\nfunction assignEvaluated({gen, evaluated, props, items}: SchemaCxt): void {\n  if (props instanceof Name) gen.assign(_`${evaluated}.props`, props)\n  if (items instanceof Name) gen.assign(_`${evaluated}.items`, items)\n}\n\nfunction schemaKeywords(\n  it: SchemaObjCxt,\n  types: JSONType[],\n  typeErrors: boolean,\n  errsCount?: Name\n): void {\n  const {gen, schema, data, allErrors, opts, self} = it\n  const {RULES} = self\n  if (schema.$ref && (opts.ignoreKeywordsWithRef || !schemaHasRulesButRef(schema, RULES))) {\n    gen.block(() => keywordCode(it, \"$ref\", (RULES.all.$ref as Rule).definition)) // TODO typecast\n    return\n  }\n  if (!opts.jtd) checkStrictTypes(it, types)\n  gen.block(() => {\n    for (const group of RULES.rules) groupKeywords(group)\n    groupKeywords(RULES.post)\n  })\n\n  function groupKeywords(group: RuleGroup): void {\n    if (!shouldUseGroup(schema, group)) return\n    if (group.type) {\n      gen.if(checkDataType(group.type, data, opts.strictNumbers))\n      iterateKeywords(it, group)\n      if (types.length === 1 && types[0] === group.type && typeErrors) {\n        gen.else()\n        reportTypeError(it)\n      }\n      gen.endIf()\n    } else {\n      iterateKeywords(it, group)\n    }\n    // TODO make it \"ok\" call?\n    if (!allErrors) gen.if(_`${N.errors} === ${errsCount || 0}`)\n  }\n}\n\nfunction iterateKeywords(it: SchemaObjCxt, group: RuleGroup): void {\n  const {\n    gen,\n    schema,\n    opts: {useDefaults},\n  } = it\n  if (useDefaults) assignDefaults(it, group.type)\n  gen.block(() => {\n    for (const rule of group.rules) {\n      if (shouldUseRule(schema, rule)) {\n        keywordCode(it, rule.keyword, rule.definition, group.type)\n      }\n    }\n  })\n}\n\nfunction checkStrictTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (it.schemaEnv.meta || !it.opts.strictTypes) return\n  checkContextTypes(it, types)\n  if (!it.opts.allowUnionTypes) checkMultipleTypes(it, types)\n  checkKeywordTypes(it, it.dataTypes)\n}\n\nfunction checkContextTypes(it: SchemaObjCxt, types: JSONType[]): void {\n  if (!types.length) return\n  if (!it.dataTypes.length) {\n    it.dataTypes = types\n    return\n  }\n  types.forEach((t) => {\n    if (!includesType(it.dataTypes, t)) {\n      strictTypesError(it, `type \"${t}\" not allowed by context \"${it.dataTypes.join(\",\")}\"`)\n    }\n  })\n  narrowSchemaTypes(it, types)\n}\n\nfunction checkMultipleTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  if (ts.length > 1 && !(ts.length === 2 && ts.includes(\"null\"))) {\n    strictTypesError(it, \"use allowUnionTypes to allow union type keyword\")\n  }\n}\n\nfunction checkKeywordTypes(it: SchemaObjCxt, ts: JSONType[]): void {\n  const rules = it.self.RULES.all\n  for (const keyword in rules) {\n    const rule = rules[keyword]\n    if (typeof rule == \"object\" && shouldUseRule(it.schema, rule)) {\n      const {type} = rule.definition\n      if (type.length && !type.some((t) => hasApplicableType(ts, t))) {\n        strictTypesError(it, `missing type \"${type.join(\",\")}\" for keyword \"${keyword}\"`)\n      }\n    }\n  }\n}\n\nfunction hasApplicableType(schTs: JSONType[], kwdT: JSONType): boolean {\n  return schTs.includes(kwdT) || (kwdT === \"number\" && schTs.includes(\"integer\"))\n}\n\nfunction includesType(ts: JSONType[], t: JSONType): boolean {\n  return ts.includes(t) || (t === \"integer\" && ts.includes(\"number\"))\n}\n\nfunction narrowSchemaTypes(it: SchemaObjCxt, withTypes: JSONType[]): void {\n  const ts: JSONType[] = []\n  for (const t of it.dataTypes) {\n    if (includesType(withTypes, t)) ts.push(t)\n    else if (withTypes.includes(\"integer\") && t === \"number\") ts.push(\"integer\")\n  }\n  it.dataTypes = ts\n}\n\nfunction strictTypesError(it: SchemaObjCxt, msg: string): void {\n  const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n  msg += ` at \"${schemaPath}\" (strictTypes)`\n  checkStrictMode(it, msg, it.opts.strictTypes)\n}\n\nexport class KeywordCxt implements KeywordErrorCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean\n  readonly keyword: string\n  readonly data: Name // Name referencing the current level of the data instance\n  readonly $data?: string | false\n  schema: any // keyword value in the schema\n  readonly schemaValue: Code | number | boolean // Code reference to keyword schema value or primitive value\n  readonly schemaCode: Code | number | boolean // Code reference to resolved schema value (different if schema is $data)\n  readonly schemaType: JSONType[] // allowed type(s) of keyword value in the schema\n  readonly parentSchema: AnySchemaObject\n  readonly errsCount?: Name // Name reference to the number of validation errors collected before this keyword,\n  // requires option trackErrors in keyword definition\n  params: KeywordCxtParams // object to pass parameters to error messages from keyword code\n  readonly it: SchemaObjCxt // schema compilation context (schema is guaranteed to be an object, not boolean)\n  readonly def: AddedKeywordDefinition\n\n  constructor(it: SchemaObjCxt, def: AddedKeywordDefinition, keyword: string) {\n    validateKeywordUsage(it, def, keyword)\n    this.gen = it.gen\n    this.allErrors = it.allErrors\n    this.keyword = keyword\n    this.data = it.data\n    this.schema = it.schema[keyword]\n    this.$data = def.$data && it.opts.$data && this.schema && this.schema.$data\n    this.schemaValue = schemaRefOrVal(it, this.schema, keyword, this.$data)\n    this.schemaType = def.schemaType\n    this.parentSchema = it.schema\n    this.params = {}\n    this.it = it\n    this.def = def\n\n    if (this.$data) {\n      this.schemaCode = it.gen.const(\"vSchema\", getData(this.$data, it))\n    } else {\n      this.schemaCode = this.schemaValue\n      if (!validSchemaType(this.schema, def.schemaType, def.allowUndefined)) {\n        throw new Error(`${keyword} value must be ${JSON.stringify(def.schemaType)}`)\n      }\n    }\n\n    if (\"code\" in def ? def.trackErrors : def.errors !== false) {\n      this.errsCount = it.gen.const(\"_errs\", N.errors)\n    }\n  }\n\n  result(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.failResult(not(condition), successAction, failAction)\n  }\n\n  failResult(condition: Code, successAction?: () => void, failAction?: () => void): void {\n    this.gen.if(condition)\n    if (failAction) failAction()\n    else this.error()\n    if (successAction) {\n      this.gen.else()\n      successAction()\n      if (this.allErrors) this.gen.endIf()\n    } else {\n      if (this.allErrors) this.gen.endIf()\n      else this.gen.else()\n    }\n  }\n\n  pass(condition: Code, failAction?: () => void): void {\n    this.failResult(not(condition), undefined, failAction)\n  }\n\n  fail(condition?: Code): void {\n    if (condition === undefined) {\n      this.error()\n      if (!this.allErrors) this.gen.if(false) // this branch will be removed by gen.optimize\n      return\n    }\n    this.gen.if(condition)\n    this.error()\n    if (this.allErrors) this.gen.endIf()\n    else this.gen.else()\n  }\n\n  fail$data(condition: Code): void {\n    if (!this.$data) return this.fail(condition)\n    const {schemaCode} = this\n    this.fail(_`${schemaCode} !== undefined && (${or(this.invalid$data(), condition)})`)\n  }\n\n  error(append?: boolean, errorParams?: KeywordCxtParams, errorPaths?: ErrorPaths): void {\n    if (errorParams) {\n      this.setParams(errorParams)\n      this._error(append, errorPaths)\n      this.setParams({})\n      return\n    }\n    this._error(append, errorPaths)\n  }\n\n  private _error(append?: boolean, errorPaths?: ErrorPaths): void {\n    ;(append ? reportExtraError : reportError)(this, this.def.error, errorPaths)\n  }\n\n  $dataError(): void {\n    reportError(this, this.def.$dataError || keyword$DataError)\n  }\n\n  reset(): void {\n    if (this.errsCount === undefined) throw new Error('add \"trackErrors\" to keyword definition')\n    resetErrorsCount(this.gen, this.errsCount)\n  }\n\n  ok(cond: Code | boolean): void {\n    if (!this.allErrors) this.gen.if(cond)\n  }\n\n  setParams(obj: KeywordCxtParams, assign?: true): void {\n    if (assign) Object.assign(this.params, obj)\n    else this.params = obj\n  }\n\n  block$data(valid: Name, codeBlock: () => void, $dataValid: Code = nil): void {\n    this.gen.block(() => {\n      this.check$data(valid, $dataValid)\n      codeBlock()\n    })\n  }\n\n  check$data(valid: Name = nil, $dataValid: Code = nil): void {\n    if (!this.$data) return\n    const {gen, schemaCode, schemaType, def} = this\n    gen.if(or(_`${schemaCode} === undefined`, $dataValid))\n    if (valid !== nil) gen.assign(valid, true)\n    if (schemaType.length || def.validateSchema) {\n      gen.elseIf(this.invalid$data())\n      this.$dataError()\n      if (valid !== nil) gen.assign(valid, false)\n    }\n    gen.else()\n  }\n\n  invalid$data(): Code {\n    const {gen, schemaCode, schemaType, def, it} = this\n    return or(wrong$DataType(), invalid$DataSchema())\n\n    function wrong$DataType(): Code {\n      if (schemaType.length) {\n        /* istanbul ignore if */\n        if (!(schemaCode instanceof Name)) throw new Error(\"ajv implementation error\")\n        const st = Array.isArray(schemaType) ? schemaType : [schemaType]\n        return _`${checkDataTypes(st, schemaCode, it.opts.strictNumbers, DataType.Wrong)}`\n      }\n      return nil\n    }\n\n    function invalid$DataSchema(): Code {\n      if (def.validateSchema) {\n        const validateSchemaRef = gen.scopeValue(\"validate$data\", {ref: def.validateSchema}) // TODO value.code for standalone\n        return _`!${validateSchemaRef}(${schemaCode})`\n      }\n      return nil\n    }\n  }\n\n  subschema(appl: SubschemaArgs, valid: Name): SchemaCxt {\n    const subschema = getSubschema(this.it, appl)\n    extendSubschemaData(subschema, this.it, appl)\n    extendSubschemaMode(subschema, appl)\n    const nextContext = {...this.it, ...subschema, items: undefined, props: undefined}\n    subschemaCode(nextContext, valid)\n    return nextContext\n  }\n\n  mergeEvaluated(schemaCxt: SchemaCxt, toName?: typeof Name): void {\n    const {it, gen} = this\n    if (!it.opts.unevaluated) return\n    if (it.props !== true && schemaCxt.props !== undefined) {\n      it.props = mergeEvaluated.props(gen, schemaCxt.props, it.props, toName)\n    }\n    if (it.items !== true && schemaCxt.items !== undefined) {\n      it.items = mergeEvaluated.items(gen, schemaCxt.items, it.items, toName)\n    }\n  }\n\n  mergeValidEvaluated(schemaCxt: SchemaCxt, valid: Name): boolean | void {\n    const {it, gen} = this\n    if (it.opts.unevaluated && (it.props !== true || it.items !== true)) {\n      gen.if(valid, () => this.mergeEvaluated(schemaCxt, Name))\n      return true\n    }\n  }\n}\n\nfunction keywordCode(\n  it: SchemaObjCxt,\n  keyword: string,\n  def: AddedKeywordDefinition,\n  ruleType?: JSONType\n): void {\n  const cxt = new KeywordCxt(it, def, keyword)\n  if (\"code\" in def) {\n    def.code(cxt, ruleType)\n  } else if (cxt.$data && def.validate) {\n    funcKeywordCode(cxt, def)\n  } else if (\"macro\" in def) {\n    macroKeywordCode(cxt, def)\n  } else if (def.compile || def.validate) {\n    funcKeywordCode(cxt, def)\n  }\n}\n\nconst JSON_POINTER = /^\\/(?:[^~]|~0|~1)*$/\nconst RELATIVE_JSON_POINTER = /^([0-9]+)(#|\\/(?:[^~]|~0|~1)*)?$/\nexport function getData(\n  $data: string,\n  {dataLevel, dataNames, dataPathArr}: SchemaCxt\n): Code | number {\n  let jsonPointer\n  let data: Code\n  if ($data === \"\") return N.rootData\n  if ($data[0] === \"/\") {\n    if (!JSON_POINTER.test($data)) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    jsonPointer = $data\n    data = N.rootData\n  } else {\n    const matches = RELATIVE_JSON_POINTER.exec($data)\n    if (!matches) throw new Error(`Invalid JSON-pointer: ${$data}`)\n    const up: number = +matches[1]\n    jsonPointer = matches[2]\n    if (jsonPointer === \"#\") {\n      if (up >= dataLevel) throw new Error(errorMsg(\"property/index\", up))\n      return dataPathArr[dataLevel - up]\n    }\n    if (up > dataLevel) throw new Error(errorMsg(\"data\", up))\n    data = dataNames[dataLevel - up]\n    if (!jsonPointer) return data\n  }\n\n  let expr = data\n  const segments = jsonPointer.split(\"/\")\n  for (const segment of segments) {\n    if (segment) {\n      data = _`${data}${getProperty(unescapeJsonPointer(segment))}`\n      expr = _`${expr} && ${data}`\n    }\n  }\n  return expr\n\n  function errorMsg(pointerType: string, up: number): string {\n    return `Cannot access ${pointerType} ${up} levels up, current level is ${dataLevel}`\n  }\n}\n","import type {ErrorObject} from \"../types\"\n\nexport default class ValidationError extends Error {\n  readonly errors: Partial<ErrorObject>[]\n  readonly ajv: true\n  readonly validation: true\n\n  constructor(errors: Partial<ErrorObject>[]) {\n    super(\"validation failed\")\n    this.errors = errors\n    this.ajv = this.validation = true\n  }\n}\n","import {resolveUrl, normalizeId, getFullPath} from \"./resolve\"\nimport type {UriResolver} from \"../types\"\n\nexport default class MissingRefError extends Error {\n  readonly missingRef: string\n  readonly missingSchema: string\n\n  constructor(resolver: UriResolver, baseId: string, ref: string, msg?: string) {\n    super(msg || `can't resolve reference ${ref} from id ${baseId}`)\n    this.missingRef = resolveUrl(resolver, baseId, ref)\n    this.missingSchema = normalizeId(getFullPath(resolver, this.missingRef))\n  }\n}\n","import type {\n  AnySchema,\n  AnySchemaObject,\n  AnyValidateFunction,\n  AsyncValidateFunction,\n  EvaluatedProperties,\n  EvaluatedItems,\n} from \"../types\"\nimport type Ajv from \"../core\"\nimport type {InstanceOptions} from \"../core\"\nimport {CodeGen, _, nil, stringify, Name, Code, ValueScopeName} from \"./codegen\"\nimport ValidationError from \"../runtime/validation_error\"\nimport N from \"./names\"\nimport {LocalRefs, getFullPath, _getFullPath, inlineRef, normalizeId, resolveUrl} from \"./resolve\"\nimport {schemaHasRulesButRef, unescapeFragment} from \"./util\"\nimport {validateFunctionCode} from \"./validate\"\nimport * as URI from \"uri-js\"\nimport {JSONType} from \"./rules\"\n\nexport type SchemaRefs = {\n  [Ref in string]?: SchemaEnv | AnySchema\n}\n\nexport interface SchemaCxt {\n  readonly gen: CodeGen\n  readonly allErrors?: boolean // validation mode - whether to collect all errors or break on error\n  readonly data: Name // Name with reference to the current part of data instance\n  readonly parentData: Name // should be used in keywords modifying data\n  readonly parentDataProperty: Code | number // should be used in keywords modifying data\n  readonly dataNames: Name[]\n  readonly dataPathArr: (Code | number)[]\n  readonly dataLevel: number // the level of the currently validated data,\n  // it can be used to access both the property names and the data on all levels from the top.\n  dataTypes: JSONType[] // data types applied to the current part of data instance\n  definedProperties: Set<string> // set of properties to keep track of for required checks\n  readonly topSchemaRef: Code\n  readonly validateName: Name\n  evaluated?: Name\n  readonly ValidationError?: Name\n  readonly schema: AnySchema // current schema object - equal to parentSchema passed via KeywordCxt\n  readonly schemaEnv: SchemaEnv\n  readonly rootId: string\n  baseId: string // the current schema base URI that should be used as the base for resolving URIs in references (\\$ref)\n  readonly schemaPath: Code // the run-time expression that evaluates to the property name of the current schema\n  readonly errSchemaPath: string // this is actual string, should not be changed to Code\n  readonly errorPath: Code\n  readonly propertyName?: Name\n  readonly compositeRule?: boolean // true indicates that the current schema is inside the compound keyword,\n  // where failing some rule doesn't mean validation failure (`anyOf`, `oneOf`, `not`, `if`).\n  // This flag is used to determine whether you can return validation result immediately after any error in case the option `allErrors` is not `true.\n  // You only need to use it if you have many steps in your keywords and potentially can define multiple errors.\n  props?: EvaluatedProperties | Name // properties evaluated by this schema - used by parent schema or assigned to validation function\n  items?: EvaluatedItems | Name // last item evaluated by this schema - used by parent schema or assigned to validation function\n  jtdDiscriminator?: string\n  jtdMetadata?: boolean\n  readonly createErrors?: boolean\n  readonly opts: InstanceOptions // Ajv instance option.\n  readonly self: Ajv // current Ajv instance\n}\n\nexport interface SchemaObjCxt extends SchemaCxt {\n  readonly schema: AnySchemaObject\n}\ninterface SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root?: SchemaEnv\n  readonly baseId?: string\n  readonly schemaPath?: string\n  readonly localRefs?: LocalRefs\n  readonly meta?: boolean\n}\n\nexport class SchemaEnv implements SchemaEnvArgs {\n  readonly schema: AnySchema\n  readonly schemaId?: \"$id\" | \"id\"\n  readonly root: SchemaEnv\n  baseId: string // TODO possibly, it should be readonly\n  schemaPath?: string\n  localRefs?: LocalRefs\n  readonly meta?: boolean\n  readonly $async?: boolean // true if the current schema is asynchronous.\n  readonly refs: SchemaRefs = {}\n  readonly dynamicAnchors: {[Ref in string]?: true} = {}\n  validate?: AnyValidateFunction\n  validateName?: ValueScopeName\n  serialize?: (data: unknown) => string\n  serializeName?: ValueScopeName\n  parse?: (data: string) => unknown\n  parseName?: ValueScopeName\n\n  constructor(env: SchemaEnvArgs) {\n    let schema: AnySchemaObject | undefined\n    if (typeof env.schema == \"object\") schema = env.schema\n    this.schema = env.schema\n    this.schemaId = env.schemaId\n    this.root = env.root || this\n    this.baseId = env.baseId ?? normalizeId(schema?.[env.schemaId || \"$id\"])\n    this.schemaPath = env.schemaPath\n    this.localRefs = env.localRefs\n    this.meta = env.meta\n    this.$async = schema?.$async\n    this.refs = {}\n  }\n}\n\n// let codeSize = 0\n// let nodeCount = 0\n\n// Compiles schema in SchemaEnv\nexport function compileSchema(this: Ajv, sch: SchemaEnv): SchemaEnv {\n  // TODO refactor - remove compilations\n  const _sch = getCompilingSchema.call(this, sch)\n  if (_sch) return _sch\n  const rootId = getFullPath(this.opts.uriResolver, sch.root.baseId) // TODO if getFullPath removed 1 tests fails\n  const {es5, lines} = this.opts.code\n  const {ownProperties} = this.opts\n  const gen = new CodeGen(this.scope, {es5, lines, ownProperties})\n  let _ValidationError\n  if (sch.$async) {\n    _ValidationError = gen.scopeValue(\"Error\", {\n      ref: ValidationError,\n      code: _`require(\"ajv/dist/runtime/validation_error\").default`,\n    })\n  }\n\n  const validateName = gen.scopeName(\"validate\")\n  sch.validateName = validateName\n\n  const schemaCxt: SchemaCxt = {\n    gen,\n    allErrors: this.opts.allErrors,\n    data: N.data,\n    parentData: N.parentData,\n    parentDataProperty: N.parentDataProperty,\n    dataNames: [N.data],\n    dataPathArr: [nil], // TODO can its length be used as dataLevel if nil is removed?\n    dataLevel: 0,\n    dataTypes: [],\n    definedProperties: new Set<string>(),\n    topSchemaRef: gen.scopeValue(\n      \"schema\",\n      this.opts.code.source === true\n        ? {ref: sch.schema, code: stringify(sch.schema)}\n        : {ref: sch.schema}\n    ),\n    validateName,\n    ValidationError: _ValidationError,\n    schema: sch.schema,\n    schemaEnv: sch,\n    rootId,\n    baseId: sch.baseId || rootId,\n    schemaPath: nil,\n    errSchemaPath: sch.schemaPath || (this.opts.jtd ? \"\" : \"#\"),\n    errorPath: _`\"\"`,\n    opts: this.opts,\n    self: this,\n  }\n\n  let sourceCode: string | undefined\n  try {\n    this._compilations.add(sch)\n    validateFunctionCode(schemaCxt)\n    gen.optimize(this.opts.code.optimize)\n    // gen.optimize(1)\n    const validateCode = gen.toString()\n    sourceCode = `${gen.scopeRefs(N.scope)}return ${validateCode}`\n    // console.log((codeSize += sourceCode.length), (nodeCount += gen.nodeCount))\n    if (this.opts.code.process) sourceCode = this.opts.code.process(sourceCode, sch)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode)\n    const makeValidate = new Function(`${N.self}`, `${N.scope}`, sourceCode)\n    const validate: AnyValidateFunction = makeValidate(this, this.scope.get())\n    this.scope.value(validateName, {ref: validate})\n\n    validate.errors = null\n    validate.schema = sch.schema\n    validate.schemaEnv = sch\n    if (sch.$async) (validate as AsyncValidateFunction).$async = true\n    if (this.opts.code.source === true) {\n      validate.source = {validateName, validateCode, scopeValues: gen._values}\n    }\n    if (this.opts.unevaluated) {\n      const {props, items} = schemaCxt\n      validate.evaluated = {\n        props: props instanceof Name ? undefined : props,\n        items: items instanceof Name ? undefined : items,\n        dynamicProps: props instanceof Name,\n        dynamicItems: items instanceof Name,\n      }\n      if (validate.source) validate.source.evaluated = stringify(validate.evaluated)\n    }\n    sch.validate = validate\n    return sch\n  } catch (e) {\n    delete sch.validate\n    delete sch.validateName\n    if (sourceCode) this.logger.error(\"Error compiling schema, function code:\", sourceCode)\n    // console.log(\"\\n\\n\\n *** \\n\", sourceCode, this.opts)\n    throw e\n  } finally {\n    this._compilations.delete(sch)\n  }\n}\n\nexport function resolveRef(\n  this: Ajv,\n  root: SchemaEnv,\n  baseId: string,\n  ref: string\n): AnySchema | SchemaEnv | undefined {\n  ref = resolveUrl(this.opts.uriResolver, baseId, ref)\n  const schOrFunc = root.refs[ref]\n  if (schOrFunc) return schOrFunc\n\n  let _sch = resolve.call(this, root, ref)\n  if (_sch === undefined) {\n    const schema = root.localRefs?.[ref] // TODO maybe localRefs should hold SchemaEnv\n    const {schemaId} = this.opts\n    if (schema) _sch = new SchemaEnv({schema, schemaId, root, baseId})\n  }\n\n  if (_sch === undefined) return\n  return (root.refs[ref] = inlineOrCompile.call(this, _sch))\n}\n\nfunction inlineOrCompile(this: Ajv, sch: SchemaEnv): AnySchema | SchemaEnv {\n  if (inlineRef(sch.schema, this.opts.inlineRefs)) return sch.schema\n  return sch.validate ? sch : compileSchema.call(this, sch)\n}\n\n// Index of schema compilation in the currently compiled list\nexport function getCompilingSchema(this: Ajv, schEnv: SchemaEnv): SchemaEnv | void {\n  for (const sch of this._compilations) {\n    if (sameSchemaEnv(sch, schEnv)) return sch\n  }\n}\n\nfunction sameSchemaEnv(s1: SchemaEnv, s2: SchemaEnv): boolean {\n  return s1.schema === s2.schema && s1.root === s2.root && s1.baseId === s2.baseId\n}\n\n// resolve and compile the references ($ref)\n// TODO returns AnySchemaObject (if the schema can be inlined) or validation function\nfunction resolve(\n  this: Ajv,\n  root: SchemaEnv, // information about the root schema for the current schema\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  let sch\n  while (typeof (sch = this.refs[ref]) == \"string\") ref = sch\n  return sch || this.schemas[ref] || resolveSchema.call(this, root, ref)\n}\n\n// Resolve schema, its root and baseId\nexport function resolveSchema(\n  this: Ajv,\n  root: SchemaEnv, // root object with properties schema, refs TODO below SchemaEnv is assigned to it\n  ref: string // reference to resolve\n): SchemaEnv | undefined {\n  const p = this.opts.uriResolver.parse(ref)\n  const refPath = _getFullPath(this.opts.uriResolver, p)\n  let baseId = getFullPath(this.opts.uriResolver, root.baseId, undefined)\n  // TODO `Object.keys(root.schema).length > 0` should not be needed - but removing breaks 2 tests\n  if (Object.keys(root.schema).length > 0 && refPath === baseId) {\n    return getJsonPointer.call(this, p, root)\n  }\n\n  const id = normalizeId(refPath)\n  const schOrRef = this.refs[id] || this.schemas[id]\n  if (typeof schOrRef == \"string\") {\n    const sch = resolveSchema.call(this, root, schOrRef)\n    if (typeof sch?.schema !== \"object\") return\n    return getJsonPointer.call(this, p, sch)\n  }\n\n  if (typeof schOrRef?.schema !== \"object\") return\n  if (!schOrRef.validate) compileSchema.call(this, schOrRef)\n  if (id === normalizeId(ref)) {\n    const {schema} = schOrRef\n    const {schemaId} = this.opts\n    const schId = schema[schemaId]\n    if (schId) baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    return new SchemaEnv({schema, schemaId, root, baseId})\n  }\n  return getJsonPointer.call(this, p, schOrRef)\n}\n\nconst PREVENT_SCOPE_CHANGE = new Set([\n  \"properties\",\n  \"patternProperties\",\n  \"enum\",\n  \"dependencies\",\n  \"definitions\",\n])\n\nfunction getJsonPointer(\n  this: Ajv,\n  parsedRef: URI.URIComponents,\n  {baseId, schema, root}: SchemaEnv\n): SchemaEnv | undefined {\n  if (parsedRef.fragment?.[0] !== \"/\") return\n  for (const part of parsedRef.fragment.slice(1).split(\"/\")) {\n    if (typeof schema === \"boolean\") return\n    const partSchema = schema[unescapeFragment(part)]\n    if (partSchema === undefined) return\n    schema = partSchema\n    // TODO PREVENT_SCOPE_CHANGE could be defined in keyword def?\n    const schId = typeof schema === \"object\" && schema[this.opts.schemaId]\n    if (!PREVENT_SCOPE_CHANGE.has(part) && schId) {\n      baseId = resolveUrl(this.opts.uriResolver, baseId, schId)\n    }\n  }\n  let env: SchemaEnv | undefined\n  if (typeof schema != \"boolean\" && schema.$ref && !schemaHasRulesButRef(schema, this.RULES)) {\n    const $ref = resolveUrl(this.opts.uriResolver, baseId, schema.$ref)\n    env = resolveSchema.call(this, root, $ref)\n  }\n  // even though resolution failed we need to return SchemaEnv to throw exception\n  // so that compileAsync loads missing schema.\n  const {schemaId} = this.opts\n  env = env || new SchemaEnv({schema, schemaId, root, baseId})\n  if (env.schema !== env.root.schema) return env\n  return undefined\n}\n","export function merge(...sets:Array<string>):string {\n\tif (sets.length > 1) {\n\t\tsets[0] = sets[0].slice(0, -1);\n\t\tconst xl = sets.length - 1;\n\t\tfor (let x = 1; x < xl; ++x) {\n\t\t\tsets[x] = sets[x].slice(1, -1);\n\t\t}\n\t\tsets[xl] = sets[xl].slice(1);\n\t\treturn sets.join('');\n\t} else {\n\t\treturn sets[0];\n\t}\n}\n\nexport function subexp(str:string):string {\n\treturn \"(?:\" + str + \")\";\n}\n\nexport function typeOf(o:any):string {\n\treturn o === undefined ? \"undefined\" : (o === null ? \"null\" : Object.prototype.toString.call(o).split(\" \").pop().split(\"]\").shift().toLowerCase());\n}\n\nexport function toUpperCase(str:string):string {\n\treturn str.toUpperCase();\n}\n\nexport function toArray(obj:any):Array<any> {\n\treturn obj !== undefined && obj !== null ? (obj instanceof Array ? obj : (typeof obj.length !== \"number\" || obj.split || obj.setInterval || obj.call ? [obj] : Array.prototype.slice.call(obj))) : [];\n}\n\n\nexport function assign(target: object, source: any): any {\n\tconst obj = target as any;\n\tif (source) {\n\t\tfor (const key in source) {\n\t\t\tobj[key] = source[key];\n\t\t}\n\t}\n\treturn obj;\n}","import { URIRegExps } from \"./uri\";\nimport { merge, subexp } from \"./util\";\n\nexport function buildExps(isIRI:boolean):URIRegExps {\n\tconst\n\t\tALPHA$$ = \"[A-Za-z]\",\n\t\tCR$ = \"[\\\\x0D]\",\n\t\tDIGIT$$ = \"[0-9]\",\n\t\tDQUOTE$$ = \"[\\\\x22]\",\n\t\tHEXDIG$$ = merge(DIGIT$$, \"[A-Fa-f]\"),  //case-insensitive\n\t\tLF$$ = \"[\\\\x0A]\",\n\t\tSP$$ = \"[\\\\x20]\",\n\t\tPCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$)),  //expanded\n\t\tGEN_DELIMS$$ = \"[\\\\:\\\\/\\\\?\\\\#\\\\[\\\\]\\\\@]\",\n\t\tSUB_DELIMS$$ = \"[\\\\!\\\\$\\\\&\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\=]\",\n\t\tRESERVED$$ = merge(GEN_DELIMS$$, SUB_DELIMS$$),\n\t\tUCSCHAR$$ = isIRI ? \"[\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF]\" : \"[]\",  //subset, excludes bidi control characters\n\t\tIPRIVATE$$ = isIRI ? \"[\\\\uE000-\\\\uF8FF]\" : \"[]\",  //subset\n\t\tUNRESERVED$$ = merge(ALPHA$$, DIGIT$$, \"[\\\\-\\\\.\\\\_\\\\~]\", UCSCHAR$$),\n\t\tSCHEME$ = subexp(ALPHA$$ + merge(ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\") + \"*\"),\n\t\tUSERINFO$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\")) + \"*\"),\n\t\tDEC_OCTET$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"[1-9]\" + DIGIT$$) + \"|\" + DIGIT$$),\n\t\tDEC_OCTET_RELAXED$ = subexp(subexp(\"25[0-5]\") + \"|\" + subexp(\"2[0-4]\" + DIGIT$$) + \"|\" + subexp(\"1\" + DIGIT$$ + DIGIT$$) + \"|\" + subexp(\"0?[1-9]\" + DIGIT$$) + \"|0?0?\" + DIGIT$$),  //relaxed parsing rules\n\t\tIPV4ADDRESS$ = subexp(DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$ + \"\\\\.\" + DEC_OCTET_RELAXED$),\n\t\tH16$ = subexp(HEXDIG$$ + \"{1,4}\"),\n\t\tLS32$ = subexp(subexp(H16$ + \"\\\\:\" + H16$) + \"|\" + IPV4ADDRESS$),\n\t\tIPV6ADDRESS1$ = subexp(                                                            subexp(H16$ + \"\\\\:\") + \"{6}\" + LS32$), //                           6( h16 \":\" ) ls32\n\t\tIPV6ADDRESS2$ = subexp(                                                 \"\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{5}\" + LS32$), //                      \"::\" 5( h16 \":\" ) ls32\n\t\tIPV6ADDRESS3$ = subexp(subexp(                                 H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{4}\" + LS32$), //[               h16 ] \"::\" 4( h16 \":\" ) ls32\n\t\tIPV6ADDRESS4$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,1}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{3}\" + LS32$), //[ *1( h16 \":\" ) h16 ] \"::\" 3( h16 \":\" ) ls32\n\t\tIPV6ADDRESS5$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,2}\" + H16$) + \"?\\\\:\\\\:\" + subexp(H16$ + \"\\\\:\") + \"{2}\" + LS32$), //[ *2( h16 \":\" ) h16 ] \"::\" 2( h16 \":\" ) ls32\n\t\tIPV6ADDRESS6$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,3}\" + H16$) + \"?\\\\:\\\\:\" +        H16$ + \"\\\\:\"          + LS32$), //[ *3( h16 \":\" ) h16 ] \"::\"    h16 \":\"   ls32\n\t\tIPV6ADDRESS7$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,4}\" + H16$) + \"?\\\\:\\\\:\"                                + LS32$), //[ *4( h16 \":\" ) h16 ] \"::\"              ls32\n\t\tIPV6ADDRESS8$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,5}\" + H16$) + \"?\\\\:\\\\:\"                                + H16$ ), //[ *5( h16 \":\" ) h16 ] \"::\"              h16\n\t\tIPV6ADDRESS9$ = subexp(subexp(subexp(H16$ + \"\\\\:\") + \"{0,6}\" + H16$) + \"?\\\\:\\\\:\"                                       ), //[ *6( h16 \":\" ) h16 ] \"::\"\n\t\tIPV6ADDRESS$ = subexp([IPV6ADDRESS1$, IPV6ADDRESS2$, IPV6ADDRESS3$, IPV6ADDRESS4$, IPV6ADDRESS5$, IPV6ADDRESS6$, IPV6ADDRESS7$, IPV6ADDRESS8$, IPV6ADDRESS9$].join(\"|\")),\n\t\tZONEID$ = subexp(subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$) + \"+\"),  //RFC 6874\n\t\tIPV6ADDRZ$ = subexp(IPV6ADDRESS$ + \"\\\\%25\" + ZONEID$),  //RFC 6874\n\t\tIPV6ADDRZ_RELAXED$ = subexp(IPV6ADDRESS$ + subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + ZONEID$),  //RFC 6874, with relaxed parsing rules\n\t\tIPVFUTURE$ = subexp(\"[vV]\" + HEXDIG$$ + \"+\\\\.\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:]\") + \"+\"),\n\t\tIP_LITERAL$ = subexp(\"\\\\[\" + subexp(IPV6ADDRZ_RELAXED$ + \"|\" + IPV6ADDRESS$ + \"|\" + IPVFUTURE$) + \"\\\\]\"),  //RFC 6874\n\t\tREG_NAME$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$)) + \"*\"),\n\t\tHOST$ = subexp(IP_LITERAL$ + \"|\" + IPV4ADDRESS$ + \"(?!\" + REG_NAME$ + \")\" + \"|\" + REG_NAME$),\n\t\tPORT$ = subexp(DIGIT$$ + \"*\"),\n\t\tAUTHORITY$ = subexp(subexp(USERINFO$ + \"@\") + \"?\" + HOST$ + subexp(\"\\\\:\" + PORT$) + \"?\"),\n\t\tPCHAR$ = subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@]\")),\n\t\tSEGMENT$ = subexp(PCHAR$ + \"*\"),\n\t\tSEGMENT_NZ$ = subexp(PCHAR$ + \"+\"),\n\t\tSEGMENT_NZ_NC$ = subexp(subexp(PCT_ENCODED$ + \"|\" + merge(UNRESERVED$$, SUB_DELIMS$$, \"[\\\\@]\")) + \"+\"),\n\t\tPATH_ABEMPTY$ = subexp(subexp(\"\\\\/\" + SEGMENT$) + \"*\"),\n\t\tPATH_ABSOLUTE$ = subexp(\"\\\\/\" + subexp(SEGMENT_NZ$ + PATH_ABEMPTY$) + \"?\"),  //simplified\n\t\tPATH_NOSCHEME$ = subexp(SEGMENT_NZ_NC$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_ROOTLESS$ = subexp(SEGMENT_NZ$ + PATH_ABEMPTY$),  //simplified\n\t\tPATH_EMPTY$ = \"(?!\" + PCHAR$ + \")\",\n\t\tPATH$ = subexp(PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tQUERY$ = subexp(subexp(PCHAR$ + \"|\" + merge(\"[\\\\/\\\\?]\", IPRIVATE$$)) + \"*\"),\n\t\tFRAGMENT$ = subexp(subexp(PCHAR$ + \"|[\\\\/\\\\?]\") + \"*\"),\n\t\tHIER_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$),\n\t\tURI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tRELATIVE_PART$ = subexp(subexp(\"\\\\/\\\\/\" + AUTHORITY$ + PATH_ABEMPTY$) + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$),\n\t\tRELATIVE$ = subexp(RELATIVE_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\" + subexp(\"\\\\#\" + FRAGMENT$) + \"?\"),\n\t\tURI_REFERENCE$ = subexp(URI$ + \"|\" + RELATIVE$),\n\t\tABSOLUTE_URI$ = subexp(SCHEME$ + \"\\\\:\" + HIER_PART$ + subexp(\"\\\\?\" + QUERY$) + \"?\"),\n\n\t\tGENERIC_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tRELATIVE_REF$ = \"^(){0}\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_NOSCHEME$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tABSOLUTE_REF$ = \"^(\" + SCHEME$ + \")\\\\:\" + subexp(subexp(\"\\\\/\\\\/(\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?)\") + \"?(\" + PATH_ABEMPTY$ + \"|\" + PATH_ABSOLUTE$ + \"|\" + PATH_ROOTLESS$ + \"|\" + PATH_EMPTY$ + \")\") + subexp(\"\\\\?(\" + QUERY$ + \")\") + \"?$\",\n\t\tSAMEDOC_REF$ = \"^\" + subexp(\"\\\\#(\" + FRAGMENT$ + \")\") + \"?$\",\n\t\tAUTHORITY_REF$ = \"^\" + subexp(\"(\" + USERINFO$ + \")@\") + \"?(\" + HOST$ + \")\" + subexp(\"\\\\:(\" + PORT$ + \")\") + \"?$\"\n\t;\n\n\treturn {\n\t\tNOT_SCHEME : new RegExp(merge(\"[^]\", ALPHA$$, DIGIT$$, \"[\\\\+\\\\-\\\\.]\"), \"g\"),\n\t\tNOT_USERINFO : new RegExp(merge(\"[^\\\\%\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_HOST : new RegExp(merge(\"[^\\\\%\\\\[\\\\]\\\\:]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH : new RegExp(merge(\"[^\\\\%\\\\/\\\\:\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_PATH_NOSCHEME : new RegExp(merge(\"[^\\\\%\\\\/\\\\@]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tNOT_QUERY : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\", IPRIVATE$$), \"g\"),\n\t\tNOT_FRAGMENT : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, SUB_DELIMS$$, \"[\\\\:\\\\@\\\\/\\\\?]\"), \"g\"),\n\t\tESCAPE : new RegExp(merge(\"[^]\", UNRESERVED$$, SUB_DELIMS$$), \"g\"),\n\t\tUNRESERVED : new RegExp(UNRESERVED$$, \"g\"),\n\t\tOTHER_CHARS : new RegExp(merge(\"[^\\\\%]\", UNRESERVED$$, RESERVED$$), \"g\"),\n\t\tPCT_ENCODED : new RegExp(PCT_ENCODED$, \"g\"),\n\t\tIPV4ADDRESS : new RegExp(\"^(\" + IPV4ADDRESS$ + \")$\"),\n\t\tIPV6ADDRESS : new RegExp(\"^\\\\[?(\" + IPV6ADDRESS$ + \")\" + subexp(subexp(\"\\\\%25|\\\\%(?!\" + HEXDIG$$ + \"{2})\") + \"(\" + ZONEID$ + \")\") + \"?\\\\]?$\")  //RFC 6874, with relaxed parsing rules\n\t};\n}\n\nexport default buildExps(false);\n","import { URIRegExps } from \"./uri\";\nimport { buildExps } from \"./regexps-uri\";\n\nexport default buildExps(true);\n","'use strict';\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexPunycode = /^xn--/;\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\nconst errors = {\n\t'overflow': 'Overflow: input needs wider integers to process',\n\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t'invalid-input': 'Invalid input'\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\nconst floor = Math.floor;\nconst stringFromCharCode = String.fromCharCode;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type) {\n\tthrow new RangeError(errors[type]);\n}\n\n/**\n * A generic `Array#map` utility function.\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} callback The function that gets called for every array\n * item.\n * @returns {Array} A new array of values returned by the callback function.\n */\nfunction map(array, fn) {\n\tconst result = [];\n\tlet length = array.length;\n\twhile (length--) {\n\t\tresult[length] = fn(array[length]);\n\t}\n\treturn result;\n}\n\n/**\n * A simple `Array#map`-like wrapper to work with domain name strings or email\n * addresses.\n * @private\n * @param {String} domain The domain name or email address.\n * @param {Function} callback The function that gets called for every\n * character.\n * @returns {Array} A new string of characters returned by the callback\n * function.\n */\nfunction mapDomain(string, fn) {\n\tconst parts = string.split('@');\n\tlet result = '';\n\tif (parts.length > 1) {\n\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t// the local part (i.e. everything up to `@`) intact.\n\t\tresult = parts[0] + '@';\n\t\tstring = parts[1];\n\t}\n\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\tstring = string.replace(regexSeparators, '\\x2E');\n\tconst labels = string.split('.');\n\tconst encoded = map(labels, fn).join('.');\n\treturn result + encoded;\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(string) {\n\tconst output = [];\n\tlet counter = 0;\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// It's an unmatched surrogate; only append this code unit, in case the\n\t\t\t\t// next code unit is the high surrogate of a surrogate pair.\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n/**\n * Creates a string based on an array of numeric code points.\n * @see `punycode.ucs2.decode`\n * @memberOf punycode.ucs2\n * @name encode\n * @param {Array} codePoints The array of numeric code points.\n * @returns {String} The new Unicode string (UCS-2).\n */\nconst ucs2encode = array => String.fromCodePoint(...array);\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nconst basicToDigit = function(codePoint) {\n\tif (codePoint - 0x30 < 0x0A) {\n\t\treturn codePoint - 0x16;\n\t}\n\tif (codePoint - 0x41 < 0x1A) {\n\t\treturn codePoint - 0x41;\n\t}\n\tif (codePoint - 0x61 < 0x1A) {\n\t\treturn codePoint - 0x61;\n\t}\n\treturn base;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nconst digitToBasic = function(digit, flag) {\n\t//  0..25 map to ASCII a..z or A..Z\n\t// 26..35 map to ASCII 0..9\n\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nconst adapt = function(delta, numPoints, firstTime) {\n\tlet k = 0;\n\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\tdelta += floor(delta / numPoints);\n\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\tdelta = floor(delta / baseMinusTMin);\n\t}\n\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nconst decode = function(input) {\n\t// Don't use UCS-2.\n\tconst output = [];\n\tconst inputLength = input.length;\n\tlet i = 0;\n\tlet n = initialN;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points: let `basic` be the number of input code\n\t// points before the last delimiter, or `0` if there is none, then copy\n\t// the first basic code points to the output.\n\n\tlet basic = input.lastIndexOf(delimiter);\n\tif (basic < 0) {\n\t\tbasic = 0;\n\t}\n\n\tfor (let j = 0; j < basic; ++j) {\n\t\t// if it's not a basic code point\n\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\terror('not-basic');\n\t\t}\n\t\toutput.push(input.charCodeAt(j));\n\t}\n\n\t// Main decoding loop: start just after the last delimiter if any basic code\n\t// points were copied; start at the beginning otherwise.\n\n\tfor (let index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t// `index` is the index of the next character to be consumed.\n\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t// which gets added to `i`. The overflow checking is easier\n\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t// value at the end to obtain `delta`.\n\t\tlet oldi = i;\n\t\tfor (let w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\tif (index >= inputLength) {\n\t\t\t\terror('invalid-input');\n\t\t\t}\n\n\t\t\tconst digit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\ti += digit * w;\n\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\tif (digit < t) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconst baseMinusT = base - t;\n\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tw *= baseMinusT;\n\n\t\t}\n\n\t\tconst out = output.length + 1;\n\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t// incrementing `n` each time, so we'll fix that now:\n\t\tif (floor(i / out) > maxInt - n) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tn += floor(i / out);\n\t\ti %= out;\n\n\t\t// Insert `n` at position `i` of the output.\n\t\toutput.splice(i++, 0, n);\n\n\t}\n\n\treturn String.fromCodePoint(...output);\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nconst encode = function(input) {\n\tconst output = [];\n\n\t// Convert the input in UCS-2 to an array of Unicode code points.\n\tinput = ucs2decode(input);\n\n\t// Cache the length.\n\tlet inputLength = input.length;\n\n\t// Initialize the state.\n\tlet n = initialN;\n\tlet delta = 0;\n\tlet bias = initialBias;\n\n\t// Handle the basic code points.\n\tfor (const currentValue of input) {\n\t\tif (currentValue < 0x80) {\n\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t}\n\t}\n\n\tlet basicLength = output.length;\n\tlet handledCPCount = basicLength;\n\n\t// `handledCPCount` is the number of code points that have been handled;\n\t// `basicLength` is the number of basic code points.\n\n\t// Finish the basic string with a delimiter unless it's empty.\n\tif (basicLength) {\n\t\toutput.push(delimiter);\n\t}\n\n\t// Main encoding loop:\n\twhile (handledCPCount < inputLength) {\n\n\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t// larger one:\n\t\tlet m = maxInt;\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\tm = currentValue;\n\t\t\t}\n\t\t}\n\n\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t// but guard against overflow.\n\t\tconst handledCPCountPlusOne = handledCPCount + 1;\n\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\terror('overflow');\n\t\t}\n\n\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\tn = m;\n\n\t\tfor (const currentValue of input) {\n\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\t\t\tif (currentValue == n) {\n\t\t\t\t// Represent delta as a generalized variable-length integer.\n\t\t\t\tlet q = delta;\n\t\t\t\tfor (let k = base; /* no condition */; k += base) {\n\t\t\t\t\tconst t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tconst qMinusT = q - t;\n\t\t\t\t\tconst baseMinusT = base - t;\n\t\t\t\t\toutput.push(\n\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t);\n\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t}\n\n\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\tdelta = 0;\n\t\t\t\t++handledCPCount;\n\t\t\t}\n\t\t}\n\n\t\t++delta;\n\t\t++n;\n\n\t}\n\treturn output.join('');\n};\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nconst toUnicode = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexPunycode.test(string)\n\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t: string;\n\t});\n};\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nconst toASCII = function(input) {\n\treturn mapDomain(input, function(string) {\n\t\treturn regexNonASCII.test(string)\n\t\t\t? 'xn--' + encode(string)\n\t\t\t: string;\n\t});\n};\n\n/*--------------------------------------------------------------------------*/\n\n/** Define the public API */\nconst punycode = {\n\t/**\n\t * A string representing the current Punycode.js version number.\n\t * @memberOf punycode\n\t * @type String\n\t */\n\t'version': '2.1.0',\n\t/**\n\t * An object of methods to convert from JavaScript's internal character\n\t * representation (UCS-2) to Unicode code points, and back.\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode\n\t * @type Object\n\t */\n\t'ucs2': {\n\t\t'decode': ucs2decode,\n\t\t'encode': ucs2encode\n\t},\n\t'decode': decode,\n\t'encode': encode,\n\t'toASCII': toASCII,\n\t'toUnicode': toUnicode\n};\n\nexport default punycode;\n","/**\n * URI.js\n *\n * @fileoverview An RFC 3986 compliant, scheme extendable URI parsing/validating/resolving library for JavaScript.\n * @author <a href=\"mailto:gary.court@gmail.com\">Gary Court</a>\n * @see http://github.com/garycourt/uri-js\n */\n\n/**\n * Copyright 2011 Gary Court. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without modification, are\n * permitted provided that the following conditions are met:\n *\n *    1. Redistributions of source code must retain the above copyright notice, this list of\n *       conditions and the following disclaimer.\n *\n *    2. Redistributions in binary form must reproduce the above copyright notice, this list\n *       of conditions and the following disclaimer in the documentation and/or other materials\n *       provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GARY COURT ``AS IS'' AND ANY EXPRESS OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\n * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GARY COURT OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\n * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation are those of the\n * authors and should not be interpreted as representing official policies, either expressed\n * or implied, of Gary Court.\n */\n\nimport URI_PROTOCOL from \"./regexps-uri\";\nimport IRI_PROTOCOL from \"./regexps-iri\";\nimport punycode from \"punycode\";\nimport { toUpperCase, typeOf, assign } from \"./util\";\n\nexport interface URIComponents {\n\tscheme?:string;\n\tuserinfo?:string;\n\thost?:string;\n\tport?:number|string;\n\tpath?:string;\n\tquery?:string;\n\tfragment?:string;\n\treference?:string;\n\terror?:string;\n}\n\nexport interface URIOptions {\n\tscheme?:string;\n\treference?:string;\n\ttolerant?:boolean;\n\tabsolutePath?:boolean;\n\tiri?:boolean;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n}\n\nexport interface URISchemeHandler<Components extends URIComponents = URIComponents, Options extends URIOptions = URIOptions, ParentComponents extends URIComponents = URIComponents> {\n\tscheme:string;\n\tparse(components:ParentComponents, options:Options):Components;\n\tserialize(components:Components, options:Options):ParentComponents;\n\tunicodeSupport?:boolean;\n\tdomainHost?:boolean;\n\tabsolutePath?:boolean;\n}\n\nexport interface URIRegExps {\n\tNOT_SCHEME : RegExp,\n\tNOT_USERINFO : RegExp,\n\tNOT_HOST : RegExp,\n\tNOT_PATH : RegExp,\n\tNOT_PATH_NOSCHEME : RegExp,\n\tNOT_QUERY : RegExp,\n\tNOT_FRAGMENT : RegExp,\n\tESCAPE : RegExp,\n\tUNRESERVED : RegExp,\n\tOTHER_CHARS : RegExp,\n\tPCT_ENCODED : RegExp,\n\tIPV4ADDRESS : RegExp,\n\tIPV6ADDRESS : RegExp,\n}\n\nexport const SCHEMES:{[scheme:string]:URISchemeHandler} = {};\n\nexport function pctEncChar(chr:string):string {\n\tconst c = chr.charCodeAt(0);\n\tlet e:string;\n\n\tif (c < 16) e = \"%0\" + c.toString(16).toUpperCase();\n\telse if (c < 128) e = \"%\" + c.toString(16).toUpperCase();\n\telse if (c < 2048) e = \"%\" + ((c >> 6) | 192).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\telse e = \"%\" + ((c >> 12) | 224).toString(16).toUpperCase() + \"%\" + (((c >> 6) & 63) | 128).toString(16).toUpperCase() + \"%\" + ((c & 63) | 128).toString(16).toUpperCase();\n\n\treturn e;\n}\n\nexport function pctDecChars(str:string):string {\n\tlet newStr = \"\";\n\tlet i = 0;\n\tconst il = str.length;\n\n\twhile (i < il) {\n\t\tconst c = parseInt(str.substr(i + 1, 2), 16);\n\n\t\tif (c < 128) {\n\t\t\tnewStr += String.fromCharCode(c);\n\t\t\ti += 3;\n\t\t}\n\t\telse if (c >= 194 && c < 224) {\n\t\t\tif ((il - i) >= 6) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 6);\n\t\t\t}\n\t\t\ti += 6;\n\t\t}\n\t\telse if (c >= 224) {\n\t\t\tif ((il - i) >= 9) {\n\t\t\t\tconst c2 = parseInt(str.substr(i + 4, 2), 16);\n\t\t\t\tconst c3 = parseInt(str.substr(i + 7, 2), 16);\n\t\t\t\tnewStr += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\t\t\t} else {\n\t\t\t\tnewStr += str.substr(i, 9);\n\t\t\t}\n\t\t\ti += 9;\n\t\t}\n\t\telse {\n\t\t\tnewStr += str.substr(i, 3);\n\t\t\ti += 3;\n\t\t}\n\t}\n\n\treturn newStr;\n}\n\nfunction _normalizeComponentEncoding(components:URIComponents, protocol:URIRegExps) {\n\tfunction decodeUnreserved(str:string):string {\n\t\tconst decStr = pctDecChars(str);\n\t\treturn (!decStr.match(protocol.UNRESERVED) ? str : decStr);\n\t}\n\n\tif (components.scheme) components.scheme = String(components.scheme).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_SCHEME, \"\");\n\tif (components.userinfo !== undefined) components.userinfo = String(components.userinfo).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_USERINFO, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.host !== undefined) components.host = String(components.host).replace(protocol.PCT_ENCODED, decodeUnreserved).toLowerCase().replace(protocol.NOT_HOST, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.path !== undefined) components.path = String(components.path).replace(protocol.PCT_ENCODED, decodeUnreserved).replace((components.scheme ? protocol.NOT_PATH : protocol.NOT_PATH_NOSCHEME), pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.query !== undefined) components.query = String(components.query).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_QUERY, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\tif (components.fragment !== undefined) components.fragment = String(components.fragment).replace(protocol.PCT_ENCODED, decodeUnreserved).replace(protocol.NOT_FRAGMENT, pctEncChar).replace(protocol.PCT_ENCODED, toUpperCase);\n\n\treturn components;\n};\n\nfunction _stripLeadingZeros(str:string):string {\n\treturn str.replace(/^0*(.*)/, \"$1\") || \"0\";\n}\n\nfunction _normalizeIPv4(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV4ADDRESS) || [];\n\tconst [, address] = matches;\n\t\n\tif (address) {\n\t\treturn address.split(\".\").map(_stripLeadingZeros).join(\".\");\n\t} else {\n\t\treturn host;\n\t}\n}\n\nfunction _normalizeIPv6(host:string, protocol:URIRegExps):string {\n\tconst matches = host.match(protocol.IPV6ADDRESS) || [];\n\tconst [, address, zone] = matches;\n\n\tif (address) {\n\t\tconst [last, first] = address.toLowerCase().split('::').reverse();\n\t\tconst firstFields = first ? first.split(\":\").map(_stripLeadingZeros) : [];\n\t\tconst lastFields = last.split(\":\").map(_stripLeadingZeros);\n\t\tconst isLastFieldIPv4Address = protocol.IPV4ADDRESS.test(lastFields[lastFields.length - 1]);\n\t\tconst fieldCount = isLastFieldIPv4Address ? 7 : 8;\n\t\tconst lastFieldsStart = lastFields.length - fieldCount;\n\t\tconst fields = Array<string>(fieldCount);\n\n\t\tfor (let x = 0; x < fieldCount; ++x) {\n\t\t\tfields[x] = firstFields[x] || lastFields[lastFieldsStart + x] || '';\n\t\t}\n\n\t\tif (isLastFieldIPv4Address) {\n\t\t\tfields[fieldCount - 1] = _normalizeIPv4(fields[fieldCount - 1], protocol);\n\t\t}\n\n\t\tconst allZeroFields = fields.reduce<Array<{index:number,length:number}>>((acc, field, index) => {\n\t\t\tif (!field || field === \"0\") {\n\t\t\t\tconst lastLongest = acc[acc.length - 1];\n\t\t\t\tif (lastLongest && lastLongest.index + lastLongest.length === index) {\n\t\t\t\t\tlastLongest.length++;\n\t\t\t\t} else {\n\t\t\t\t\tacc.push({ index, length : 1 });\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, []);\n\n\t\tconst longestZeroFields = allZeroFields.sort((a, b) => b.length - a.length)[0];\n\n\t\tlet newHost:string;\n\t\tif (longestZeroFields && longestZeroFields.length > 1) {\n\t\t\tconst newFirst = fields.slice(0, longestZeroFields.index) ;\n\t\t\tconst newLast = fields.slice(longestZeroFields.index + longestZeroFields.length);\n\t\t\tnewHost = newFirst.join(\":\") + \"::\" + newLast.join(\":\");\n\t\t} else {\n\t\t\tnewHost = fields.join(\":\");\n\t\t}\n\n\t\tif (zone) {\n\t\t\tnewHost += \"%\" + zone;\n\t\t}\n\n\t\treturn newHost;\n\t} else {\n\t\treturn host;\n\t}\n}\n\nconst URI_PARSE = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:([^\\/?#@]*)@)?(\\[[^\\/?#\\]]+\\]|[^\\/?#:]*)(?:\\:(\\d*))?))?([^?#]*)(?:\\?([^#]*))?(?:#((?:.|\\n|\\r)*))?/i;\nconst NO_MATCH_IS_UNDEFINED = (<RegExpMatchArray>(\"\").match(/(){0}/))[1] === undefined;\n\nexport function parse(uriString:string, options:URIOptions = {}):URIComponents {\n\tconst components:URIComponents = {};\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\n\tif (options.reference === \"suffix\") uriString = (options.scheme ? options.scheme + \":\" : \"\") + \"//\" + uriString;\n\n\tconst matches = uriString.match(URI_PARSE);\n\n\tif (matches) {\n\t\tif (NO_MATCH_IS_UNDEFINED) {\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1];\n\t\t\tcomponents.userinfo = matches[3];\n\t\t\tcomponents.host = matches[4];\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = matches[7];\n\t\t\tcomponents.fragment = matches[8];\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = matches[5];\n\t\t\t}\n\t\t} else {  //IE FIX for improper RegExp matching\n\t\t\t//store each component\n\t\t\tcomponents.scheme = matches[1] || undefined;\n\t\t\tcomponents.userinfo = (uriString.indexOf(\"@\") !== -1 ? matches[3] : undefined);\n\t\t\tcomponents.host = (uriString.indexOf(\"//\") !== -1 ? matches[4] : undefined);\n\t\t\tcomponents.port = parseInt(matches[5], 10);\n\t\t\tcomponents.path = matches[6] || \"\";\n\t\t\tcomponents.query = (uriString.indexOf(\"?\") !== -1 ? matches[7] : undefined);\n\t\t\tcomponents.fragment = (uriString.indexOf(\"#\") !== -1 ? matches[8] : undefined);\n\n\t\t\t//fix port number\n\t\t\tif (isNaN(components.port)) {\n\t\t\t\tcomponents.port = (uriString.match(/\\/\\/(?:.|\\n)*\\:(?:\\/|\\?|\\#|$)/) ? matches[4] : undefined);\n\t\t\t}\n\t\t}\n\n\t\tif (components.host) {\n\t\t\t//normalize IP hosts\n\t\t\tcomponents.host = _normalizeIPv6(_normalizeIPv4(components.host, protocol), protocol);\n\t\t}\n\n\t\t//determine reference type\n\t\tif (components.scheme === undefined && components.userinfo === undefined && components.host === undefined && components.port === undefined && !components.path && components.query === undefined) {\n\t\t\tcomponents.reference = \"same-document\";\n\t\t} else if (components.scheme === undefined) {\n\t\t\tcomponents.reference = \"relative\";\n\t\t} else if (components.fragment === undefined) {\n\t\t\tcomponents.reference = \"absolute\";\n\t\t} else {\n\t\t\tcomponents.reference = \"uri\";\n\t\t}\n\n\t\t//check for reference errors\n\t\tif (options.reference && options.reference !== \"suffix\" && options.reference !== components.reference) {\n\t\t\tcomponents.error = components.error || \"URI is not a \" + options.reference + \" reference.\";\n\t\t}\n\n\t\t//find scheme handler\n\t\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t\t//check if scheme can't handle IRIs\n\t\tif (!options.unicodeSupport && (!schemeHandler || !schemeHandler.unicodeSupport)) {\n\t\t\t//if host component is a domain name\n\t\t\tif (components.host && (options.domainHost || (schemeHandler && schemeHandler.domainHost))) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\tcomponents.host = punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t}\n\t\t\t//convert IRI -> URI\n\t\t\t_normalizeComponentEncoding(components, URI_PROTOCOL);\n\t\t} else {\n\t\t\t//normalize encodings\n\t\t\t_normalizeComponentEncoding(components, protocol);\n\t\t}\n\n\t\t//perform scheme specific parsing\n\t\tif (schemeHandler && schemeHandler.parse) {\n\t\t\tschemeHandler.parse(components, options);\n\t\t}\n\t} else {\n\t\tcomponents.error = components.error || \"URI can not be parsed.\";\n\t}\n\n\treturn components;\n};\n\nfunction _recomposeAuthority(components:URIComponents, options:URIOptions):string|undefined {\n\tconst protocol = (options.iri !== false ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\tif (components.userinfo !== undefined) {\n\t\turiTokens.push(components.userinfo);\n\t\turiTokens.push(\"@\");\n\t}\n\n\tif (components.host !== undefined) {\n\t\t//normalize IP hosts, add brackets and escape zone separator for IPv6\n\t\turiTokens.push(_normalizeIPv6(_normalizeIPv4(String(components.host), protocol), protocol).replace(protocol.IPV6ADDRESS, (_, $1, $2) => \"[\" + $1 + ($2 ? \"%25\" + $2 : \"\") + \"]\"));\n\t}\n\n\tif (typeof components.port === \"number\" || typeof components.port === \"string\") {\n\t\turiTokens.push(\":\");\n\t\turiTokens.push(String(components.port));\n\t}\n\n\treturn uriTokens.length ? uriTokens.join(\"\") : undefined;\n};\n\nconst RDS1 = /^\\.\\.?\\//;\nconst RDS2 = /^\\/\\.(\\/|$)/;\nconst RDS3 = /^\\/\\.\\.(\\/|$)/;\nconst RDS4 = /^\\.\\.?$/;\nconst RDS5 = /^\\/?(?:.|\\n)*?(?=\\/|$)/;\n\nexport function removeDotSegments(input:string):string {\n\tconst output:Array<string> = [];\n\n\twhile (input.length) {\n\t\tif (input.match(RDS1)) {\n\t\t\tinput = input.replace(RDS1, \"\");\n\t\t} else if (input.match(RDS2)) {\n\t\t\tinput = input.replace(RDS2, \"/\");\n\t\t} else if (input.match(RDS3)) {\n\t\t\tinput = input.replace(RDS3, \"/\");\n\t\t\toutput.pop();\n\t\t} else if (input === \".\" || input === \"..\") {\n\t\t\tinput = \"\";\n\t\t} else {\n\t\t\tconst im = input.match(RDS5);\n\t\t\tif (im) {\n\t\t\t\tconst s = im[0];\n\t\t\t\tinput = input.slice(s.length);\n\t\t\t\toutput.push(s);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"Unexpected dot segment condition\");\n\t\t\t}\n\t\t}\n\t}\n\n\treturn output.join(\"\");\n};\n\nexport function serialize(components:URIComponents, options:URIOptions = {}):string {\n\tconst protocol = (options.iri ? IRI_PROTOCOL : URI_PROTOCOL);\n\tconst uriTokens:Array<string> = [];\n\n\t//find scheme handler\n\tconst schemeHandler = SCHEMES[(options.scheme || components.scheme || \"\").toLowerCase()];\n\n\t//perform scheme specific serialization\n\tif (schemeHandler && schemeHandler.serialize) schemeHandler.serialize(components, options);\n\n\tif (components.host) {\n\t\t//if host component is an IPv6 address\n\t\tif (protocol.IPV6ADDRESS.test(components.host)) {\n\t\t\t//TODO: normalize IPv6 address as per RFC 5952\n\t\t}\n\n\t\t//if host component is a domain name\n\t\telse if (options.domainHost || (schemeHandler && schemeHandler.domainHost)) {\n\t\t\t//convert IDN via punycode\n\t\t\ttry {\n\t\t\t\tcomponents.host = (!options.iri ? punycode.toASCII(components.host.replace(protocol.PCT_ENCODED, pctDecChars).toLowerCase()) : punycode.toUnicode(components.host));\n\t\t\t} catch (e) {\n\t\t\t\tcomponents.error = components.error || \"Host's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t}\n\t\t}\n\t}\n\n\t//normalize encoding\n\t_normalizeComponentEncoding(components, protocol);\n\n\tif (options.reference !== \"suffix\" && components.scheme) {\n\t\turiTokens.push(components.scheme);\n\t\turiTokens.push(\":\");\n\t}\n\n\tconst authority = _recomposeAuthority(components, options);\n\tif (authority !== undefined) {\n\t\tif (options.reference !== \"suffix\") {\n\t\t\turiTokens.push(\"//\");\n\t\t}\n\n\t\turiTokens.push(authority);\n\n\t\tif (components.path && components.path.charAt(0) !== \"/\") {\n\t\t\turiTokens.push(\"/\");\n\t\t}\n\t}\n\n\tif (components.path !== undefined) {\n\t\tlet s = components.path;\n\n\t\tif (!options.absolutePath && (!schemeHandler || !schemeHandler.absolutePath)) {\n\t\t\ts = removeDotSegments(s);\n\t\t}\n\n\t\tif (authority === undefined) {\n\t\t\ts = s.replace(/^\\/\\//, \"/%2F\");  //don't allow the path to start with \"//\"\n\t\t}\n\n\t\turiTokens.push(s);\n\t}\n\n\tif (components.query !== undefined) {\n\t\turiTokens.push(\"?\");\n\t\turiTokens.push(components.query);\n\t}\n\n\tif (components.fragment !== undefined) {\n\t\turiTokens.push(\"#\");\n\t\turiTokens.push(components.fragment);\n\t}\n\n\treturn uriTokens.join(\"\");  //merge tokens into a string\n};\n\nexport function resolveComponents(base:URIComponents, relative:URIComponents, options:URIOptions = {}, skipNormalization?:boolean):URIComponents {\n\tconst target:URIComponents = {};\n\n\tif (!skipNormalization) {\n\t\tbase = parse(serialize(base, options), options);  //normalize base components\n\t\trelative = parse(serialize(relative, options), options);  //normalize relative components\n\t}\n\toptions = options || {};\n\n\tif (!options.tolerant && relative.scheme) {\n\t\ttarget.scheme = relative.scheme;\n\t\t//target.authority = relative.authority;\n\t\ttarget.userinfo = relative.userinfo;\n\t\ttarget.host = relative.host;\n\t\ttarget.port = relative.port;\n\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\ttarget.query = relative.query;\n\t} else {\n\t\tif (relative.userinfo !== undefined || relative.host !== undefined || relative.port !== undefined) {\n\t\t\t//target.authority = relative.authority;\n\t\t\ttarget.userinfo = relative.userinfo;\n\t\t\ttarget.host = relative.host;\n\t\t\ttarget.port = relative.port;\n\t\t\ttarget.path = removeDotSegments(relative.path || \"\");\n\t\t\ttarget.query = relative.query;\n\t\t} else {\n\t\t\tif (!relative.path) {\n\t\t\t\ttarget.path = base.path;\n\t\t\t\tif (relative.query !== undefined) {\n\t\t\t\t\ttarget.query = relative.query;\n\t\t\t\t} else {\n\t\t\t\t\ttarget.query = base.query;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (relative.path.charAt(0) === \"/\") {\n\t\t\t\t\ttarget.path = removeDotSegments(relative.path);\n\t\t\t\t} else {\n\t\t\t\t\tif ((base.userinfo !== undefined || base.host !== undefined || base.port !== undefined) && !base.path) {\n\t\t\t\t\t\ttarget.path = \"/\" + relative.path;\n\t\t\t\t\t} else if (!base.path) {\n\t\t\t\t\t\ttarget.path = relative.path;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttarget.path = base.path.slice(0, base.path.lastIndexOf(\"/\") + 1) + relative.path;\n\t\t\t\t\t}\n\t\t\t\t\ttarget.path = removeDotSegments(target.path);\n\t\t\t\t}\n\t\t\t\ttarget.query = relative.query;\n\t\t\t}\n\t\t\t//target.authority = base.authority;\n\t\t\ttarget.userinfo = base.userinfo;\n\t\t\ttarget.host = base.host;\n\t\t\ttarget.port = base.port;\n\t\t}\n\t\ttarget.scheme = base.scheme;\n\t}\n\n\ttarget.fragment = relative.fragment;\n\n\treturn target;\n};\n\nexport function resolve(baseURI:string, relativeURI:string, options?:URIOptions):string {\n\tconst schemelessOptions = assign({ scheme : 'null' }, options);\n\treturn serialize(resolveComponents(parse(baseURI, schemelessOptions), parse(relativeURI, schemelessOptions), schemelessOptions, true), schemelessOptions);\n};\n\nexport function normalize(uri:string, options?:URIOptions):string;\nexport function normalize(uri:URIComponents, options?:URIOptions):URIComponents;\nexport function normalize(uri:any, options?:URIOptions):any {\n\tif (typeof uri === \"string\") {\n\t\turi = serialize(parse(uri, options), options);\n\t} else if (typeOf(uri) === \"object\") {\n\t\turi = parse(serialize(<URIComponents>uri, options), options);\n\t}\n\n\treturn uri;\n};\n\nexport function equal(uriA:string, uriB:string, options?: URIOptions):boolean;\nexport function equal(uriA:URIComponents, uriB:URIComponents, options?:URIOptions):boolean;\nexport function equal(uriA:any, uriB:any, options?:URIOptions):boolean {\n\tif (typeof uriA === \"string\") {\n\t\turiA = serialize(parse(uriA, options), options);\n\t} else if (typeOf(uriA) === \"object\") {\n\t\turiA = serialize(<URIComponents>uriA, options);\n\t}\n\n\tif (typeof uriB === \"string\") {\n\t\turiB = serialize(parse(uriB, options), options);\n\t} else if (typeOf(uriB) === \"object\") {\n\t\turiB = serialize(<URIComponents>uriB, options);\n\t}\n\n\treturn uriA === uriB;\n};\n\nexport function escapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.ESCAPE : IRI_PROTOCOL.ESCAPE), pctEncChar);\n};\n\nexport function unescapeComponent(str:string, options?:URIOptions):string {\n\treturn str && str.toString().replace((!options || !options.iri ? URI_PROTOCOL.PCT_ENCODED : IRI_PROTOCOL.PCT_ENCODED), pctDecChars);\n};\n","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"http\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\t//report missing host\n\t\tif (!components.host) {\n\t\t\tcomponents.error = components.error || \"HTTP URIs must have a host.\";\n\t\t}\n\n\t\treturn components;\n\t},\n\n\tserialize : function (components:URIComponents, options:URIOptions):URIComponents {\n\t\tconst secure = String(components.scheme).toLowerCase() === \"https\";\n\n\t\t//normalize the default port\n\t\tif (components.port === (secure ? 443 : 80) || components.port === \"\") {\n\t\t\tcomponents.port = undefined;\n\t\t}\n\t\t\n\t\t//normalize the empty path\n\t\tif (!components.path) {\n\t\t\tcomponents.path = \"/\";\n\t\t}\n\n\t\t//NOTE: We do not parse query strings for HTTP URIs\n\t\t//as WWW Form Url Encoded query strings are part of the HTML4+ spec,\n\t\t//and not the HTTP spec.\n\n\t\treturn components;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport http from \"./http\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"https\",\n\tdomainHost : http.domainHost,\n\tparse : http.parse,\n\tserialize : http.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\n\nexport interface WSComponents extends URIComponents {\n\tresourceName?: string;\n\tsecure?: boolean;\n}\n\nfunction isSecure(wsComponents:WSComponents):boolean {\n\treturn typeof wsComponents.secure === 'boolean' ? wsComponents.secure : String(wsComponents.scheme).toLowerCase() === \"wss\";\n}\n\n//RFC 6455\nconst handler:URISchemeHandler = {\n\tscheme : \"ws\",\n\n\tdomainHost : true,\n\n\tparse : function (components:URIComponents, options:URIOptions):WSComponents {\n\t\tconst wsComponents = components as WSComponents;\n\n\t\t//indicate if the secure flag is set\n\t\twsComponents.secure = isSecure(wsComponents);\n\n\t\t//construct resouce name\n\t\twsComponents.resourceName = (wsComponents.path || '/') + (wsComponents.query ? '?' + wsComponents.query : '');\n\t\twsComponents.path = undefined;\n\t\twsComponents.query = undefined;\n\n\t\treturn wsComponents;\n\t},\n\n\tserialize : function (wsComponents:WSComponents, options:URIOptions):URIComponents {\n\t\t//normalize the default port\n\t\tif (wsComponents.port === (isSecure(wsComponents) ? 443 : 80) || wsComponents.port === \"\") {\n\t\t\twsComponents.port = undefined;\n\t\t}\n\n\t\t//ensure scheme matches secure flag\n\t\tif (typeof wsComponents.secure === 'boolean') {\n\t\t\twsComponents.scheme = (wsComponents.secure ? 'wss' : 'ws');\n\t\t\twsComponents.secure = undefined;\n\t\t}\n\n\t\t//reconstruct path from resource name\n\t\tif (wsComponents.resourceName) {\n\t\t\tconst [path, query] = wsComponents.resourceName.split('?');\n\t\t\twsComponents.path = (path && path !== '/' ? path : undefined);\n\t\t\twsComponents.query = query;\n\t\t\twsComponents.resourceName = undefined;\n\t\t}\n\n\t\t//forbid fragment component\n\t\twsComponents.fragment = undefined;\n\n\t\treturn wsComponents;\n\t}\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport ws from \"./ws\";\n\nconst handler:URISchemeHandler = {\n\tscheme : \"wss\",\n\tdomainHost : ws.domainHost,\n\tparse : ws.parse,\n\tserialize : ws.serialize\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, pctDecChars, unescapeComponent } from \"../uri\";\nimport punycode from \"punycode\";\nimport { merge, subexp, toUpperCase, toArray } from \"../util\";\n\nexport interface MailtoHeaders {\n\t[hfname:string]:string\n}\n\nexport interface MailtoComponents extends URIComponents {\n\tto:Array<string>,\n\theaders?:MailtoHeaders,\n\tsubject?:string,\n\tbody?:string\n}\n\nconst O:MailtoHeaders = {};\nconst isIRI = true;\n\n//RFC 3986\nconst UNRESERVED$$ = \"[A-Za-z0-9\\\\-\\\\.\\\\_\\\\~\" + (isIRI ? \"\\\\xA0-\\\\u200D\\\\u2010-\\\\u2029\\\\u202F-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFEF\" : \"\") + \"]\";\nconst HEXDIG$$ = \"[0-9A-Fa-f]\";  //case-insensitive\nconst PCT_ENCODED$ = subexp(subexp(\"%[EFef]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%[89A-Fa-f]\" + HEXDIG$$ + \"%\" + HEXDIG$$ + HEXDIG$$) + \"|\" + subexp(\"%\" + HEXDIG$$ + HEXDIG$$));  //expanded\n\n//RFC 5322, except these symbols as per RFC 6068: @ : / ? # [ ] & ; =\n//const ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\#\\\\$\\\\%\\\\&\\\\'\\\\*\\\\+\\\\-\\\\/\\\\=\\\\?\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QTEXT$$ = \"[\\\\x01-\\\\x08\\\\x0B\\\\x0C\\\\x0E-\\\\x1F\\\\x7F]\";  //(%d1-8 / %d11-12 / %d14-31 / %d127)\n//const QTEXT$$ = merge(\"[\\\\x21\\\\x23-\\\\x5B\\\\x5D-\\\\x7E]\", OBS_QTEXT$$);  //%d33 / %d35-91 / %d93-126 / obs-qtext\n//const VCHAR$$ = \"[\\\\x21-\\\\x7E]\";\n//const WSP$$ = \"[\\\\x20\\\\x09]\";\n//const OBS_QP$ = subexp(\"\\\\\\\\\" + merge(\"[\\\\x00\\\\x0D\\\\x0A]\", OBS_QTEXT$$));  //%d0 / CR / LF / obs-qtext\n//const FWS$ = subexp(subexp(WSP$$ + \"*\" + \"\\\\x0D\\\\x0A\") + \"?\" + WSP$$ + \"+\");\n//const QUOTED_PAIR$ = subexp(subexp(\"\\\\\\\\\" + subexp(VCHAR$$ + \"|\" + WSP$$)) + \"|\" + OBS_QP$);\n//const QUOTED_STRING$ = subexp('\\\\\"' + subexp(FWS$ + \"?\" + QCONTENT$) + \"*\" + FWS$ + \"?\" + '\\\\\"');\nconst ATEXT$$ = \"[A-Za-z0-9\\\\!\\\\$\\\\%\\\\'\\\\*\\\\+\\\\-\\\\^\\\\_\\\\`\\\\{\\\\|\\\\}\\\\~]\";\nconst QTEXT$$ = \"[\\\\!\\\\$\\\\%\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\-\\\\.0-9\\\\<\\\\>A-Z\\\\x5E-\\\\x7E]\";\nconst VCHAR$$ = merge(QTEXT$$, \"[\\\\\\\"\\\\\\\\]\");\nconst DOT_ATOM_TEXT$ = subexp(ATEXT$$ + \"+\" + subexp(\"\\\\.\" + ATEXT$$ + \"+\") + \"*\");\nconst QUOTED_PAIR$ = subexp(\"\\\\\\\\\" + VCHAR$$);\nconst QCONTENT$ = subexp(QTEXT$$ + \"|\" + QUOTED_PAIR$);\nconst QUOTED_STRING$ = subexp('\\\\\"' + QCONTENT$ + \"*\" + '\\\\\"');\n\n//RFC 6068\nconst DTEXT_NO_OBS$$ = \"[\\\\x21-\\\\x5A\\\\x5E-\\\\x7E]\";  //%d33-90 / %d94-126\nconst SOME_DELIMS$$ = \"[\\\\!\\\\$\\\\'\\\\(\\\\)\\\\*\\\\+\\\\,\\\\;\\\\:\\\\@]\";\nconst QCHAR$ = subexp(UNRESERVED$$ + \"|\" + PCT_ENCODED$ + \"|\" + SOME_DELIMS$$);\nconst DOMAIN$ = subexp(DOT_ATOM_TEXT$ + \"|\" + \"\\\\[\" + DTEXT_NO_OBS$$ + \"*\" + \"\\\\]\");\nconst LOCAL_PART$ = subexp(DOT_ATOM_TEXT$ + \"|\" + QUOTED_STRING$);\nconst ADDR_SPEC$ = subexp(LOCAL_PART$ + \"\\\\@\" + DOMAIN$);\nconst TO$ = subexp(ADDR_SPEC$ + subexp(\"\\\\,\" + ADDR_SPEC$) + \"*\");\nconst HFNAME$ = subexp(QCHAR$ + \"*\");\nconst HFVALUE$ = HFNAME$;\nconst HFIELD$ = subexp(HFNAME$ + \"\\\\=\" + HFVALUE$);\nconst HFIELDS2$ = subexp(HFIELD$ + subexp(\"\\\\&\" + HFIELD$) + \"*\");\nconst HFIELDS$ = subexp(\"\\\\?\" + HFIELDS2$);\nconst MAILTO_URI = new RegExp(\"^mailto\\\\:\" + TO$ + \"?\" + HFIELDS$ + \"?$\");\n\nconst UNRESERVED = new RegExp(UNRESERVED$$, \"g\");\nconst PCT_ENCODED = new RegExp(PCT_ENCODED$, \"g\");\nconst NOT_LOCAL_PART = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", '[\\\\\"]', VCHAR$$), \"g\");\nconst NOT_DOMAIN = new RegExp(merge(\"[^]\", ATEXT$$, \"[\\\\.]\", \"[\\\\[]\", DTEXT_NO_OBS$$, \"[\\\\]]\"), \"g\");\nconst NOT_HFNAME = new RegExp(merge(\"[^]\", UNRESERVED$$, SOME_DELIMS$$), \"g\");\nconst NOT_HFVALUE = NOT_HFNAME;\nconst TO = new RegExp(\"^\" + TO$ + \"$\");\nconst HFIELDS = new RegExp(\"^\" + HFIELDS2$ + \"$\");\n\nfunction decodeUnreserved(str:string):string {\n\tconst decStr = pctDecChars(str);\n\treturn (!decStr.match(UNRESERVED) ? str : decStr);\n}\n\nconst handler:URISchemeHandler<MailtoComponents> =  {\n\tscheme : \"mailto\",\n\n\tparse : function (components:URIComponents, options:URIOptions):MailtoComponents {\n\t\tconst mailtoComponents = components as MailtoComponents;\n\t\tconst to = mailtoComponents.to = (mailtoComponents.path ? mailtoComponents.path.split(\",\") : []);\n\t\tmailtoComponents.path = undefined;\n\n\t\tif (mailtoComponents.query) {\n\t\t\tlet unknownHeaders = false\n\t\t\tconst headers:MailtoHeaders = {};\n\t\t\tconst hfields = mailtoComponents.query.split(\"&\");\n\n\t\t\tfor (let x = 0, xl = hfields.length; x < xl; ++x) {\n\t\t\t\tconst hfield = hfields[x].split(\"=\");\n\n\t\t\t\tswitch (hfield[0]) {\n\t\t\t\t\tcase \"to\":\n\t\t\t\t\t\tconst toAddrs = hfield[1].split(\",\");\n\t\t\t\t\t\tfor (let x = 0, xl = toAddrs.length; x < xl; ++x) {\n\t\t\t\t\t\t\tto.push(toAddrs[x]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"subject\":\n\t\t\t\t\t\tmailtoComponents.subject = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"body\":\n\t\t\t\t\t\tmailtoComponents.body = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tunknownHeaders = true;\n\t\t\t\t\t\theaders[unescapeComponent(hfield[0], options)] = unescapeComponent(hfield[1], options);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (unknownHeaders) mailtoComponents.headers = headers;\n\t\t}\n\n\t\tmailtoComponents.query = undefined;\n\n\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\tconst addr = to[x].split(\"@\");\n\n\t\t\taddr[0] = unescapeComponent(addr[0]);\n\n\t\t\tif (!options.unicodeSupport) {\n\t\t\t\t//convert Unicode IDN -> ASCII IDN\n\t\t\t\ttry {\n\t\t\t\t\taddr[1] = punycode.toASCII(unescapeComponent(addr[1], options).toLowerCase());\n\t\t\t\t} catch (e) {\n\t\t\t\t\tmailtoComponents.error = mailtoComponents.error || \"Email address's domain name can not be converted to ASCII via punycode: \" + e;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\taddr[1] = unescapeComponent(addr[1], options).toLowerCase();\n\t\t\t}\n\n\t\t\tto[x] = addr.join(\"@\");\n\t\t}\n\n\t\treturn mailtoComponents;\n\t},\n\n\tserialize : function (mailtoComponents:MailtoComponents, options:URIOptions):URIComponents {\n\t\tconst components = mailtoComponents as URIComponents;\n\t\tconst to = toArray(mailtoComponents.to);\n\t\tif (to) {\n\t\t\tfor (let x = 0, xl = to.length; x < xl; ++x) {\n\t\t\t\tconst toAddr = String(to[x]);\n\t\t\t\tconst atIdx = toAddr.lastIndexOf(\"@\");\n\t\t\t\tconst localPart = (toAddr.slice(0, atIdx)).replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_LOCAL_PART, pctEncChar);\n\t\t\t\tlet domain = toAddr.slice(atIdx + 1);\n\n\t\t\t\t//convert IDN via punycode\n\t\t\t\ttry {\n\t\t\t\t\tdomain = (!options.iri ? punycode.toASCII(unescapeComponent(domain, options).toLowerCase()) : punycode.toUnicode(domain));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tcomponents.error = components.error || \"Email address's domain name can not be converted to \" + (!options.iri ? \"ASCII\" : \"Unicode\") + \" via punycode: \" + e;\n\t\t\t\t}\n\n\t\t\t\tto[x] = localPart + \"@\" + domain;\n\t\t\t}\n\n\t\t\tcomponents.path = to.join(\",\");\n\t\t}\n\n\t\tconst headers = mailtoComponents.headers = mailtoComponents.headers || {};\n\n\t\tif (mailtoComponents.subject) headers[\"subject\"] = mailtoComponents.subject;\n\t\tif (mailtoComponents.body) headers[\"body\"] = mailtoComponents.body;\n\n\t\tconst fields = [];\n\t\tfor (const name in headers) {\n\t\t\tif (headers[name] !== O[name]) {\n\t\t\t\tfields.push(\n\t\t\t\t\tname.replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFNAME, pctEncChar) +\n\t\t\t\t\t\"=\" +\n\t\t\t\t\theaders[name].replace(PCT_ENCODED, decodeUnreserved).replace(PCT_ENCODED, toUpperCase).replace(NOT_HFVALUE, pctEncChar)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tif (fields.length) {\n\t\t\tcomponents.query = fields.join(\"&\");\n\t\t}\n\n\t\treturn components;\n\t}\n}\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { pctEncChar, SCHEMES } from \"../uri\";\n\nexport interface URNComponents extends URIComponents {\n\tnid?:string;\n\tnss?:string;\n}\n\nexport interface URNOptions extends URIOptions {\n\tnid?:string;\n}\n\nconst NID$ = \"(?:[0-9A-Za-z][0-9A-Za-z\\\\-]{1,31})\";\nconst PCT_ENCODED$ = \"(?:\\\\%[0-9A-Fa-f]{2})\";\nconst TRANS$$ = \"[0-9A-Za-z\\\\(\\\\)\\\\+\\\\,\\\\-\\\\.\\\\:\\\\=\\\\@\\\\;\\\\$\\\\_\\\\!\\\\*\\\\'\\\\/\\\\?\\\\#]\";\nconst NSS$ = \"(?:(?:\" + PCT_ENCODED$ + \"|\" + TRANS$$ + \")+)\";\nconst URN_SCHEME = new RegExp(\"^urn\\\\:(\" + NID$ + \")$\");\nconst URN_PATH = new RegExp(\"^(\" + NID$ + \")\\\\:(\" + NSS$ + \")$\");\nconst URN_PARSE = /^([^\\:]+)\\:(.*)/;\nconst URN_EXCLUDED = /[\\x00-\\x20\\\\\\\"\\&\\<\\>\\[\\]\\^\\`\\{\\|\\}\\~\\x7F-\\xFF]/g;\n\n//RFC 2141\nconst handler:URISchemeHandler<URNComponents,URNOptions> = {\n\tscheme : \"urn\",\n\n\tparse : function (components:URIComponents, options:URNOptions):URNComponents {\n\t\tconst matches = components.path && components.path.match(URN_PARSE);\n\t\tlet urnComponents = components as URNComponents;\n\n\t\tif (matches) {\n\t\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\t\tconst nid = matches[1].toLowerCase();\n\t\t\tconst nss = matches[2];\n\t\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\t\turnComponents.nid = nid;\n\t\t\turnComponents.nss = nss;\n\t\t\turnComponents.path = undefined;\n\n\t\t\tif (schemeHandler) {\n\t\t\t\turnComponents = schemeHandler.parse(urnComponents, options) as URNComponents;\n\t\t\t}\n\t\t} else {\n\t\t\turnComponents.error = urnComponents.error || \"URN can not be parsed.\";\n\t\t}\n\n\t\treturn urnComponents;\n\t},\n\n\tserialize : function (urnComponents:URNComponents, options:URNOptions):URIComponents {\n\t\tconst scheme = options.scheme || urnComponents.scheme || \"urn\";\n\t\tconst nid = urnComponents.nid;\n\t\tconst urnScheme = `${scheme}:${options.nid || nid}`;\n\t\tconst schemeHandler = SCHEMES[urnScheme];\n\n\t\tif (schemeHandler) {\n\t\t\turnComponents = schemeHandler.serialize(urnComponents, options) as URNComponents;\n\t\t}\n\n\t\tconst uriComponents = urnComponents as URIComponents;\n\t\tconst nss = urnComponents.nss;\n\t\turiComponents.path = `${nid || options.nid}:${nss}`;\n\n\t\treturn uriComponents;\n\t},\n};\n\nexport default handler;","import { URISchemeHandler, URIComponents, URIOptions } from \"../uri\";\nimport { URNComponents } from \"./urn\";\nimport { SCHEMES } from \"../uri\";\n\nexport interface UUIDComponents extends URNComponents {\n\tuuid?: string;\n}\n\nconst UUID = /^[0-9A-Fa-f]{8}(?:\\-[0-9A-Fa-f]{4}){3}\\-[0-9A-Fa-f]{12}$/;\nconst UUID_PARSE = /^[0-9A-Fa-f\\-]{36}/;\n\n//RFC 4122\nconst handler:URISchemeHandler<UUIDComponents, URIOptions, URNComponents> = {\n\tscheme : \"urn:uuid\",\n\n\tparse : function (urnComponents:URNComponents, options:URIOptions):UUIDComponents {\n\t\tconst uuidComponents = urnComponents as UUIDComponents;\n\t\tuuidComponents.uuid = uuidComponents.nss;\n\t\tuuidComponents.nss = undefined;\n\n\t\tif (!options.tolerant && (!uuidComponents.uuid || !uuidComponents.uuid.match(UUID))) {\n\t\t\tuuidComponents.error = uuidComponents.error || \"UUID is not valid.\";\n\t\t}\n\n\t\treturn uuidComponents;\n\t},\n\n\tserialize : function (uuidComponents:UUIDComponents, options:URIOptions):URNComponents {\n\t\tconst urnComponents = uuidComponents as URNComponents;\n\t\t//normalize UUID\n\t\turnComponents.nss = (uuidComponents.uuid || \"\").toLowerCase();\n\t\treturn urnComponents;\n\t},\n};\n\nexport default handler;","import { SCHEMES } from \"./uri\";\n\nimport http from \"./schemes/http\";\nSCHEMES[http.scheme] = http;\n\nimport https from \"./schemes/https\";\nSCHEMES[https.scheme] = https;\n\nimport ws from \"./schemes/ws\";\nSCHEMES[ws.scheme] = ws;\n\nimport wss from \"./schemes/wss\";\nSCHEMES[wss.scheme] = wss;\n\nimport mailto from \"./schemes/mailto\";\nSCHEMES[mailto.scheme] = mailto;\n\nimport urn from \"./schemes/urn\";\nSCHEMES[urn.scheme] = urn;\n\nimport uuid from \"./schemes/urn-uuid\";\nSCHEMES[uuid.scheme] = uuid;\n\nexport * from \"./uri\";\n","import * as uri from \"uri-js\"\n\ntype URI = typeof uri & {code: string}\n;(uri as URI).code = 'require(\"ajv/dist/runtime/uri\").default'\n\nexport default uri as URI\n","export {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  AnyValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport interface Plugin<Opts> {\n  (ajv: Ajv, options?: Opts): Ajv\n  [prop: string]: any\n}\n\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\n\nimport type {\n  Schema,\n  AnySchema,\n  AnySchemaObject,\n  SchemaObject,\n  AsyncSchema,\n  Vocabulary,\n  KeywordDefinition,\n  AddedKeywordDefinition,\n  AnyValidateFunction,\n  ValidateFunction,\n  AsyncValidateFunction,\n  ErrorObject,\n  Format,\n  AddedFormat,\n  RegExpEngine,\n  UriResolver,\n} from \"./types\"\nimport type {JSONSchemaType} from \"./types/json-schema\"\nimport type {JTDSchemaType, SomeJTDSchemaType, JTDDataType} from \"./types/jtd-schema\"\nimport ValidationError from \"./runtime/validation_error\"\nimport MissingRefError from \"./compile/ref_error\"\nimport {getRules, ValidationRules, Rule, RuleGroup, JSONType} from \"./compile/rules\"\nimport {SchemaEnv, compileSchema, resolveSchema} from \"./compile\"\nimport {Code, ValueScope} from \"./compile/codegen\"\nimport {normalizeId, getSchemaRefs} from \"./compile/resolve\"\nimport {getJSONTypes} from \"./compile/validate/dataType\"\nimport {eachItem} from \"./compile/util\"\nimport * as $dataRefSchema from \"./refs/data.json\"\n\nimport DefaultUriResolver from \"./runtime/uri\"\n\nconst defaultRegExp: RegExpEngine = (str, flags) => new RegExp(str, flags)\ndefaultRegExp.code = \"new RegExp\"\n\nconst META_IGNORE_OPTIONS: (keyof Options)[] = [\"removeAdditional\", \"useDefaults\", \"coerceTypes\"]\nconst EXT_SCOPE_NAMES = new Set([\n  \"validate\",\n  \"serialize\",\n  \"parse\",\n  \"wrapper\",\n  \"root\",\n  \"schema\",\n  \"keyword\",\n  \"pattern\",\n  \"formats\",\n  \"validate$data\",\n  \"func\",\n  \"obj\",\n  \"Error\",\n])\n\nexport type Options = CurrentOptions & DeprecatedOptions\n\nexport interface CurrentOptions {\n  // strict mode options (NEW)\n  strict?: boolean | \"log\"\n  strictSchema?: boolean | \"log\"\n  strictNumbers?: boolean | \"log\"\n  strictTypes?: boolean | \"log\"\n  strictTuples?: boolean | \"log\"\n  strictRequired?: boolean | \"log\"\n  allowMatchingProperties?: boolean // disables a strict mode restriction\n  allowUnionTypes?: boolean\n  validateFormats?: boolean\n  // validation and reporting options:\n  $data?: boolean\n  allErrors?: boolean\n  verbose?: boolean\n  discriminator?: boolean\n  unicodeRegExp?: boolean\n  timestamp?: \"string\" | \"date\" // JTD only\n  parseDate?: boolean // JTD only\n  allowDate?: boolean // JTD only\n  $comment?:\n    | true\n    | ((comment: string, schemaPath?: string, rootSchema?: AnySchemaObject) => unknown)\n  formats?: {[Name in string]?: Format}\n  keywords?: Vocabulary\n  schemas?: AnySchema[] | {[Key in string]?: AnySchema}\n  logger?: Logger | false\n  loadSchema?: (uri: string) => Promise<AnySchemaObject>\n  // options to modify validated data:\n  removeAdditional?: boolean | \"all\" | \"failing\"\n  useDefaults?: boolean | \"empty\"\n  coerceTypes?: boolean | \"array\"\n  // advanced options:\n  next?: boolean // NEW\n  unevaluated?: boolean // NEW\n  dynamicRef?: boolean // NEW\n  schemaId?: \"id\" | \"$id\"\n  jtd?: boolean // NEW\n  meta?: SchemaObject | boolean\n  defaultMeta?: string | AnySchemaObject\n  validateSchema?: boolean | \"log\"\n  addUsedSchema?: boolean\n  inlineRefs?: boolean | number\n  passContext?: boolean\n  loopRequired?: number\n  loopEnum?: number // NEW\n  ownProperties?: boolean\n  multipleOfPrecision?: number\n  int32range?: boolean // JTD only\n  messages?: boolean\n  code?: CodeOptions // NEW\n  uriResolver?: UriResolver\n}\n\nexport interface CodeOptions {\n  es5?: boolean\n  esm?: boolean\n  lines?: boolean\n  optimize?: boolean | number\n  formats?: Code // code to require (or construct) map of available formats - for standalone code\n  source?: boolean\n  process?: (code: string, schema?: SchemaEnv) => string\n  regExp?: RegExpEngine\n}\n\ninterface InstanceCodeOptions extends CodeOptions {\n  regExp: RegExpEngine\n  optimize: number\n}\n\ninterface DeprecatedOptions {\n  /** @deprecated */\n  ignoreKeywordsWithRef?: boolean\n  /** @deprecated */\n  jsPropertySyntax?: boolean // added instead of jsonPointers\n  /** @deprecated */\n  unicode?: boolean\n}\n\ninterface RemovedOptions {\n  format?: boolean\n  errorDataPath?: \"object\" | \"property\"\n  nullable?: boolean // \"nullable\" keyword is supported by default\n  jsonPointers?: boolean\n  extendRefs?: true | \"ignore\" | \"fail\"\n  missingRefs?: true | \"ignore\" | \"fail\"\n  processCode?: (code: string, schema?: SchemaEnv) => string\n  sourceCode?: boolean\n  strictDefaults?: boolean\n  strictKeywords?: boolean\n  uniqueItems?: boolean\n  unknownFormats?: true | string[] | \"ignore\"\n  cache?: any\n  serialize?: (schema: AnySchema) => unknown\n  ajvErrors?: boolean\n}\n\ntype OptionsInfo<T extends RemovedOptions | DeprecatedOptions> = {\n  [K in keyof T]-?: string | undefined\n}\n\nconst removedOptions: OptionsInfo<RemovedOptions> = {\n  errorDataPath: \"\",\n  format: \"`validateFormats: false` can be used instead.\",\n  nullable: '\"nullable\" keyword is supported by default.',\n  jsonPointers: \"Deprecated jsPropertySyntax can be used instead.\",\n  extendRefs: \"Deprecated ignoreKeywordsWithRef can be used instead.\",\n  missingRefs: \"Pass empty schema with $id that should be ignored to ajv.addSchema.\",\n  processCode: \"Use option `code: {process: (code, schemaEnv: object) => string}`\",\n  sourceCode: \"Use option `code: {source: true}`\",\n  strictDefaults: \"It is default now, see option `strict`.\",\n  strictKeywords: \"It is default now, see option `strict`.\",\n  uniqueItems: '\"uniqueItems\" keyword is always validated.',\n  unknownFormats: \"Disable strict mode or pass `true` to `ajv.addFormat` (or `formats` option).\",\n  cache: \"Map is used as cache, schema object as key.\",\n  serialize: \"Map is used as cache, schema object as key.\",\n  ajvErrors: \"It is default now.\",\n}\n\nconst deprecatedOptions: OptionsInfo<DeprecatedOptions> = {\n  ignoreKeywordsWithRef: \"\",\n  jsPropertySyntax: \"\",\n  unicode: '\"minLength\"/\"maxLength\" account for unicode characters by default.',\n}\n\ntype RequiredInstanceOptions = {\n  [K in\n    | \"strictSchema\"\n    | \"strictNumbers\"\n    | \"strictTypes\"\n    | \"strictTuples\"\n    | \"strictRequired\"\n    | \"inlineRefs\"\n    | \"loopRequired\"\n    | \"loopEnum\"\n    | \"meta\"\n    | \"messages\"\n    | \"schemaId\"\n    | \"addUsedSchema\"\n    | \"validateSchema\"\n    | \"validateFormats\"\n    | \"int32range\"\n    | \"unicodeRegExp\"\n    | \"uriResolver\"]: NonNullable<Options[K]>\n} & {code: InstanceCodeOptions}\n\nexport type InstanceOptions = Options & RequiredInstanceOptions\n\nconst MAX_EXPRESSION = 200\n\n// eslint-disable-next-line complexity\nfunction requiredOptions(o: Options): RequiredInstanceOptions {\n  const s = o.strict\n  const _optz = o.code?.optimize\n  const optimize = _optz === true || _optz === undefined ? 1 : _optz || 0\n  const regExp = o.code?.regExp ?? defaultRegExp\n  const uriResolver = o.uriResolver ?? DefaultUriResolver\n  return {\n    strictSchema: o.strictSchema ?? s ?? true,\n    strictNumbers: o.strictNumbers ?? s ?? true,\n    strictTypes: o.strictTypes ?? s ?? \"log\",\n    strictTuples: o.strictTuples ?? s ?? \"log\",\n    strictRequired: o.strictRequired ?? s ?? false,\n    code: o.code ? {...o.code, optimize, regExp} : {optimize, regExp},\n    loopRequired: o.loopRequired ?? MAX_EXPRESSION,\n    loopEnum: o.loopEnum ?? MAX_EXPRESSION,\n    meta: o.meta ?? true,\n    messages: o.messages ?? true,\n    inlineRefs: o.inlineRefs ?? true,\n    schemaId: o.schemaId ?? \"$id\",\n    addUsedSchema: o.addUsedSchema ?? true,\n    validateSchema: o.validateSchema ?? true,\n    validateFormats: o.validateFormats ?? true,\n    unicodeRegExp: o.unicodeRegExp ?? true,\n    int32range: o.int32range ?? true,\n    uriResolver: uriResolver,\n  }\n}\n\nexport interface Logger {\n  log(...args: unknown[]): unknown\n  warn(...args: unknown[]): unknown\n  error(...args: unknown[]): unknown\n}\n\nexport default class Ajv {\n  opts: InstanceOptions\n  errors?: ErrorObject[] | null // errors from the last validation\n  logger: Logger\n  // shared external scope values for compiled functions\n  readonly scope: ValueScope\n  readonly schemas: {[Key in string]?: SchemaEnv} = {}\n  readonly refs: {[Ref in string]?: SchemaEnv | string} = {}\n  readonly formats: {[Name in string]?: AddedFormat} = {}\n  readonly RULES: ValidationRules\n  readonly _compilations: Set<SchemaEnv> = new Set()\n  private readonly _loading: {[Ref in string]?: Promise<AnySchemaObject>} = {}\n  private readonly _cache: Map<AnySchema, SchemaEnv> = new Map()\n  private readonly _metaOpts: InstanceOptions\n\n  static ValidationError = ValidationError\n  static MissingRefError = MissingRefError\n\n  constructor(opts: Options = {}) {\n    opts = this.opts = {...opts, ...requiredOptions(opts)}\n    const {es5, lines} = this.opts.code\n\n    this.scope = new ValueScope({scope: {}, prefixes: EXT_SCOPE_NAMES, es5, lines})\n    this.logger = getLogger(opts.logger)\n    const formatOpt = opts.validateFormats\n    opts.validateFormats = false\n\n    this.RULES = getRules()\n    checkOptions.call(this, removedOptions, opts, \"NOT SUPPORTED\")\n    checkOptions.call(this, deprecatedOptions, opts, \"DEPRECATED\", \"warn\")\n    this._metaOpts = getMetaSchemaOptions.call(this)\n\n    if (opts.formats) addInitialFormats.call(this)\n    this._addVocabularies()\n    this._addDefaultMetaSchema()\n    if (opts.keywords) addInitialKeywords.call(this, opts.keywords)\n    if (typeof opts.meta == \"object\") this.addMetaSchema(opts.meta)\n    addInitialSchemas.call(this)\n    opts.validateFormats = formatOpt\n  }\n\n  _addVocabularies(): void {\n    this.addKeyword(\"$async\")\n  }\n\n  _addDefaultMetaSchema(): void {\n    const {$data, meta, schemaId} = this.opts\n    let _dataRefSchema: SchemaObject = $dataRefSchema\n    if (schemaId === \"id\") {\n      _dataRefSchema = {...$dataRefSchema}\n      _dataRefSchema.id = _dataRefSchema.$id\n      delete _dataRefSchema.$id\n    }\n    if (meta && $data) this.addMetaSchema(_dataRefSchema, _dataRefSchema[schemaId], false)\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    const {meta, schemaId} = this.opts\n    return (this.opts.defaultMeta = typeof meta == \"object\" ? meta[schemaId] || meta : undefined)\n  }\n\n  // Validate data using schema\n  // AnySchema will be compiled and cached using schema itself as a key for Map\n  validate(schema: Schema | string, data: unknown): boolean\n  validate(schemaKeyRef: AnySchema | string, data: unknown): boolean | Promise<unknown>\n  validate<T>(schema: Schema | JSONSchemaType<T> | string, data: unknown): data is T\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  validate<T>(schema: JTDSchemaType<T>, data: unknown): data is T\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  validate<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    data: unknown\n  ): data is JTDDataType<T>\n  validate<T>(schema: AsyncSchema, data: unknown | T): Promise<T>\n  validate<T>(schemaKeyRef: AnySchema | string, data: unknown): data is T | Promise<T>\n  validate<T>(\n    schemaKeyRef: AnySchema | string, // key, ref or schema object\n    data: unknown | T // to be validated\n  ): boolean | Promise<T> {\n    let v: AnyValidateFunction | undefined\n    if (typeof schemaKeyRef == \"string\") {\n      v = this.getSchema<T>(schemaKeyRef)\n      if (!v) throw new Error(`no schema with key or ref \"${schemaKeyRef}\"`)\n    } else {\n      v = this.compile<T>(schemaKeyRef)\n    }\n\n    const valid = v(data)\n    if (!(\"$async\" in v)) this.errors = v.errors\n    return valid\n  }\n\n  // Create validation function for passed schema\n  // _meta: true if schema is a meta-schema. Used internally to compile meta schemas of user-defined keywords.\n  compile<T = unknown>(schema: Schema | JSONSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compile<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): ValidateFunction<T>\n  // This overload is only intended for typescript inference, the first\n  // argument prevents manual type annotation from matching this overload\n  compile<N extends never, T extends SomeJTDSchemaType>(\n    schema: T,\n    _meta?: boolean\n  ): ValidateFunction<JTDDataType<T>>\n  compile<T = unknown>(schema: AsyncSchema, _meta?: boolean): AsyncValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T>\n  compile<T = unknown>(schema: AnySchema, _meta?: boolean): AnyValidateFunction<T> {\n    const sch = this._addSchema(schema, _meta)\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T>\n  }\n\n  // Creates validating function for passed schema with asynchronous loading of missing schemas.\n  // `loadSchema` option should be a function that accepts schema uri and returns promise that resolves with the schema.\n  // TODO allow passing schema URI\n  // meta - optional true to compile meta-schema\n  compileAsync<T = unknown>(\n    schema: SchemaObject | JSONSchemaType<T>,\n    _meta?: boolean\n  ): Promise<ValidateFunction<T>>\n  // Separated for type inference to work\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(schema: JTDSchemaType<T>, _meta?: boolean): Promise<ValidateFunction<T>>\n  compileAsync<T = unknown>(schema: AsyncSchema, meta?: boolean): Promise<AsyncValidateFunction<T>>\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>>\n  compileAsync<T = unknown>(\n    schema: AnySchemaObject,\n    meta?: boolean\n  ): Promise<AnyValidateFunction<T>> {\n    if (typeof this.opts.loadSchema != \"function\") {\n      throw new Error(\"options.loadSchema should be a function\")\n    }\n    const {loadSchema} = this.opts\n    return runCompileAsync.call(this, schema, meta)\n\n    async function runCompileAsync(\n      this: Ajv,\n      _schema: AnySchemaObject,\n      _meta?: boolean\n    ): Promise<AnyValidateFunction> {\n      await loadMetaSchema.call(this, _schema.$schema)\n      const sch = this._addSchema(_schema, _meta)\n      return sch.validate || _compileAsync.call(this, sch)\n    }\n\n    async function loadMetaSchema(this: Ajv, $ref?: string): Promise<void> {\n      if ($ref && !this.getSchema($ref)) {\n        await runCompileAsync.call(this, {$ref}, true)\n      }\n    }\n\n    async function _compileAsync(this: Ajv, sch: SchemaEnv): Promise<AnyValidateFunction> {\n      try {\n        return this._compileSchemaEnv(sch)\n      } catch (e) {\n        if (!(e instanceof MissingRefError)) throw e\n        checkLoaded.call(this, e)\n        await loadMissingSchema.call(this, e.missingSchema)\n        return _compileAsync.call(this, sch)\n      }\n    }\n\n    function checkLoaded(this: Ajv, {missingSchema: ref, missingRef}: MissingRefError): void {\n      if (this.refs[ref]) {\n        throw new Error(`AnySchema ${ref} is loaded but ${missingRef} cannot be resolved`)\n      }\n    }\n\n    async function loadMissingSchema(this: Ajv, ref: string): Promise<void> {\n      const _schema = await _loadSchema.call(this, ref)\n      if (!this.refs[ref]) await loadMetaSchema.call(this, _schema.$schema)\n      if (!this.refs[ref]) this.addSchema(_schema, ref, meta)\n    }\n\n    async function _loadSchema(this: Ajv, ref: string): Promise<AnySchemaObject> {\n      const p = this._loading[ref]\n      if (p) return p\n      try {\n        return await (this._loading[ref] = loadSchema(ref))\n      } finally {\n        delete this._loading[ref]\n      }\n    }\n  }\n\n  // Adds schema to the instance\n  addSchema(\n    schema: AnySchema | AnySchema[], // If array is passed, `key` will be ignored\n    key?: string, // Optional schema key. Can be passed to `validate` method instead of schema object or id/ref. One schema per instance can have empty `id` and `key`.\n    _meta?: boolean, // true if schema is a meta-schema. Used internally, addMetaSchema should be used instead.\n    _validateSchema = this.opts.validateSchema // false to skip schema validation. Used internally, option validateSchema should be used instead.\n  ): Ajv {\n    if (Array.isArray(schema)) {\n      for (const sch of schema) this.addSchema(sch, undefined, _meta, _validateSchema)\n      return this\n    }\n    let id: string | undefined\n    if (typeof schema === \"object\") {\n      const {schemaId} = this.opts\n      id = schema[schemaId]\n      if (id !== undefined && typeof id != \"string\") {\n        throw new Error(`schema ${schemaId} must be string`)\n      }\n    }\n    key = normalizeId(key || id)\n    this._checkUnique(key)\n    this.schemas[key] = this._addSchema(schema, _meta, key, _validateSchema, true)\n    return this\n  }\n\n  // Add schema that will be used to validate other schemas\n  // options in META_IGNORE_OPTIONS are alway set to false\n  addMetaSchema(\n    schema: AnySchemaObject,\n    key?: string, // schema key\n    _validateSchema = this.opts.validateSchema // false to skip schema validation, can be used to override validateSchema option for meta-schema\n  ): Ajv {\n    this.addSchema(schema, key, true, _validateSchema)\n    return this\n  }\n\n  //  Validate schema against its meta-schema\n  validateSchema(schema: AnySchema, throwOrLogError?: boolean): boolean | Promise<unknown> {\n    if (typeof schema == \"boolean\") return true\n    let $schema: string | AnySchemaObject | undefined\n    $schema = schema.$schema\n    if ($schema !== undefined && typeof $schema != \"string\") {\n      throw new Error(\"$schema must be a string\")\n    }\n    $schema = $schema || this.opts.defaultMeta || this.defaultMeta()\n    if (!$schema) {\n      this.logger.warn(\"meta-schema not available\")\n      this.errors = null\n      return true\n    }\n    const valid = this.validate($schema, schema)\n    if (!valid && throwOrLogError) {\n      const message = \"schema is invalid: \" + this.errorsText()\n      if (this.opts.validateSchema === \"log\") this.logger.error(message)\n      else throw new Error(message)\n    }\n    return valid\n  }\n\n  // Get compiled schema by `key` or `ref`.\n  // (`key` that was passed to `addSchema` or full schema reference - `schema.$id` or resolved id)\n  getSchema<T = unknown>(keyRef: string): AnyValidateFunction<T> | undefined {\n    let sch\n    while (typeof (sch = getSchEnv.call(this, keyRef)) == \"string\") keyRef = sch\n    if (sch === undefined) {\n      const {schemaId} = this.opts\n      const root = new SchemaEnv({schema: {}, schemaId})\n      sch = resolveSchema.call(this, root, keyRef)\n      if (!sch) return\n      this.refs[keyRef] = sch\n    }\n    return (sch.validate || this._compileSchemaEnv(sch)) as AnyValidateFunction<T> | undefined\n  }\n\n  // Remove cached schema(s).\n  // If no parameter is passed all schemas but meta-schemas are removed.\n  // If RegExp is passed all schemas with key/id matching pattern but meta-schemas are removed.\n  // Even if schema is referenced by other schemas it still can be removed as other schemas have local references.\n  removeSchema(schemaKeyRef?: AnySchema | string | RegExp): Ajv {\n    if (schemaKeyRef instanceof RegExp) {\n      this._removeAllSchemas(this.schemas, schemaKeyRef)\n      this._removeAllSchemas(this.refs, schemaKeyRef)\n      return this\n    }\n    switch (typeof schemaKeyRef) {\n      case \"undefined\":\n        this._removeAllSchemas(this.schemas)\n        this._removeAllSchemas(this.refs)\n        this._cache.clear()\n        return this\n      case \"string\": {\n        const sch = getSchEnv.call(this, schemaKeyRef)\n        if (typeof sch == \"object\") this._cache.delete(sch.schema)\n        delete this.schemas[schemaKeyRef]\n        delete this.refs[schemaKeyRef]\n        return this\n      }\n      case \"object\": {\n        const cacheKey = schemaKeyRef\n        this._cache.delete(cacheKey)\n        let id = schemaKeyRef[this.opts.schemaId]\n        if (id) {\n          id = normalizeId(id)\n          delete this.schemas[id]\n          delete this.refs[id]\n        }\n        return this\n      }\n      default:\n        throw new Error(\"ajv.removeSchema: invalid parameter\")\n    }\n  }\n\n  // add \"vocabulary\" - a collection of keywords\n  addVocabulary(definitions: Vocabulary): Ajv {\n    for (const def of definitions) this.addKeyword(def)\n    return this\n  }\n\n  addKeyword(\n    kwdOrDef: string | KeywordDefinition,\n    def?: KeywordDefinition // deprecated\n  ): Ajv {\n    let keyword: string | string[]\n    if (typeof kwdOrDef == \"string\") {\n      keyword = kwdOrDef\n      if (typeof def == \"object\") {\n        this.logger.warn(\"these parameters are deprecated, see docs for addKeyword\")\n        def.keyword = keyword\n      }\n    } else if (typeof kwdOrDef == \"object\" && def === undefined) {\n      def = kwdOrDef\n      keyword = def.keyword\n      if (Array.isArray(keyword) && !keyword.length) {\n        throw new Error(\"addKeywords: keyword must be string or non-empty array\")\n      }\n    } else {\n      throw new Error(\"invalid addKeywords parameters\")\n    }\n\n    checkKeyword.call(this, keyword, def)\n    if (!def) {\n      eachItem(keyword, (kwd) => addRule.call(this, kwd))\n      return this\n    }\n    keywordMetaschema.call(this, def)\n    const definition: AddedKeywordDefinition = {\n      ...def,\n      type: getJSONTypes(def.type),\n      schemaType: getJSONTypes(def.schemaType),\n    }\n    eachItem(\n      keyword,\n      definition.type.length === 0\n        ? (k) => addRule.call(this, k, definition)\n        : (k) => definition.type.forEach((t) => addRule.call(this, k, definition, t))\n    )\n    return this\n  }\n\n  getKeyword(keyword: string): AddedKeywordDefinition | boolean {\n    const rule = this.RULES.all[keyword]\n    return typeof rule == \"object\" ? rule.definition : !!rule\n  }\n\n  // Remove keyword\n  removeKeyword(keyword: string): Ajv {\n    // TODO return type should be Ajv\n    const {RULES} = this\n    delete RULES.keywords[keyword]\n    delete RULES.all[keyword]\n    for (const group of RULES.rules) {\n      const i = group.rules.findIndex((rule) => rule.keyword === keyword)\n      if (i >= 0) group.rules.splice(i, 1)\n    }\n    return this\n  }\n\n  // Add format\n  addFormat(name: string, format: Format): Ajv {\n    if (typeof format == \"string\") format = new RegExp(format)\n    this.formats[name] = format\n    return this\n  }\n\n  errorsText(\n    errors: ErrorObject[] | null | undefined = this.errors, // optional array of validation errors\n    {separator = \", \", dataVar = \"data\"}: ErrorsTextOptions = {} // optional options with properties `separator` and `dataVar`\n  ): string {\n    if (!errors || errors.length === 0) return \"No errors\"\n    return errors\n      .map((e) => `${dataVar}${e.instancePath} ${e.message}`)\n      .reduce((text, msg) => text + separator + msg)\n  }\n\n  $dataMetaSchema(metaSchema: AnySchemaObject, keywordsJsonPointers: string[]): AnySchemaObject {\n    const rules = this.RULES.all\n    metaSchema = JSON.parse(JSON.stringify(metaSchema))\n    for (const jsonPointer of keywordsJsonPointers) {\n      const segments = jsonPointer.split(\"/\").slice(1) // first segment is an empty string\n      let keywords = metaSchema\n      for (const seg of segments) keywords = keywords[seg] as AnySchemaObject\n\n      for (const key in rules) {\n        const rule = rules[key]\n        if (typeof rule != \"object\") continue\n        const {$data} = rule.definition\n        const schema = keywords[key] as AnySchemaObject | undefined\n        if ($data && schema) keywords[key] = schemaOrData(schema)\n      }\n    }\n\n    return metaSchema\n  }\n\n  private _removeAllSchemas(schemas: {[Ref in string]?: SchemaEnv | string}, regex?: RegExp): void {\n    for (const keyRef in schemas) {\n      const sch = schemas[keyRef]\n      if (!regex || regex.test(keyRef)) {\n        if (typeof sch == \"string\") {\n          delete schemas[keyRef]\n        } else if (sch && !sch.meta) {\n          this._cache.delete(sch.schema)\n          delete schemas[keyRef]\n        }\n      }\n    }\n  }\n\n  _addSchema(\n    schema: AnySchema,\n    meta?: boolean,\n    baseId?: string,\n    validateSchema = this.opts.validateSchema,\n    addSchema = this.opts.addUsedSchema\n  ): SchemaEnv {\n    let id: string | undefined\n    const {schemaId} = this.opts\n    if (typeof schema == \"object\") {\n      id = schema[schemaId]\n    } else {\n      if (this.opts.jtd) throw new Error(\"schema must be object\")\n      else if (typeof schema != \"boolean\") throw new Error(\"schema must be object or boolean\")\n    }\n    let sch = this._cache.get(schema)\n    if (sch !== undefined) return sch\n\n    baseId = normalizeId(id || baseId)\n    const localRefs = getSchemaRefs.call(this, schema, baseId)\n    sch = new SchemaEnv({schema, schemaId, meta, baseId, localRefs})\n    this._cache.set(sch.schema, sch)\n    if (addSchema && !baseId.startsWith(\"#\")) {\n      // TODO atm it is allowed to overwrite schemas without id (instead of not adding them)\n      if (baseId) this._checkUnique(baseId)\n      this.refs[baseId] = sch\n    }\n    if (validateSchema) this.validateSchema(schema, true)\n    return sch\n  }\n\n  private _checkUnique(id: string): void {\n    if (this.schemas[id] || this.refs[id]) {\n      throw new Error(`schema with key or id \"${id}\" already exists`)\n    }\n  }\n\n  private _compileSchemaEnv(sch: SchemaEnv): AnyValidateFunction {\n    if (sch.meta) this._compileMetaSchema(sch)\n    else compileSchema.call(this, sch)\n\n    /* istanbul ignore if */\n    if (!sch.validate) throw new Error(\"ajv implementation error\")\n    return sch.validate\n  }\n\n  private _compileMetaSchema(sch: SchemaEnv): void {\n    const currentOpts = this.opts\n    this.opts = this._metaOpts\n    try {\n      compileSchema.call(this, sch)\n    } finally {\n      this.opts = currentOpts\n    }\n  }\n}\n\nexport interface ErrorsTextOptions {\n  separator?: string\n  dataVar?: string\n}\n\nfunction checkOptions(\n  this: Ajv,\n  checkOpts: OptionsInfo<RemovedOptions | DeprecatedOptions>,\n  options: Options & RemovedOptions,\n  msg: string,\n  log: \"warn\" | \"error\" = \"error\"\n): void {\n  for (const key in checkOpts) {\n    const opt = key as keyof typeof checkOpts\n    if (opt in options) this.logger[log](`${msg}: option ${key}. ${checkOpts[opt]}`)\n  }\n}\n\nfunction getSchEnv(this: Ajv, keyRef: string): SchemaEnv | string | undefined {\n  keyRef = normalizeId(keyRef) // TODO tests fail without this line\n  return this.schemas[keyRef] || this.refs[keyRef]\n}\n\nfunction addInitialSchemas(this: Ajv): void {\n  const optsSchemas = this.opts.schemas\n  if (!optsSchemas) return\n  if (Array.isArray(optsSchemas)) this.addSchema(optsSchemas)\n  else for (const key in optsSchemas) this.addSchema(optsSchemas[key] as AnySchema, key)\n}\n\nfunction addInitialFormats(this: Ajv): void {\n  for (const name in this.opts.formats) {\n    const format = this.opts.formats[name]\n    if (format) this.addFormat(name, format)\n  }\n}\n\nfunction addInitialKeywords(\n  this: Ajv,\n  defs: Vocabulary | {[K in string]?: KeywordDefinition}\n): void {\n  if (Array.isArray(defs)) {\n    this.addVocabulary(defs)\n    return\n  }\n  this.logger.warn(\"keywords option as map is deprecated, pass array\")\n  for (const keyword in defs) {\n    const def = defs[keyword] as KeywordDefinition\n    if (!def.keyword) def.keyword = keyword\n    this.addKeyword(def)\n  }\n}\n\nfunction getMetaSchemaOptions(this: Ajv): InstanceOptions {\n  const metaOpts = {...this.opts}\n  for (const opt of META_IGNORE_OPTIONS) delete metaOpts[opt]\n  return metaOpts\n}\n\nconst noLogs = {log() {}, warn() {}, error() {}}\n\nfunction getLogger(logger?: Partial<Logger> | false): Logger {\n  if (logger === false) return noLogs\n  if (logger === undefined) return console\n  if (logger.log && logger.warn && logger.error) return logger as Logger\n  throw new Error(\"logger must implement log, warn and error methods\")\n}\n\nconst KEYWORD_NAME = /^[a-z_$][a-z0-9_$:-]*$/i\n\nfunction checkKeyword(this: Ajv, keyword: string | string[], def?: KeywordDefinition): void {\n  const {RULES} = this\n  eachItem(keyword, (kwd) => {\n    if (RULES.keywords[kwd]) throw new Error(`Keyword ${kwd} is already defined`)\n    if (!KEYWORD_NAME.test(kwd)) throw new Error(`Keyword ${kwd} has invalid name`)\n  })\n  if (!def) return\n  if (def.$data && !(\"code\" in def || \"validate\" in def)) {\n    throw new Error('$data keyword must have \"code\" or \"validate\" function')\n  }\n}\n\nfunction addRule(\n  this: Ajv,\n  keyword: string,\n  definition?: AddedKeywordDefinition,\n  dataType?: JSONType\n): void {\n  const post = definition?.post\n  if (dataType && post) throw new Error('keyword with \"post\" flag cannot have \"type\"')\n  const {RULES} = this\n  let ruleGroup = post ? RULES.post : RULES.rules.find(({type: t}) => t === dataType)\n  if (!ruleGroup) {\n    ruleGroup = {type: dataType, rules: []}\n    RULES.rules.push(ruleGroup)\n  }\n  RULES.keywords[keyword] = true\n  if (!definition) return\n\n  const rule: Rule = {\n    keyword,\n    definition: {\n      ...definition,\n      type: getJSONTypes(definition.type),\n      schemaType: getJSONTypes(definition.schemaType),\n    },\n  }\n  if (definition.before) addBeforeRule.call(this, ruleGroup, rule, definition.before)\n  else ruleGroup.rules.push(rule)\n  RULES.all[keyword] = rule\n  definition.implements?.forEach((kwd) => this.addKeyword(kwd))\n}\n\nfunction addBeforeRule(this: Ajv, ruleGroup: RuleGroup, rule: Rule, before: string): void {\n  const i = ruleGroup.rules.findIndex((_rule) => _rule.keyword === before)\n  if (i >= 0) {\n    ruleGroup.rules.splice(i, 0, rule)\n  } else {\n    ruleGroup.rules.push(rule)\n    this.logger.warn(`rule ${before} is not defined`)\n  }\n}\n\nfunction keywordMetaschema(this: Ajv, def: KeywordDefinition): void {\n  let {metaSchema} = def\n  if (metaSchema === undefined) return\n  if (def.$data && this.opts.$data) metaSchema = schemaOrData(metaSchema)\n  def.validateSchema = this.compile(metaSchema, true)\n}\n\nconst $dataRef = {\n  $ref: \"https://raw.githubusercontent.com/ajv-validator/ajv/master/lib/refs/data.json#\",\n}\n\nfunction schemaOrData(schema: AnySchema): AnySchemaObject {\n  return {anyOf: [schema, $dataRef]}\n}\n","import type {CodeKeywordDefinition} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"id\",\n  code() {\n    throw new Error('NOT SUPPORTED: keyword \"id\", use \"$id\" for schema ID')\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport MissingRefError from \"../../compile/ref_error\"\nimport {callValidateCode} from \"../code\"\nimport {_, nil, stringify, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport {SchemaEnv, resolveRef} from \"../../compile\"\nimport {mergeEvaluated} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"$ref\",\n  schemaType: \"string\",\n  code(cxt: KeywordCxt): void {\n    const {gen, schema: $ref, it} = cxt\n    const {baseId, schemaEnv: env, validateName, opts, self} = it\n    const {root} = env\n    if (($ref === \"#\" || $ref === \"#/\") && baseId === root.baseId) return callRootRef()\n    const schOrEnv = resolveRef.call(self, root, baseId, $ref)\n    if (schOrEnv === undefined) throw new MissingRefError(it.opts.uriResolver, baseId, $ref)\n    if (schOrEnv instanceof SchemaEnv) return callValidate(schOrEnv)\n    return inlineRefSchema(schOrEnv)\n\n    function callRootRef(): void {\n      if (env === root) return callRef(cxt, validateName, env, env.$async)\n      const rootName = gen.scopeValue(\"root\", {ref: root})\n      return callRef(cxt, _`${rootName}.validate`, root, root.$async)\n    }\n\n    function callValidate(sch: SchemaEnv): void {\n      const v = getValidate(cxt, sch)\n      callRef(cxt, v, sch, sch.$async)\n    }\n\n    function inlineRefSchema(sch: AnySchema): void {\n      const schName = gen.scopeValue(\n        \"schema\",\n        opts.code.source === true ? {ref: sch, code: stringify(sch)} : {ref: sch}\n      )\n      const valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema(\n        {\n          schema: sch,\n          dataTypes: [],\n          schemaPath: nil,\n          topSchemaRef: schName,\n          errSchemaPath: $ref,\n        },\n        valid\n      )\n      cxt.mergeEvaluated(schCxt)\n      cxt.ok(valid)\n    }\n  },\n}\n\nexport function getValidate(cxt: KeywordCxt, sch: SchemaEnv): Code {\n  const {gen} = cxt\n  return sch.validate\n    ? gen.scopeValue(\"validate\", {ref: sch.validate})\n    : _`${gen.scopeValue(\"wrapper\", {ref: sch})}.validate`\n}\n\nexport function callRef(cxt: KeywordCxt, v: Code, sch?: SchemaEnv, $async?: boolean): void {\n  const {gen, it} = cxt\n  const {allErrors, schemaEnv: env, opts} = it\n  const passCxt = opts.passContext ? N.this : nil\n  if ($async) callAsyncRef()\n  else callSyncRef()\n\n  function callAsyncRef(): void {\n    if (!env.$async) throw new Error(\"async schema referenced by sync schema\")\n    const valid = gen.let(\"valid\")\n    gen.try(\n      () => {\n        gen.code(_`await ${callValidateCode(cxt, v, passCxt)}`)\n        addEvaluatedFrom(v) // TODO will not work with async, it has to be returned with the result\n        if (!allErrors) gen.assign(valid, true)\n      },\n      (e) => {\n        gen.if(_`!(${e} instanceof ${it.ValidationError as Name})`, () => gen.throw(e))\n        addErrorsFrom(e)\n        if (!allErrors) gen.assign(valid, false)\n      }\n    )\n    cxt.ok(valid)\n  }\n\n  function callSyncRef(): void {\n    cxt.result(\n      callValidateCode(cxt, v, passCxt),\n      () => addEvaluatedFrom(v),\n      () => addErrorsFrom(v)\n    )\n  }\n\n  function addErrorsFrom(source: Code): void {\n    const errs = _`${source}.errors`\n    gen.assign(N.vErrors, _`${N.vErrors} === null ? ${errs} : ${N.vErrors}.concat(${errs})`) // TODO tagged\n    gen.assign(N.errors, _`${N.vErrors}.length`)\n  }\n\n  function addEvaluatedFrom(source: Code): void {\n    if (!it.opts.unevaluated) return\n    const schEvaluated = sch?.validate?.evaluated\n    // TODO refactor\n    if (it.props !== true) {\n      if (schEvaluated && !schEvaluated.dynamicProps) {\n        if (schEvaluated.props !== undefined) {\n          it.props = mergeEvaluated.props(gen, schEvaluated.props, it.props)\n        }\n      } else {\n        const props = gen.var(\"props\", _`${source}.evaluated.props`)\n        it.props = mergeEvaluated.props(gen, props, it.props, Name)\n      }\n    }\n    if (it.items !== true) {\n      if (schEvaluated && !schEvaluated.dynamicItems) {\n        if (schEvaluated.items !== undefined) {\n          it.items = mergeEvaluated.items(gen, schEvaluated.items, it.items)\n        }\n      } else {\n        const items = gen.var(\"items\", _`${source}.evaluated.items`)\n        it.items = mergeEvaluated.items(gen, items, it.items, Name)\n      }\n    }\n  }\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport idKeyword from \"./id\"\nimport refKeyword from \"./ref\"\n\nconst core: Vocabulary = [\n  \"$schema\",\n  \"$id\",\n  \"$defs\",\n  \"$vocabulary\",\n  {keyword: \"$comment\"},\n  \"definitions\",\n  idKeyword,\n  refKeyword,\n]\n\nexport default core\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators, Code} from \"../../compile/codegen\"\n\nconst ops = operators\n\ntype Kwd = \"maximum\" | \"minimum\" | \"exclusiveMaximum\" | \"exclusiveMinimum\"\n\ntype Comparison = \"<=\" | \">=\" | \"<\" | \">\"\n\nconst KWDs: {[K in Kwd]: {okStr: Comparison; ok: Code; fail: Code}} = {\n  maximum: {okStr: \"<=\", ok: ops.LTE, fail: ops.GT},\n  minimum: {okStr: \">=\", ok: ops.GTE, fail: ops.LT},\n  exclusiveMaximum: {okStr: \"<\", ok: ops.LT, fail: ops.GTE},\n  exclusiveMinimum: {okStr: \">\", ok: ops.GT, fail: ops.LTE},\n}\n\nexport type LimitNumberError = ErrorObject<\n  Kwd,\n  {limit: number; comparison: Comparison},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({keyword, schemaCode}) => str`must be ${KWDs[keyword as Kwd].okStr} ${schemaCode}`,\n  params: ({keyword, schemaCode}) =>\n    _`{comparison: ${KWDs[keyword as Kwd].okStr}, limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: Object.keys(KWDs),\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    cxt.fail$data(_`${data} ${KWDs[keyword as Kwd].fail} ${schemaCode} || isNaN(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type MultipleOfError = ErrorObject<\n  \"multipleOf\",\n  {multipleOf: number},\n  number | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must be multiple of ${schemaCode}`,\n  params: ({schemaCode}) => _`{multipleOf: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"multipleOf\",\n  type: \"number\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schemaCode, it} = cxt\n    // const bdt = bad$DataType(schemaCode, <string>def.schemaType, $data)\n    const prec = it.opts.multipleOfPrecision\n    const res = gen.let(\"res\")\n    const invalid = prec\n      ? _`Math.abs(Math.round(${res}) - ${res}) > 1e-${prec}`\n      : _`${res} !== parseInt(${res})`\n    cxt.fail$data(_`(${schemaCode} === 0 || (${res} = ${data}/${schemaCode}, ${invalid}))`)\n  },\n}\n\nexport default def\n","// https://mathiasbynens.be/notes/javascript-encoding\n// https://github.com/bestiejs/punycode.js - punycode.ucs2.decode\nexport default function ucs2length(str: string): number {\n  const len = str.length\n  let length = 0\n  let pos = 0\n  let value: number\n  while (pos < len) {\n    length++\n    value = str.charCodeAt(pos++)\n    if (value >= 0xd800 && value <= 0xdbff && pos < len) {\n      // high surrogate, and there is a next character\n      value = str.charCodeAt(pos)\n      if ((value & 0xfc00) === 0xdc00) pos++ // low surrogate\n    }\n  }\n  return length\n}\n\nucs2length.code = 'require(\"ajv/dist/runtime/ucs2length\").default'\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport ucs2length from \"../../runtime/ucs2length\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxLength\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} characters`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxLength\", \"minLength\"],\n  type: \"string\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode, it} = cxt\n    const op = keyword === \"maxLength\" ? operators.GT : operators.LT\n    const len =\n      it.opts.unicode === false ? _`${data}.length` : _`${useFunc(cxt.gen, ucs2length)}(${data})`\n    cxt.fail$data(_`${len} ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {usePattern} from \"../code\"\nimport {_, str} from \"../../compile/codegen\"\n\nexport type PatternError = ErrorObject<\"pattern\", {pattern: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match pattern \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{pattern: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"pattern\",\n  type: \"string\",\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {data, $data, schema, schemaCode, it} = cxt\n    // TODO regexp should be wrapped in try/catchs\n    const u = it.opts.unicodeRegExp ? \"u\" : \"\"\n    const regExp = $data ? _`(new RegExp(${schemaCode}, ${u}))` : usePattern(cxt, schema)\n    cxt.fail$data(_`!${regExp}.test(${data})`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxProperties\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} properties`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxProperties\", \"minProperties\"],\n  type: \"object\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxProperties\" ? operators.GT : operators.LT\n    cxt.fail$data(_`Object.keys(${data}).length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {\n  checkReportMissingProp,\n  checkMissingProp,\n  reportMissingProp,\n  propertyInData,\n  noPropertyInData,\n} from \"../code\"\nimport {_, str, nil, not, Name, Code} from \"../../compile/codegen\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nexport type RequiredError = ErrorObject<\n  \"required\",\n  {missingProperty: string},\n  string[] | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {missingProperty}}) => str`must have required property '${missingProperty}'`,\n  params: ({params: {missingProperty}}) => _`{missingProperty: ${missingProperty}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"required\",\n  type: \"object\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, schemaCode, data, $data, it} = cxt\n    const {opts} = it\n    if (!$data && schema.length === 0) return\n    const useLoop = schema.length >= opts.loopRequired\n    if (it.allErrors) allErrorsMode()\n    else exitOnErrorMode()\n\n    if (opts.strictRequired) {\n      const props = cxt.parentSchema.properties\n      const {definedProperties} = cxt.it\n      for (const requiredKey of schema) {\n        if (props?.[requiredKey] === undefined && !definedProperties.has(requiredKey)) {\n          const schemaPath = it.schemaEnv.baseId + it.errSchemaPath\n          const msg = `required property \"${requiredKey}\" is not defined at \"${schemaPath}\" (strictRequired)`\n          checkStrictMode(it, msg, it.opts.strictRequired)\n        }\n      }\n    }\n\n    function allErrorsMode(): void {\n      if (useLoop || $data) {\n        cxt.block$data(nil, loopAllRequired)\n      } else {\n        for (const prop of schema) {\n          checkReportMissingProp(cxt, prop)\n        }\n      }\n    }\n\n    function exitOnErrorMode(): void {\n      const missing = gen.let(\"missing\")\n      if (useLoop || $data) {\n        const valid = gen.let(\"valid\", true)\n        cxt.block$data(valid, () => loopUntilMissing(missing, valid))\n        cxt.ok(valid)\n      } else {\n        gen.if(checkMissingProp(cxt, schema, missing))\n        reportMissingProp(cxt, missing)\n        gen.else()\n      }\n    }\n\n    function loopAllRequired(): void {\n      gen.forOf(\"prop\", schemaCode as Code, (prop) => {\n        cxt.setParams({missingProperty: prop})\n        gen.if(noPropertyInData(gen, data, prop, opts.ownProperties), () => cxt.error())\n      })\n    }\n\n    function loopUntilMissing(missing: Name, valid: Name): void {\n      cxt.setParams({missingProperty: missing})\n      gen.forOf(\n        missing,\n        schemaCode as Code,\n        () => {\n          gen.assign(valid, propertyInData(gen, data, missing, opts.ownProperties))\n          gen.if(not(valid), () => {\n            cxt.error()\n            gen.break()\n          })\n        },\n        nil\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, operators} from \"../../compile/codegen\"\n\nconst error: KeywordErrorDefinition = {\n  message({keyword, schemaCode}) {\n    const comp = keyword === \"maxItems\" ? \"more\" : \"fewer\"\n    return str`must NOT have ${comp} than ${schemaCode} items`\n  },\n  params: ({schemaCode}) => _`{limit: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"maxItems\", \"minItems\"],\n  type: \"array\",\n  schemaType: \"number\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {keyword, data, schemaCode} = cxt\n    const op = keyword === \"maxItems\" ? operators.GT : operators.LT\n    cxt.fail$data(_`${data}.length ${op} ${schemaCode}`)\n  },\n}\n\nexport default def\n","// https://github.com/ajv-validator/ajv/issues/889\nimport * as equal from \"fast-deep-equal\"\n\ntype Equal = typeof equal & {code: string}\n;(equal as Equal).code = 'require(\"ajv/dist/runtime/equal\").default'\n\nexport default equal as Equal\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkDataTypes, getSchemaTypes, DataType} from \"../../compile/validate/dataType\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type UniqueItemsError = ErrorObject<\n  \"uniqueItems\",\n  {i: number; j: number},\n  boolean | {$data: string}\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {i, j}}) =>\n    str`must NOT have duplicate items (items ## ${j} and ${i} are identical)`,\n  params: ({params: {i, j}}) => _`{i: ${i}, j: ${j}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"uniqueItems\",\n  type: \"array\",\n  schemaType: \"boolean\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, parentSchema, schemaCode, it} = cxt\n    if (!$data && !schema) return\n    const valid = gen.let(\"valid\")\n    const itemTypes = parentSchema.items ? getSchemaTypes(parentSchema.items) : []\n    cxt.block$data(valid, validateUniqueItems, _`${schemaCode} === false`)\n    cxt.ok(valid)\n\n    function validateUniqueItems(): void {\n      const i = gen.let(\"i\", _`${data}.length`)\n      const j = gen.let(\"j\")\n      cxt.setParams({i, j})\n      gen.assign(valid, true)\n      gen.if(_`${i} > 1`, () => (canOptimize() ? loopN : loopN2)(i, j))\n    }\n\n    function canOptimize(): boolean {\n      return itemTypes.length > 0 && !itemTypes.some((t) => t === \"object\" || t === \"array\")\n    }\n\n    function loopN(i: Name, j: Name): void {\n      const item = gen.name(\"item\")\n      const wrongType = checkDataTypes(itemTypes, item, it.opts.strictNumbers, DataType.Wrong)\n      const indices = gen.const(\"indices\", _`{}`)\n      gen.for(_`;${i}--;`, () => {\n        gen.let(item, _`${data}[${i}]`)\n        gen.if(wrongType, _`continue`)\n        if (itemTypes.length > 1) gen.if(_`typeof ${item} == \"string\"`, _`${item} += \"_\"`)\n        gen\n          .if(_`typeof ${indices}[${item}] == \"number\"`, () => {\n            gen.assign(j, _`${indices}[${item}]`)\n            cxt.error()\n            gen.assign(valid, false).break()\n          })\n          .code(_`${indices}[${item}] = ${i}`)\n      })\n    }\n\n    function loopN2(i: Name, j: Name): void {\n      const eql = useFunc(gen, equal)\n      const outer = gen.name(\"outer\")\n      gen.label(outer).for(_`;${i}--;`, () =>\n        gen.for(_`${j} = ${i}; ${j}--;`, () =>\n          gen.if(_`${eql}(${data}[${i}], ${data}[${j}])`, () => {\n            cxt.error()\n            gen.assign(valid, false).break(outer)\n          })\n        )\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type ConstError = ErrorObject<\"const\", {allowedValue: any}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to constant\",\n  params: ({schemaCode}) => _`{allowedValue: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"const\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schemaCode, schema} = cxt\n    if ($data || (schema && typeof schema == \"object\")) {\n      cxt.fail$data(_`!${useFunc(gen, equal)}(${data}, ${schemaCode})`)\n    } else {\n      cxt.fail(_`${schema} !== ${data}`)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, or, Name, Code} from \"../../compile/codegen\"\nimport {useFunc} from \"../../compile/util\"\nimport equal from \"../../runtime/equal\"\n\nexport type EnumError = ErrorObject<\"enum\", {allowedValues: any[]}, any[] | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must be equal to one of the allowed values\",\n  params: ({schemaCode}) => _`{allowedValues: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"enum\",\n  schemaType: \"array\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    if (!$data && schema.length === 0) throw new Error(\"enum must have non-empty array\")\n    const useLoop = schema.length >= it.opts.loopEnum\n    let eql: Name | undefined\n    const getEql = (): Name => (eql ??= useFunc(gen, equal))\n\n    let valid: Code\n    if (useLoop || $data) {\n      valid = gen.let(\"valid\")\n      cxt.block$data(valid, loopEnum)\n    } else {\n      /* istanbul ignore if */\n      if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n      const vSchema = gen.const(\"vSchema\", schemaCode)\n      valid = or(...schema.map((_x: unknown, i: number) => equalCode(vSchema, i)))\n    }\n    cxt.pass(valid)\n\n    function loopEnum(): void {\n      gen.assign(valid, false)\n      gen.forOf(\"v\", schemaCode as Code, (v) =>\n        gen.if(_`${getEql()}(${data}, ${v})`, () => gen.assign(valid, true).break())\n      )\n    }\n\n    function equalCode(vSchema: Name, i: number): Code {\n      const sch = schema[i]\n      return typeof sch === \"object\" && sch !== null\n        ? _`${getEql()}(${data}, ${vSchema}[${i}])`\n        : _`${data} === ${sch}`\n    }\n  },\n}\n\nexport default def\n","import type {ErrorObject, Vocabulary} from \"../../types\"\nimport limitNumber, {LimitNumberError} from \"./limitNumber\"\nimport multipleOf, {MultipleOfError} from \"./multipleOf\"\nimport limitLength from \"./limitLength\"\nimport pattern, {PatternError} from \"./pattern\"\nimport limitProperties from \"./limitProperties\"\nimport required, {RequiredError} from \"./required\"\nimport limitItems from \"./limitItems\"\nimport uniqueItems, {UniqueItemsError} from \"./uniqueItems\"\nimport constKeyword, {ConstError} from \"./const\"\nimport enumKeyword, {EnumError} from \"./enum\"\n\nconst validation: Vocabulary = [\n  // number\n  limitNumber,\n  multipleOf,\n  // string\n  limitLength,\n  pattern,\n  // object\n  limitProperties,\n  required,\n  // array\n  limitItems,\n  uniqueItems,\n  // any\n  {keyword: \"type\", schemaType: [\"string\", \"array\"]},\n  {keyword: \"nullable\", schemaType: \"boolean\"},\n  constKeyword,\n  enumKeyword,\n]\n\nexport default validation\n\ntype LimitError = ErrorObject<\n  \"maxItems\" | \"minItems\" | \"minProperties\" | \"maxProperties\" | \"minLength\" | \"maxLength\",\n  {limit: number},\n  number | {$data: string}\n>\n\nexport type ValidationKeywordError =\n  | LimitError\n  | LimitNumberError\n  | MultipleOfError\n  | PatternError\n  | RequiredError\n  | UniqueItemsError\n  | ConstError\n  | EnumError\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type AdditionalItemsError = ErrorObject<\"additionalItems\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"additionalItems\" as const,\n  type: \"array\",\n  schemaType: [\"boolean\", \"object\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {parentSchema, it} = cxt\n    const {items} = parentSchema\n    if (!Array.isArray(items)) {\n      checkStrictMode(it, '\"additionalItems\" is ignored when \"items\" is not an array of schemas')\n      return\n    }\n    validateAdditionalItems(cxt, items)\n  },\n}\n\nexport function validateAdditionalItems(cxt: KeywordCxt, items: AnySchema[]): void {\n  const {gen, schema, data, keyword, it} = cxt\n  it.items = true\n  const len = gen.const(\"len\", _`${data}.length`)\n  if (schema === false) {\n    cxt.setParams({len: items.length})\n    cxt.pass(_`${len} <= ${items.length}`)\n  } else if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n    const valid = gen.var(\"valid\", _`${len} <= ${items.length}`) // TODO var\n    gen.if(not(valid), () => validateItems(valid))\n    cxt.ok(valid)\n  }\n\n  function validateItems(valid: Name): void {\n    gen.forRange(\"i\", items.length, len, (i) => {\n      cxt.subschema({keyword, dataProp: i, dataPropType: Type.Num}, valid)\n      if (!it.allErrors) gen.if(not(valid), () => gen.break())\n    })\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema, AnySchemaObject} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_} from \"../../compile/codegen\"\nimport {alwaysValidSchema, mergeEvaluated, checkStrictMode} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"array\", \"boolean\"],\n  before: \"uniqueItems\",\n  code(cxt: KeywordCxt) {\n    const {schema, it} = cxt\n    if (Array.isArray(schema)) return validateTuple(cxt, \"additionalItems\", schema)\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    cxt.ok(validateArray(cxt))\n  },\n}\n\nexport function validateTuple(\n  cxt: KeywordCxt,\n  extraItems: string,\n  schArr: AnySchema[] = cxt.schema\n): void {\n  const {gen, parentSchema, data, keyword, it} = cxt\n  checkStrictTuple(parentSchema)\n  if (it.opts.unevaluated && schArr.length && it.items !== true) {\n    it.items = mergeEvaluated.items(gen, schArr.length, it.items)\n  }\n  const valid = gen.name(\"valid\")\n  const len = gen.const(\"len\", _`${data}.length`)\n  schArr.forEach((sch: AnySchema, i: number) => {\n    if (alwaysValidSchema(it, sch)) return\n    gen.if(_`${len} > ${i}`, () =>\n      cxt.subschema(\n        {\n          keyword,\n          schemaProp: i,\n          dataProp: i,\n        },\n        valid\n      )\n    )\n    cxt.ok(valid)\n  })\n\n  function checkStrictTuple(sch: AnySchemaObject): void {\n    const {opts, errSchemaPath} = it\n    const l = schArr.length\n    const fullTuple = l === sch.minItems && (l === sch.maxItems || sch[extraItems] === false)\n    if (opts.strictTuples && !fullTuple) {\n      const msg = `\"${keyword}\" is ${l}-tuple, but minItems or maxItems/${extraItems} are not specified or different at path \"${errSchemaPath}\"`\n      checkStrictMode(it, msg, opts.strictTuples)\n    }\n  }\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {validateTuple} from \"./items\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"prefixItems\",\n  type: \"array\",\n  schemaType: [\"array\"],\n  before: \"uniqueItems\",\n  code: (cxt) => validateTuple(cxt, \"items\"),\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {validateArray} from \"../code\"\nimport {validateAdditionalItems} from \"./additionalItems\"\n\nexport type ItemsError = ErrorObject<\"items\", {limit: number}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {len}}) => str`must NOT have more than ${len} items`,\n  params: ({params: {len}}) => _`{limit: ${len}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"items\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {schema, parentSchema, it} = cxt\n    const {prefixItems} = parentSchema\n    it.items = true\n    if (alwaysValidSchema(it, schema)) return\n    if (prefixItems) validateAdditionalItems(cxt, prefixItems)\n    else cxt.ok(validateArray(cxt))\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode, Type} from \"../../compile/util\"\n\nexport type ContainsError = ErrorObject<\n  \"contains\",\n  {minContains: number; maxContains?: number},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {min, max}}) =>\n    max === undefined\n      ? str`must contain at least ${min} valid item(s)`\n      : str`must contain at least ${min} and no more than ${max} valid item(s)`,\n  params: ({params: {min, max}}) =>\n    max === undefined ? _`{minContains: ${min}}` : _`{minContains: ${min}, maxContains: ${max}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"contains\",\n  type: \"array\",\n  schemaType: [\"object\", \"boolean\"],\n  before: \"uniqueItems\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    let min: number\n    let max: number | undefined\n    const {minContains, maxContains} = parentSchema\n    if (it.opts.next) {\n      min = minContains === undefined ? 1 : minContains\n      max = maxContains\n    } else {\n      min = 1\n    }\n    const len = gen.const(\"len\", _`${data}.length`)\n    cxt.setParams({min, max})\n    if (max === undefined && min === 0) {\n      checkStrictMode(it, `\"minContains\" == 0 without \"maxContains\": \"contains\" keyword ignored`)\n      return\n    }\n    if (max !== undefined && min > max) {\n      checkStrictMode(it, `\"minContains\" > \"maxContains\" is always invalid`)\n      cxt.fail()\n      return\n    }\n    if (alwaysValidSchema(it, schema)) {\n      let cond = _`${len} >= ${min}`\n      if (max !== undefined) cond = _`${cond} && ${len} <= ${max}`\n      cxt.pass(cond)\n      return\n    }\n\n    it.items = true\n    const valid = gen.name(\"valid\")\n    if (max === undefined && min === 1) {\n      validateItems(valid, () => gen.if(valid, () => gen.break()))\n    } else if (min === 0) {\n      gen.let(valid, true)\n      if (max !== undefined) gen.if(_`${data}.length > 0`, validateItemsWithCount)\n    } else {\n      gen.let(valid, false)\n      validateItemsWithCount()\n    }\n    cxt.result(valid, () => cxt.reset())\n\n    function validateItemsWithCount(): void {\n      const schValid = gen.name(\"_valid\")\n      const count = gen.let(\"count\", 0)\n      validateItems(schValid, () => gen.if(schValid, () => checkLimits(count)))\n    }\n\n    function validateItems(_valid: Name, block: () => void): void {\n      gen.forRange(\"i\", 0, len, (i) => {\n        cxt.subschema(\n          {\n            keyword: \"contains\",\n            dataProp: i,\n            dataPropType: Type.Num,\n            compositeRule: true,\n          },\n          _valid\n        )\n        block()\n      })\n    }\n\n    function checkLimits(count: Name): void {\n      gen.code(_`${count}++`)\n      if (max === undefined) {\n        gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true).break())\n      } else {\n        gen.if(_`${count} > ${max}`, () => gen.assign(valid, false).break())\n        if (min === 1) gen.assign(valid, true)\n        else gen.if(_`${count} >= ${min}`, () => gen.assign(valid, true))\n      }\n    }\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  SchemaMap,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {checkReportMissingProp, checkMissingProp, reportMissingProp, propertyInData} from \"../code\"\n\nexport type PropertyDependencies = {[K in string]?: string[]}\n\nexport interface DependenciesErrorParams {\n  property: string\n  missingProperty: string\n  depsCount: number\n  deps: string // TODO change to string[]\n}\n\ntype SchemaDependencies = SchemaMap\n\nexport type DependenciesError = ErrorObject<\n  \"dependencies\",\n  DependenciesErrorParams,\n  {[K in string]?: string[] | AnySchema}\n>\n\nexport const error: KeywordErrorDefinition = {\n  message: ({params: {property, depsCount, deps}}) => {\n    const property_ies = depsCount === 1 ? \"property\" : \"properties\"\n    return str`must have ${property_ies} ${deps} when property ${property} is present`\n  },\n  params: ({params: {property, depsCount, deps, missingProperty}}) =>\n    _`{property: ${property},\n    missingProperty: ${missingProperty},\n    depsCount: ${depsCount},\n    deps: ${deps}}`, // TODO change to reference\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"dependencies\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const [propDeps, schDeps] = splitDependencies(cxt)\n    validatePropertyDeps(cxt, propDeps)\n    validateSchemaDeps(cxt, schDeps)\n  },\n}\n\nfunction splitDependencies({schema}: KeywordCxt): [PropertyDependencies, SchemaDependencies] {\n  const propertyDeps: PropertyDependencies = {}\n  const schemaDeps: SchemaDependencies = {}\n  for (const key in schema) {\n    if (key === \"__proto__\") continue\n    const deps = Array.isArray(schema[key]) ? propertyDeps : schemaDeps\n    deps[key] = schema[key]\n  }\n  return [propertyDeps, schemaDeps]\n}\n\nexport function validatePropertyDeps(\n  cxt: KeywordCxt,\n  propertyDeps: {[K in string]?: string[]} = cxt.schema\n): void {\n  const {gen, data, it} = cxt\n  if (Object.keys(propertyDeps).length === 0) return\n  const missing = gen.let(\"missing\")\n  for (const prop in propertyDeps) {\n    const deps = propertyDeps[prop] as string[]\n    if (deps.length === 0) continue\n    const hasProperty = propertyInData(gen, data, prop, it.opts.ownProperties)\n    cxt.setParams({\n      property: prop,\n      depsCount: deps.length,\n      deps: deps.join(\", \"),\n    })\n    if (it.allErrors) {\n      gen.if(hasProperty, () => {\n        for (const depProp of deps) {\n          checkReportMissingProp(cxt, depProp)\n        }\n      })\n    } else {\n      gen.if(_`${hasProperty} && (${checkMissingProp(cxt, deps, missing)})`)\n      reportMissingProp(cxt, missing)\n      gen.else()\n    }\n  }\n}\n\nexport function validateSchemaDeps(cxt: KeywordCxt, schemaDeps: SchemaMap = cxt.schema): void {\n  const {gen, data, keyword, it} = cxt\n  const valid = gen.name(\"valid\")\n  for (const prop in schemaDeps) {\n    if (alwaysValidSchema(it, schemaDeps[prop] as AnySchema)) continue\n    gen.if(\n      propertyInData(gen, data, prop, it.opts.ownProperties),\n      () => {\n        const schCxt = cxt.subschema({keyword, schemaProp: prop}, valid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n      },\n      () => gen.var(valid, true) // TODO var\n    )\n    cxt.ok(valid)\n  }\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, not} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type PropertyNamesError = ErrorObject<\"propertyNames\", {propertyName: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: \"property name must be valid\",\n  params: ({params}) => _`{propertyName: ${params.propertyName}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"propertyNames\",\n  type: \"object\",\n  schemaType: [\"object\", \"boolean\"],\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, it} = cxt\n    if (alwaysValidSchema(it, schema)) return\n    const valid = gen.name(\"valid\")\n\n    gen.forIn(\"key\", data, (key) => {\n      cxt.setParams({propertyName: key})\n      cxt.subschema(\n        {\n          keyword: \"propertyNames\",\n          data: key,\n          dataTypes: [\"string\"],\n          propertyName: key,\n          compositeRule: true,\n        },\n        valid\n      )\n      gen.if(not(valid), () => {\n        cxt.error(true)\n        if (!it.allErrors) gen.break()\n      })\n    })\n\n    cxt.ok(valid)\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  AddedKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport {allSchemaProperties, usePattern, isOwnProperty} from \"../code\"\nimport {_, nil, or, not, Code, Name} from \"../../compile/codegen\"\nimport N from \"../../compile/names\"\nimport type {SubschemaArgs} from \"../../compile/validate/subschema\"\nimport {alwaysValidSchema, schemaRefOrVal, Type} from \"../../compile/util\"\n\nexport type AdditionalPropertiesError = ErrorObject<\n  \"additionalProperties\",\n  {additionalProperty: string},\n  AnySchema\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must NOT have additional properties\",\n  params: ({params}) => _`{additionalProperty: ${params.additionalProperty}}`,\n}\n\nconst def: CodeKeywordDefinition & AddedKeywordDefinition = {\n  keyword: \"additionalProperties\",\n  type: [\"object\"],\n  schemaType: [\"boolean\", \"object\"],\n  allowUndefined: true,\n  trackErrors: true,\n  error,\n  code(cxt) {\n    const {gen, schema, parentSchema, data, errsCount, it} = cxt\n    /* istanbul ignore if */\n    if (!errsCount) throw new Error(\"ajv implementation error\")\n    const {allErrors, opts} = it\n    it.props = true\n    if (opts.removeAdditional !== \"all\" && alwaysValidSchema(it, schema)) return\n    const props = allSchemaProperties(parentSchema.properties)\n    const patProps = allSchemaProperties(parentSchema.patternProperties)\n    checkAdditionalProperties()\n    cxt.ok(_`${errsCount} === ${N.errors}`)\n\n    function checkAdditionalProperties(): void {\n      gen.forIn(\"key\", data, (key: Name) => {\n        if (!props.length && !patProps.length) additionalPropertyCode(key)\n        else gen.if(isAdditional(key), () => additionalPropertyCode(key))\n      })\n    }\n\n    function isAdditional(key: Name): Code {\n      let definedProp: Code\n      if (props.length > 8) {\n        // TODO maybe an option instead of hard-coded 8?\n        const propsSchema = schemaRefOrVal(it, parentSchema.properties, \"properties\")\n        definedProp = isOwnProperty(gen, propsSchema as Code, key)\n      } else if (props.length) {\n        definedProp = or(...props.map((p) => _`${key} === ${p}`))\n      } else {\n        definedProp = nil\n      }\n      if (patProps.length) {\n        definedProp = or(definedProp, ...patProps.map((p) => _`${usePattern(cxt, p)}.test(${key})`))\n      }\n      return not(definedProp)\n    }\n\n    function deleteAdditional(key: Name): void {\n      gen.code(_`delete ${data}[${key}]`)\n    }\n\n    function additionalPropertyCode(key: Name): void {\n      if (opts.removeAdditional === \"all\" || (opts.removeAdditional && schema === false)) {\n        deleteAdditional(key)\n        return\n      }\n\n      if (schema === false) {\n        cxt.setParams({additionalProperty: key})\n        cxt.error()\n        if (!allErrors) gen.break()\n        return\n      }\n\n      if (typeof schema == \"object\" && !alwaysValidSchema(it, schema)) {\n        const valid = gen.name(\"valid\")\n        if (opts.removeAdditional === \"failing\") {\n          applyAdditionalSchema(key, valid, false)\n          gen.if(not(valid), () => {\n            cxt.reset()\n            deleteAdditional(key)\n          })\n        } else {\n          applyAdditionalSchema(key, valid)\n          if (!allErrors) gen.if(not(valid), () => gen.break())\n        }\n      }\n    }\n\n    function applyAdditionalSchema(key: Name, valid: Name, errors?: false): void {\n      const subschema: SubschemaArgs = {\n        keyword: \"additionalProperties\",\n        dataProp: key,\n        dataPropType: Type.Str,\n      }\n      if (errors === false) {\n        Object.assign(subschema, {\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        })\n      }\n      cxt.subschema(subschema, valid)\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport {KeywordCxt} from \"../../compile/validate\"\nimport {propertyInData, allSchemaProperties} from \"../code\"\nimport {alwaysValidSchema, toHash, mergeEvaluated} from \"../../compile/util\"\nimport apDef from \"./additionalProperties\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"properties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, data, it} = cxt\n    if (it.opts.removeAdditional === \"all\" && parentSchema.additionalProperties === undefined) {\n      apDef.code(new KeywordCxt(it, apDef, \"additionalProperties\"))\n    }\n    const allProps = allSchemaProperties(schema)\n    for (const prop of allProps) {\n      it.definedProperties.add(prop)\n    }\n    if (it.opts.unevaluated && allProps.length && it.props !== true) {\n      it.props = mergeEvaluated.props(gen, toHash(allProps), it.props)\n    }\n    const properties = allProps.filter((p) => !alwaysValidSchema(it, schema[p]))\n    if (properties.length === 0) return\n    const valid = gen.name(\"valid\")\n\n    for (const prop of properties) {\n      if (hasDefault(prop)) {\n        applyPropertySchema(prop)\n      } else {\n        gen.if(propertyInData(gen, data, prop, it.opts.ownProperties))\n        applyPropertySchema(prop)\n        if (!it.allErrors) gen.else().var(valid, true)\n        gen.endIf()\n      }\n      cxt.it.definedProperties.add(prop)\n      cxt.ok(valid)\n    }\n\n    function hasDefault(prop: string): boolean | undefined {\n      return it.opts.useDefaults && !it.compositeRule && schema[prop].default !== undefined\n    }\n\n    function applyPropertySchema(prop: string): void {\n      cxt.subschema(\n        {\n          keyword: \"properties\",\n          schemaProp: prop,\n          dataProp: prop,\n        },\n        valid\n      )\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {allSchemaProperties, usePattern} from \"../code\"\nimport {_, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\nimport {evaluatedPropsToName, Type} from \"../../compile/util\"\nimport {AnySchema} from \"../../types\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"patternProperties\",\n  type: \"object\",\n  schemaType: \"object\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, data, parentSchema, it} = cxt\n    const {opts} = it\n    const patterns = allSchemaProperties(schema)\n    const alwaysValidPatterns = patterns.filter((p) =>\n      alwaysValidSchema(it, schema[p] as AnySchema)\n    )\n\n    if (\n      patterns.length === 0 ||\n      (alwaysValidPatterns.length === patterns.length &&\n        (!it.opts.unevaluated || it.props === true))\n    ) {\n      return\n    }\n\n    const checkProperties =\n      opts.strictSchema && !opts.allowMatchingProperties && parentSchema.properties\n    const valid = gen.name(\"valid\")\n    if (it.props !== true && !(it.props instanceof Name)) {\n      it.props = evaluatedPropsToName(gen, it.props)\n    }\n    const {props} = it\n    validatePatternProperties()\n\n    function validatePatternProperties(): void {\n      for (const pat of patterns) {\n        if (checkProperties) checkMatchingProperties(pat)\n        if (it.allErrors) {\n          validateProperties(pat)\n        } else {\n          gen.var(valid, true) // TODO var\n          validateProperties(pat)\n          gen.if(valid)\n        }\n      }\n    }\n\n    function checkMatchingProperties(pat: string): void {\n      for (const prop in checkProperties) {\n        if (new RegExp(pat).test(prop)) {\n          checkStrictMode(\n            it,\n            `property ${prop} matches pattern ${pat} (use allowMatchingProperties)`\n          )\n        }\n      }\n    }\n\n    function validateProperties(pat: string): void {\n      gen.forIn(\"key\", data, (key) => {\n        gen.if(_`${usePattern(cxt, pat)}.test(${key})`, () => {\n          const alwaysValid = alwaysValidPatterns.includes(pat)\n          if (!alwaysValid) {\n            cxt.subschema(\n              {\n                keyword: \"patternProperties\",\n                schemaProp: pat,\n                dataProp: key,\n                dataPropType: Type.Str,\n              },\n              valid\n            )\n          }\n\n          if (it.opts.unevaluated && props !== true) {\n            gen.assign(_`${props}[${key}]`, true)\n          } else if (!alwaysValid && !it.allErrors) {\n            // can short-circuit if `unevaluatedProperties` is not supported (opts.next === false)\n            // or if all properties were evaluated (props === true)\n            gen.if(not(valid), () => gen.break())\n          }\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nexport type NotKeywordError = ErrorNoParams<\"not\", AnySchema>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"not\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    if (alwaysValidSchema(it, schema)) {\n      cxt.fail()\n      return\n    }\n\n    const valid = gen.name(\"valid\")\n    cxt.subschema(\n      {\n        keyword: \"not\",\n        compositeRule: true,\n        createErrors: false,\n        allErrors: false,\n      },\n      valid\n    )\n\n    cxt.failResult(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error()\n    )\n  },\n  error: {message: \"must NOT be valid\"},\n}\n\nexport default def\n","import type {CodeKeywordDefinition, ErrorNoParams, AnySchema} from \"../../types\"\nimport {validateUnion} from \"../code\"\n\nexport type AnyOfError = ErrorNoParams<\"anyOf\", AnySchema[]>\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"anyOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  code: validateUnion,\n  error: {message: \"must match a schema in anyOf\"},\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema} from \"../../compile/util\"\nimport {SchemaCxt} from \"../../compile\"\n\nexport type OneOfError = ErrorObject<\n  \"oneOf\",\n  {passingSchemas: [number, number] | null},\n  AnySchema[]\n>\n\nconst error: KeywordErrorDefinition = {\n  message: \"must match exactly one schema in oneOf\",\n  params: ({params}) => _`{passingSchemas: ${params.passing}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"oneOf\",\n  schemaType: \"array\",\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, schema, parentSchema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    if (it.opts.discriminator && parentSchema.discriminator) return\n    const schArr: AnySchema[] = schema\n    const valid = gen.let(\"valid\", false)\n    const passing = gen.let(\"passing\", null)\n    const schValid = gen.name(\"_valid\")\n    cxt.setParams({passing})\n    // TODO possibly fail straight away (with warning or exception) if there are two empty always valid schemas\n\n    gen.block(validateOneOf)\n\n    cxt.result(\n      valid,\n      () => cxt.reset(),\n      () => cxt.error(true)\n    )\n\n    function validateOneOf(): void {\n      schArr.forEach((sch: AnySchema, i: number) => {\n        let schCxt: SchemaCxt | undefined\n        if (alwaysValidSchema(it, sch)) {\n          gen.var(schValid, true)\n        } else {\n          schCxt = cxt.subschema(\n            {\n              keyword: \"oneOf\",\n              schemaProp: i,\n              compositeRule: true,\n            },\n            schValid\n          )\n        }\n\n        if (i > 0) {\n          gen\n            .if(_`${schValid} && ${valid}`)\n            .assign(valid, false)\n            .assign(passing, _`[${passing}, ${i}]`)\n            .else()\n        }\n\n        gen.if(schValid, () => {\n          gen.assign(valid, true)\n          gen.assign(passing, i)\n          if (schCxt) cxt.mergeEvaluated(schCxt, Name)\n        })\n      })\n    }\n  },\n}\n\nexport default def\n","import type {CodeKeywordDefinition, AnySchema} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {alwaysValidSchema} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"allOf\",\n  schemaType: \"array\",\n  code(cxt: KeywordCxt) {\n    const {gen, schema, it} = cxt\n    /* istanbul ignore if */\n    if (!Array.isArray(schema)) throw new Error(\"ajv implementation error\")\n    const valid = gen.name(\"valid\")\n    schema.forEach((sch: AnySchema, i: number) => {\n      if (alwaysValidSchema(it, sch)) return\n      const schCxt = cxt.subschema({keyword: \"allOf\", schemaProp: i}, valid)\n      cxt.ok(valid)\n      cxt.mergeEvaluated(schCxt)\n    })\n  },\n}\n\nexport default def\n","import type {\n  CodeKeywordDefinition,\n  ErrorObject,\n  KeywordErrorDefinition,\n  AnySchema,\n} from \"../../types\"\nimport type {SchemaObjCxt} from \"../../compile\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, not, Name} from \"../../compile/codegen\"\nimport {alwaysValidSchema, checkStrictMode} from \"../../compile/util\"\n\nexport type IfKeywordError = ErrorObject<\"if\", {failingKeyword: string}, AnySchema>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params}) => str`must match \"${params.ifClause}\" schema`,\n  params: ({params}) => _`{failingKeyword: ${params.ifClause}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"if\",\n  schemaType: [\"object\", \"boolean\"],\n  trackErrors: true,\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, parentSchema, it} = cxt\n    if (parentSchema.then === undefined && parentSchema.else === undefined) {\n      checkStrictMode(it, '\"if\" without \"then\" and \"else\" is ignored')\n    }\n    const hasThen = hasSchema(it, \"then\")\n    const hasElse = hasSchema(it, \"else\")\n    if (!hasThen && !hasElse) return\n\n    const valid = gen.let(\"valid\", true)\n    const schValid = gen.name(\"_valid\")\n    validateIf()\n    cxt.reset()\n\n    if (hasThen && hasElse) {\n      const ifClause = gen.let(\"ifClause\")\n      cxt.setParams({ifClause})\n      gen.if(schValid, validateClause(\"then\", ifClause), validateClause(\"else\", ifClause))\n    } else if (hasThen) {\n      gen.if(schValid, validateClause(\"then\"))\n    } else {\n      gen.if(not(schValid), validateClause(\"else\"))\n    }\n\n    cxt.pass(valid, () => cxt.error(true))\n\n    function validateIf(): void {\n      const schCxt = cxt.subschema(\n        {\n          keyword: \"if\",\n          compositeRule: true,\n          createErrors: false,\n          allErrors: false,\n        },\n        schValid\n      )\n      cxt.mergeEvaluated(schCxt)\n    }\n\n    function validateClause(keyword: string, ifClause?: Name): () => void {\n      return () => {\n        const schCxt = cxt.subschema({keyword}, schValid)\n        gen.assign(valid, schValid)\n        cxt.mergeValidEvaluated(schCxt, valid)\n        if (ifClause) gen.assign(ifClause, _`${keyword}`)\n        else cxt.setParams({ifClause: keyword})\n      }\n    }\n  },\n}\n\nfunction hasSchema(it: SchemaObjCxt, keyword: string): boolean {\n  const schema = it.schema[keyword]\n  return schema !== undefined && !alwaysValidSchema(it, schema)\n}\n\nexport default def\n","import type {CodeKeywordDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {checkStrictMode} from \"../../compile/util\"\n\nconst def: CodeKeywordDefinition = {\n  keyword: [\"then\", \"else\"],\n  schemaType: [\"object\", \"boolean\"],\n  code({keyword, parentSchema, it}: KeywordCxt) {\n    if (parentSchema.if === undefined) checkStrictMode(it, `\"${keyword}\" without \"if\" is ignored`)\n  },\n}\n\nexport default def\n","import type {ErrorNoParams, Vocabulary} from \"../../types\"\nimport additionalItems, {AdditionalItemsError} from \"./additionalItems\"\nimport prefixItems from \"./prefixItems\"\nimport items from \"./items\"\nimport items2020, {ItemsError} from \"./items2020\"\nimport contains, {ContainsError} from \"./contains\"\nimport dependencies, {DependenciesError} from \"./dependencies\"\nimport propertyNames, {PropertyNamesError} from \"./propertyNames\"\nimport additionalProperties, {AdditionalPropertiesError} from \"./additionalProperties\"\nimport properties from \"./properties\"\nimport patternProperties from \"./patternProperties\"\nimport notKeyword, {NotKeywordError} from \"./not\"\nimport anyOf, {AnyOfError} from \"./anyOf\"\nimport oneOf, {OneOfError} from \"./oneOf\"\nimport allOf from \"./allOf\"\nimport ifKeyword, {IfKeywordError} from \"./if\"\nimport thenElse from \"./thenElse\"\n\nexport default function getApplicator(draft2020 = false): Vocabulary {\n  const applicator = [\n    // any\n    notKeyword,\n    anyOf,\n    oneOf,\n    allOf,\n    ifKeyword,\n    thenElse,\n    // object\n    propertyNames,\n    additionalProperties,\n    dependencies,\n    properties,\n    patternProperties,\n  ]\n  // array\n  if (draft2020) applicator.push(prefixItems, items2020)\n  else applicator.push(additionalItems, items)\n  applicator.push(contains)\n  return applicator\n}\n\nexport type ApplicatorKeywordError =\n  | ErrorNoParams<\"false schema\">\n  | AdditionalItemsError\n  | ItemsError\n  | ContainsError\n  | AdditionalPropertiesError\n  | DependenciesError\n  | IfKeywordError\n  | AnyOfError\n  | OneOfError\n  | NotKeywordError\n  | PropertyNamesError\n","import type {\n  AddedFormat,\n  FormatValidator,\n  AsyncFormatValidator,\n  CodeKeywordDefinition,\n  KeywordErrorDefinition,\n  ErrorObject,\n} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, str, nil, or, Code, getProperty, regexpCode} from \"../../compile/codegen\"\n\ntype FormatValidate =\n  | FormatValidator<string>\n  | FormatValidator<number>\n  | AsyncFormatValidator<string>\n  | AsyncFormatValidator<number>\n  | RegExp\n  | string\n  | true\n\nexport type FormatError = ErrorObject<\"format\", {format: string}, string | {$data: string}>\n\nconst error: KeywordErrorDefinition = {\n  message: ({schemaCode}) => str`must match format \"${schemaCode}\"`,\n  params: ({schemaCode}) => _`{format: ${schemaCode}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"format\",\n  type: [\"number\", \"string\"],\n  schemaType: \"string\",\n  $data: true,\n  error,\n  code(cxt: KeywordCxt, ruleType?: string) {\n    const {gen, data, $data, schema, schemaCode, it} = cxt\n    const {opts, errSchemaPath, schemaEnv, self} = it\n    if (!opts.validateFormats) return\n\n    if ($data) validate$DataFormat()\n    else validateFormat()\n\n    function validate$DataFormat(): void {\n      const fmts = gen.scopeValue(\"formats\", {\n        ref: self.formats,\n        code: opts.code.formats,\n      })\n      const fDef = gen.const(\"fDef\", _`${fmts}[${schemaCode}]`)\n      const fType = gen.let(\"fType\")\n      const format = gen.let(\"format\")\n      // TODO simplify\n      gen.if(\n        _`typeof ${fDef} == \"object\" && !(${fDef} instanceof RegExp)`,\n        () => gen.assign(fType, _`${fDef}.type || \"string\"`).assign(format, _`${fDef}.validate`),\n        () => gen.assign(fType, _`\"string\"`).assign(format, fDef)\n      )\n      cxt.fail$data(or(unknownFmt(), invalidFmt()))\n\n      function unknownFmt(): Code {\n        if (opts.strictSchema === false) return nil\n        return _`${schemaCode} && !${format}`\n      }\n\n      function invalidFmt(): Code {\n        const callFormat = schemaEnv.$async\n          ? _`(${fDef}.async ? await ${format}(${data}) : ${format}(${data}))`\n          : _`${format}(${data})`\n        const validData = _`(typeof ${format} == \"function\" ? ${callFormat} : ${format}.test(${data}))`\n        return _`${format} && ${format} !== true && ${fType} === ${ruleType} && !${validData}`\n      }\n    }\n\n    function validateFormat(): void {\n      const formatDef: AddedFormat | undefined = self.formats[schema]\n      if (!formatDef) {\n        unknownFormat()\n        return\n      }\n      if (formatDef === true) return\n      const [fmtType, format, fmtRef] = getFormat(formatDef)\n      if (fmtType === ruleType) cxt.pass(validCondition())\n\n      function unknownFormat(): void {\n        if (opts.strictSchema === false) {\n          self.logger.warn(unknownMsg())\n          return\n        }\n        throw new Error(unknownMsg())\n\n        function unknownMsg(): string {\n          return `unknown format \"${schema as string}\" ignored in schema at path \"${errSchemaPath}\"`\n        }\n      }\n\n      function getFormat(fmtDef: AddedFormat): [string, FormatValidate, Code] {\n        const code =\n          fmtDef instanceof RegExp\n            ? regexpCode(fmtDef)\n            : opts.code.formats\n            ? _`${opts.code.formats}${getProperty(schema)}`\n            : undefined\n        const fmt = gen.scopeValue(\"formats\", {key: schema, ref: fmtDef, code})\n        if (typeof fmtDef == \"object\" && !(fmtDef instanceof RegExp)) {\n          return [fmtDef.type || \"string\", fmtDef.validate, _`${fmt}.validate`]\n        }\n\n        return [\"string\", fmtDef, fmt]\n      }\n\n      function validCondition(): Code {\n        if (typeof formatDef == \"object\" && !(formatDef instanceof RegExp) && formatDef.async) {\n          if (!schemaEnv.$async) throw new Error(\"async format in sync schema\")\n          return _`await ${fmtRef}(${data})`\n        }\n        return typeof format == \"function\" ? _`${fmtRef}(${data})` : _`${fmtRef}.test(${data})`\n      }\n    }\n  },\n}\n\nexport default def\n","import type {Vocabulary} from \"../../types\"\nimport formatKeyword from \"./format\"\n\nconst format: Vocabulary = [formatKeyword]\n\nexport default format\n","import type {Vocabulary} from \"../types\"\n\nexport const metadataVocabulary: Vocabulary = [\n  \"title\",\n  \"description\",\n  \"default\",\n  \"deprecated\",\n  \"readOnly\",\n  \"writeOnly\",\n  \"examples\",\n]\n\nexport const contentVocabulary: Vocabulary = [\n  \"contentMediaType\",\n  \"contentEncoding\",\n  \"contentSchema\",\n]\n","import type {Vocabulary} from \"../types\"\nimport coreVocabulary from \"./core\"\nimport validationVocabulary from \"./validation\"\nimport getApplicatorVocabulary from \"./applicator\"\nimport formatVocabulary from \"./format\"\nimport {metadataVocabulary, contentVocabulary} from \"./metadata\"\n\nconst draft7Vocabularies: Vocabulary[] = [\n  coreVocabulary,\n  validationVocabulary,\n  getApplicatorVocabulary(),\n  formatVocabulary,\n  metadataVocabulary,\n  contentVocabulary,\n]\n\nexport default draft7Vocabularies\n","import type {ErrorObject} from \"../../types\"\n\nexport enum DiscrError {\n  Tag = \"tag\",\n  Mapping = \"mapping\",\n}\n\nexport type DiscrErrorObj<E extends DiscrError> = ErrorObject<\n  \"discriminator\",\n  {error: E; tag: string; tagValue: unknown},\n  string\n>\n","import type {CodeKeywordDefinition, AnySchemaObject, KeywordErrorDefinition} from \"../../types\"\nimport type {KeywordCxt} from \"../../compile/validate\"\nimport {_, getProperty, Name} from \"../../compile/codegen\"\nimport {DiscrError, DiscrErrorObj} from \"../discriminator/types\"\nimport {resolveRef, SchemaEnv} from \"../../compile\"\nimport {schemaHasRulesButRef} from \"../../compile/util\"\n\nexport type DiscriminatorError = DiscrErrorObj<DiscrError.Tag> | DiscrErrorObj<DiscrError.Mapping>\n\nconst error: KeywordErrorDefinition = {\n  message: ({params: {discrError, tagName}}) =>\n    discrError === DiscrError.Tag\n      ? `tag \"${tagName}\" must be string`\n      : `value of tag \"${tagName}\" must be in oneOf`,\n  params: ({params: {discrError, tag, tagName}}) =>\n    _`{error: ${discrError}, tag: ${tagName}, tagValue: ${tag}}`,\n}\n\nconst def: CodeKeywordDefinition = {\n  keyword: \"discriminator\",\n  type: \"object\",\n  schemaType: \"object\",\n  error,\n  code(cxt: KeywordCxt) {\n    const {gen, data, schema, parentSchema, it} = cxt\n    const {oneOf} = parentSchema\n    if (!it.opts.discriminator) {\n      throw new Error(\"discriminator: requires discriminator option\")\n    }\n    const tagName = schema.propertyName\n    if (typeof tagName != \"string\") throw new Error(\"discriminator: requires propertyName\")\n    if (schema.mapping) throw new Error(\"discriminator: mapping is not supported\")\n    if (!oneOf) throw new Error(\"discriminator: requires oneOf keyword\")\n    const valid = gen.let(\"valid\", false)\n    const tag = gen.const(\"tag\", _`${data}${getProperty(tagName)}`)\n    gen.if(\n      _`typeof ${tag} == \"string\"`,\n      () => validateMapping(),\n      () => cxt.error(false, {discrError: DiscrError.Tag, tag, tagName})\n    )\n    cxt.ok(valid)\n\n    function validateMapping(): void {\n      const mapping = getMapping()\n      gen.if(false)\n      for (const tagValue in mapping) {\n        gen.elseIf(_`${tag} === ${tagValue}`)\n        gen.assign(valid, applyTagSchema(mapping[tagValue]))\n      }\n      gen.else()\n      cxt.error(false, {discrError: DiscrError.Mapping, tag, tagName})\n      gen.endIf()\n    }\n\n    function applyTagSchema(schemaProp?: number): Name {\n      const _valid = gen.name(\"valid\")\n      const schCxt = cxt.subschema({keyword: \"oneOf\", schemaProp}, _valid)\n      cxt.mergeEvaluated(schCxt, Name)\n      return _valid\n    }\n\n    function getMapping(): {[T in string]?: number} {\n      const oneOfMapping: {[T in string]?: number} = {}\n      const topRequired = hasRequired(parentSchema)\n      let tagRequired = true\n      for (let i = 0; i < oneOf.length; i++) {\n        let sch = oneOf[i]\n        if (sch?.$ref && !schemaHasRulesButRef(sch, it.self.RULES)) {\n          sch = resolveRef.call(it.self, it.schemaEnv.root, it.baseId, sch?.$ref)\n          if (sch instanceof SchemaEnv) sch = sch.schema\n        }\n        const propSch = sch?.properties?.[tagName]\n        if (typeof propSch != \"object\") {\n          throw new Error(\n            `discriminator: oneOf subschemas (or referenced schemas) must have \"properties/${tagName}\"`\n          )\n        }\n        tagRequired = tagRequired && (topRequired || hasRequired(sch))\n        addMappings(propSch, i)\n      }\n      if (!tagRequired) throw new Error(`discriminator: \"${tagName}\" must be required`)\n      return oneOfMapping\n\n      function hasRequired({required}: AnySchemaObject): boolean {\n        return Array.isArray(required) && required.includes(tagName)\n      }\n\n      function addMappings(sch: AnySchemaObject, i: number): void {\n        if (sch.const) {\n          addMapping(sch.const, i)\n        } else if (sch.enum) {\n          for (const tagValue of sch.enum) {\n            addMapping(tagValue, i)\n          }\n        } else {\n          throw new Error(`discriminator: \"properties/${tagName}\" must have \"const\" or \"enum\"`)\n        }\n      }\n\n      function addMapping(tagValue: unknown, i: number): void {\n        if (typeof tagValue != \"string\" || tagValue in oneOfMapping) {\n          throw new Error(`discriminator: \"${tagName}\" values must be unique strings`)\n        }\n        oneOfMapping[tagValue] = i\n      }\n    }\n  },\n}\n\nexport default def\n","import type {AnySchemaObject} from \"./types\"\nimport AjvCore from \"./core\"\nimport draft7Vocabularies from \"./vocabularies/draft7\"\nimport discriminator from \"./vocabularies/discriminator\"\nimport * as draft7MetaSchema from \"./refs/json-schema-draft-07.json\"\n\nconst META_SUPPORT_DATA = [\"/properties\"]\n\nconst META_SCHEMA_ID = \"http://json-schema.org/draft-07/schema\"\n\nclass Ajv extends AjvCore {\n  _addVocabularies(): void {\n    super._addVocabularies()\n    draft7Vocabularies.forEach((v) => this.addVocabulary(v))\n    if (this.opts.discriminator) this.addKeyword(discriminator)\n  }\n\n  _addDefaultMetaSchema(): void {\n    super._addDefaultMetaSchema()\n    if (!this.opts.meta) return\n    const metaSchema = this.opts.$data\n      ? this.$dataMetaSchema(draft7MetaSchema, META_SUPPORT_DATA)\n      : draft7MetaSchema\n    this.addMetaSchema(metaSchema, META_SCHEMA_ID, false)\n    this.refs[\"http://json-schema.org/schema\"] = META_SCHEMA_ID\n  }\n\n  defaultMeta(): string | AnySchemaObject | undefined {\n    return (this.opts.defaultMeta =\n      super.defaultMeta() || (this.getSchema(META_SCHEMA_ID) ? META_SCHEMA_ID : undefined))\n  }\n}\n\nmodule.exports = exports = Ajv\nObject.defineProperty(exports, \"__esModule\", {value: true})\n\nexport default Ajv\n\nexport {\n  Format,\n  FormatDefinition,\n  AsyncFormatDefinition,\n  KeywordDefinition,\n  KeywordErrorDefinition,\n  CodeKeywordDefinition,\n  MacroKeywordDefinition,\n  FuncKeywordDefinition,\n  Vocabulary,\n  Schema,\n  SchemaObject,\n  AnySchemaObject,\n  AsyncSchema,\n  AnySchema,\n  ValidateFunction,\n  AsyncValidateFunction,\n  SchemaValidateFunction,\n  ErrorObject,\n  ErrorNoParams,\n} from \"./types\"\n\nexport {Plugin, Options, CodeOptions, InstanceOptions, Logger, ErrorsTextOptions} from \"./core\"\nexport {SchemaCxt, SchemaObjCxt} from \"./compile\"\nexport {KeywordCxt} from \"./compile/validate\"\nexport {DefinedError} from \"./vocabularies/errors\"\nexport {JSONType} from \"./compile/rules\"\nexport {JSONSchemaType} from \"./types/json-schema\"\nexport {_, str, stringify, nil, Name, Code, CodeGen, CodeGenOptions} from \"./compile/codegen\"\nexport {default as ValidationError} from \"./runtime/validation_error\"\nexport {default as MissingRefError} from \"./compile/ref_error\"\n","import { arbitrum, avalanche, bsc, ethereum, fantom, polygon } from \"./chains\";\nimport Ajv from \"ajv\"\nexport const ajv = new Ajv({allErrors: true})\n\nconst environment: string = process.env.NODE_ENV || \"development\";\nconst sdkLogUrl: string = environment === \"production\" ? \"https://api.multibase.co\" : \"http://localhost:8001\";\nconst chains = [ethereum, polygon, arbitrum, fantom, bsc, avalanche];\n\nexport const CONFIG = {\n    url: sdkLogUrl,\n    chains: chains,\n    name: \"PACKAGE_NAME\",\n    version: \"PACKAGE_VERSION\",\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","//! moment.js\n//! version : 2.29.4\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n;(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, (function () { 'use strict';\n\n    var hookCallback;\n\n    function hooks() {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback(callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return (\n            input instanceof Array ||\n            Object.prototype.toString.call(input) === '[object Array]'\n        );\n    }\n\n    function isObject(input) {\n        // IE8 will treat undefined and null as object if it wasn't for\n        // input != null\n        return (\n            input != null &&\n            Object.prototype.toString.call(input) === '[object Object]'\n        );\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function isObjectEmpty(obj) {\n        if (Object.getOwnPropertyNames) {\n            return Object.getOwnPropertyNames(obj).length === 0;\n        } else {\n            var k;\n            for (k in obj) {\n                if (hasOwnProp(obj, k)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }\n\n    function isUndefined(input) {\n        return input === void 0;\n    }\n\n    function isNumber(input) {\n        return (\n            typeof input === 'number' ||\n            Object.prototype.toString.call(input) === '[object Number]'\n        );\n    }\n\n    function isDate(input) {\n        return (\n            input instanceof Date ||\n            Object.prototype.toString.call(input) === '[object Date]'\n        );\n    }\n\n    function map(arr, fn) {\n        var res = [],\n            i,\n            arrLen = arr.length;\n        for (i = 0; i < arrLen; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function createUTC(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty: false,\n            unusedTokens: [],\n            unusedInput: [],\n            overflow: -2,\n            charsLeftOver: 0,\n            nullInput: false,\n            invalidEra: null,\n            invalidMonth: null,\n            invalidFormat: false,\n            userInvalidated: false,\n            iso: false,\n            parsedDateParts: [],\n            era: null,\n            meridiem: null,\n            rfc2822: false,\n            weekdayMismatch: false,\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    var some;\n    if (Array.prototype.some) {\n        some = Array.prototype.some;\n    } else {\n        some = function (fun) {\n            var t = Object(this),\n                len = t.length >>> 0,\n                i;\n\n            for (i = 0; i < len; i++) {\n                if (i in t && fun.call(this, t[i], i, t)) {\n                    return true;\n                }\n            }\n\n            return false;\n        };\n    }\n\n    function isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m),\n                parsedParts = some.call(flags.parsedDateParts, function (i) {\n                    return i != null;\n                }),\n                isNowValid =\n                    !isNaN(m._d.getTime()) &&\n                    flags.overflow < 0 &&\n                    !flags.empty &&\n                    !flags.invalidEra &&\n                    !flags.invalidMonth &&\n                    !flags.invalidWeekday &&\n                    !flags.weekdayMismatch &&\n                    !flags.nullInput &&\n                    !flags.invalidFormat &&\n                    !flags.userInvalidated &&\n                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n            if (m._strict) {\n                isNowValid =\n                    isNowValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n\n            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n                m._isValid = isNowValid;\n            } else {\n                return isNowValid;\n            }\n        }\n        return m._isValid;\n    }\n\n    function createInvalid(flags) {\n        var m = createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        } else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    // Plugins that add properties should also add the key here (null value),\n    // so we can properly clone ourselves.\n    var momentProperties = (hooks.momentProperties = []),\n        updateInProgress = false;\n\n    function copyConfig(to, from) {\n        var i,\n            prop,\n            val,\n            momentPropertiesLen = momentProperties.length;\n\n        if (!isUndefined(from._isAMomentObject)) {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (!isUndefined(from._i)) {\n            to._i = from._i;\n        }\n        if (!isUndefined(from._f)) {\n            to._f = from._f;\n        }\n        if (!isUndefined(from._l)) {\n            to._l = from._l;\n        }\n        if (!isUndefined(from._strict)) {\n            to._strict = from._strict;\n        }\n        if (!isUndefined(from._tzm)) {\n            to._tzm = from._tzm;\n        }\n        if (!isUndefined(from._isUTC)) {\n            to._isUTC = from._isUTC;\n        }\n        if (!isUndefined(from._offset)) {\n            to._offset = from._offset;\n        }\n        if (!isUndefined(from._pf)) {\n            to._pf = getParsingFlags(from);\n        }\n        if (!isUndefined(from._locale)) {\n            to._locale = from._locale;\n        }\n\n        if (momentPropertiesLen > 0) {\n            for (i = 0; i < momentPropertiesLen; i++) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (!isUndefined(val)) {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        if (!this.isValid()) {\n            this._d = new Date(NaN);\n        }\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment(obj) {\n        return (\n            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n        );\n    }\n\n    function warn(msg) {\n        if (\n            hooks.suppressDeprecationWarnings === false &&\n            typeof console !== 'undefined' &&\n            console.warn\n        ) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (hooks.deprecationHandler != null) {\n                hooks.deprecationHandler(null, msg);\n            }\n            if (firstTime) {\n                var args = [],\n                    arg,\n                    i,\n                    key,\n                    argLen = arguments.length;\n                for (i = 0; i < argLen; i++) {\n                    arg = '';\n                    if (typeof arguments[i] === 'object') {\n                        arg += '\\n[' + i + '] ';\n                        for (key in arguments[0]) {\n                            if (hasOwnProp(arguments[0], key)) {\n                                arg += key + ': ' + arguments[0][key] + ', ';\n                            }\n                        }\n                        arg = arg.slice(0, -2); // Remove trailing comma and space\n                    } else {\n                        arg = arguments[i];\n                    }\n                    args.push(arg);\n                }\n                warn(\n                    msg +\n                        '\\nArguments: ' +\n                        Array.prototype.slice.call(args).join('') +\n                        '\\n' +\n                        new Error().stack\n                );\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (hooks.deprecationHandler != null) {\n            hooks.deprecationHandler(name, msg);\n        }\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    hooks.suppressDeprecationWarnings = false;\n    hooks.deprecationHandler = null;\n\n    function isFunction(input) {\n        return (\n            (typeof Function !== 'undefined' && input instanceof Function) ||\n            Object.prototype.toString.call(input) === '[object Function]'\n        );\n    }\n\n    function set(config) {\n        var prop, i;\n        for (i in config) {\n            if (hasOwnProp(config, i)) {\n                prop = config[i];\n                if (isFunction(prop)) {\n                    this[i] = prop;\n                } else {\n                    this['_' + i] = prop;\n                }\n            }\n        }\n        this._config = config;\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        this._dayOfMonthOrdinalParseLenient = new RegExp(\n            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n                '|' +\n                /\\d{1,2}/.source\n        );\n    }\n\n    function mergeConfigs(parentConfig, childConfig) {\n        var res = extend({}, parentConfig),\n            prop;\n        for (prop in childConfig) {\n            if (hasOwnProp(childConfig, prop)) {\n                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n                    res[prop] = {};\n                    extend(res[prop], parentConfig[prop]);\n                    extend(res[prop], childConfig[prop]);\n                } else if (childConfig[prop] != null) {\n                    res[prop] = childConfig[prop];\n                } else {\n                    delete res[prop];\n                }\n            }\n        }\n        for (prop in parentConfig) {\n            if (\n                hasOwnProp(parentConfig, prop) &&\n                !hasOwnProp(childConfig, prop) &&\n                isObject(parentConfig[prop])\n            ) {\n                // make sure changes to properties don't modify parent config\n                res[prop] = extend({}, res[prop]);\n            }\n        }\n        return res;\n    }\n\n    function Locale(config) {\n        if (config != null) {\n            this.set(config);\n        }\n    }\n\n    var keys;\n\n    if (Object.keys) {\n        keys = Object.keys;\n    } else {\n        keys = function (obj) {\n            var i,\n                res = [];\n            for (i in obj) {\n                if (hasOwnProp(obj, i)) {\n                    res.push(i);\n                }\n            }\n            return res;\n        };\n    }\n\n    var defaultCalendar = {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L',\n    };\n\n    function calendar(key, mom, now) {\n        var output = this._calendar[key] || this._calendar['sameElse'];\n        return isFunction(output) ? output.call(mom, now) : output;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (\n            (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n            absNumber\n        );\n    }\n\n    var formattingTokens =\n            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n        formatFunctions = {},\n        formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken(token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(\n                    func.apply(this, arguments),\n                    token\n                );\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens),\n            i,\n            length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '',\n                i;\n            for (i = 0; i < length; i++) {\n                output += isFunction(array[i])\n                    ? array[i].call(mom, format)\n                    : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] =\n            formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(\n                localFormattingTokens,\n                replaceLongDateFormatTokens\n            );\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var defaultLongDateFormat = {\n        LTS: 'h:mm:ss A',\n        LT: 'h:mm A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM D, YYYY',\n        LLL: 'MMMM D, YYYY h:mm A',\n        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n    };\n\n    function longDateFormat(key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper\n            .match(formattingTokens)\n            .map(function (tok) {\n                if (\n                    tok === 'MMMM' ||\n                    tok === 'MM' ||\n                    tok === 'DD' ||\n                    tok === 'dddd'\n                ) {\n                    return tok.slice(1);\n                }\n                return tok;\n            })\n            .join('');\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate() {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d',\n        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n    function ordinal(number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    var defaultRelativeTime = {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        w: 'a week',\n        ww: '%d weeks',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years',\n    };\n\n    function relativeTime(number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return isFunction(output)\n            ? output(number, withoutSuffix, string, isFuture)\n            : output.replace(/%d/i, number);\n    }\n\n    function pastFuture(diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias(unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string'\n            ? aliases[units] || aliases[units.toLowerCase()]\n            : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    var priorities = {};\n\n    function addUnitPriority(unit, priority) {\n        priorities[unit] = priority;\n    }\n\n    function getPrioritizedUnits(unitsObj) {\n        var units = [],\n            u;\n        for (u in unitsObj) {\n            if (hasOwnProp(unitsObj, u)) {\n                units.push({ unit: u, priority: priorities[u] });\n            }\n        }\n        units.sort(function (a, b) {\n            return a.priority - b.priority;\n        });\n        return units;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    function absFloor(number) {\n        if (number < 0) {\n            // -0 -> 0\n            return Math.ceil(number) || 0;\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function makeGetSet(unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                set$1(this, unit, value);\n                hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get(this, unit);\n            }\n        };\n    }\n\n    function get(mom, unit) {\n        return mom.isValid()\n            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n            : NaN;\n    }\n\n    function set$1(mom, unit, value) {\n        if (mom.isValid() && !isNaN(value)) {\n            if (\n                unit === 'FullYear' &&\n                isLeapYear(mom.year()) &&\n                mom.month() === 1 &&\n                mom.date() === 29\n            ) {\n                value = toInt(value);\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n                    value,\n                    mom.month(),\n                    daysInMonth(value, mom.month())\n                );\n            } else {\n                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function stringGet(units) {\n        units = normalizeUnits(units);\n        if (isFunction(this[units])) {\n            return this[units]();\n        }\n        return this;\n    }\n\n    function stringSet(units, value) {\n        if (typeof units === 'object') {\n            units = normalizeObjectUnits(units);\n            var prioritized = getPrioritizedUnits(units),\n                i,\n                prioritizedLen = prioritized.length;\n            for (i = 0; i < prioritizedLen; i++) {\n                this[prioritized[i].unit](units[prioritized[i].unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (isFunction(this[units])) {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    var match1 = /\\d/, //       0 - 9\n        match2 = /\\d\\d/, //      00 - 99\n        match3 = /\\d{3}/, //     000 - 999\n        match4 = /\\d{4}/, //    0000 - 9999\n        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n        match1to2 = /\\d\\d?/, //       0 - 99\n        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n        match1to3 = /\\d{1,3}/, //       0 - 999\n        match1to4 = /\\d{1,4}/, //       0 - 9999\n        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n        matchUnsigned = /\\d+/, //       0 - inf\n        matchSigned = /[+-]?\\d+/, //    -inf - inf\n        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n        // any word (or two) characters or numbers including two/three word month in arabic.\n        // includes scottish gaelic two word and hyphenated months\n        matchWord =\n            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n        regexes;\n\n    regexes = {};\n\n    function addRegexToken(token, regex, strictRegex) {\n        regexes[token] = isFunction(regex)\n            ? regex\n            : function (isStrict, localeData) {\n                  return isStrict && strictRegex ? strictRegex : regex;\n              };\n    }\n\n    function getParseRegexForToken(token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return regexEscape(\n            s\n                .replace('\\\\', '')\n                .replace(\n                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n                    function (matched, p1, p2, p3, p4) {\n                        return p1 || p2 || p3 || p4;\n                    }\n                )\n        );\n    }\n\n    function regexEscape(s) {\n        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken(token, callback) {\n        var i,\n            func = callback,\n            tokenLen;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (isNumber(callback)) {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        tokenLen = token.length;\n        for (i = 0; i < tokenLen; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken(token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n        WEEK = 7,\n        WEEKDAY = 8;\n\n    function mod(n, x) {\n        return ((n % x) + x) % x;\n    }\n\n    var indexOf;\n\n    if (Array.prototype.indexOf) {\n        indexOf = Array.prototype.indexOf;\n    } else {\n        indexOf = function (o) {\n            // I know\n            var i;\n            for (i = 0; i < this.length; ++i) {\n                if (this[i] === o) {\n                    return i;\n                }\n            }\n            return -1;\n        };\n    }\n\n    function daysInMonth(year, month) {\n        if (isNaN(year) || isNaN(month)) {\n            return NaN;\n        }\n        var modMonth = mod(month, 12);\n        year += (month - modMonth) / 12;\n        return modMonth === 1\n            ? isLeapYear(year)\n                ? 29\n                : 28\n            : 31 - ((modMonth % 7) % 2);\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PRIORITY\n\n    addUnitPriority('month', 8);\n\n    // PARSING\n\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    });\n    addRegexToken('MMMM', function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    });\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths =\n            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n                '_'\n            ),\n        defaultLocaleMonthsShort =\n            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n        defaultMonthsShortRegex = matchWord,\n        defaultMonthsRegex = matchWord;\n\n    function localeMonths(m, format) {\n        if (!m) {\n            return isArray(this._months)\n                ? this._months\n                : this._months['standalone'];\n        }\n        return isArray(this._months)\n            ? this._months[m.month()]\n            : this._months[\n                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n                      ? 'format'\n                      : 'standalone'\n              ][m.month()];\n    }\n\n    function localeMonthsShort(m, format) {\n        if (!m) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort['standalone'];\n        }\n        return isArray(this._monthsShort)\n            ? this._monthsShort[m.month()]\n            : this._monthsShort[\n                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n              ][m.month()];\n    }\n\n    function handleStrictParse(monthName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = monthName.toLocaleLowerCase();\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = createUTC([2000, i]);\n                this._shortMonthsParse[i] = this.monthsShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'MMM') {\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._longMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._longMonthsParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortMonthsParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeMonthsParse(monthName, format, strict) {\n        var i, mom, regex;\n\n        if (this._monthsParseExact) {\n            return handleStrictParse.call(this, monthName, format, strict);\n        }\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp(\n                    '^' + this.months(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n                this._shortMonthsParse[i] = new RegExp(\n                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n                    'i'\n                );\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex =\n                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'MMMM' &&\n                this._longMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'MMM' &&\n                this._shortMonthsParse[i].test(monthName)\n            ) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth(mom, value) {\n        var dayOfMonth;\n\n        if (!mom.isValid()) {\n            // No op\n            return mom;\n        }\n\n        if (typeof value === 'string') {\n            if (/^\\d+$/.test(value)) {\n                value = toInt(value);\n            } else {\n                value = mom.localeData().monthsParse(value);\n                // TODO: Another silent failure?\n                if (!isNumber(value)) {\n                    return mom;\n                }\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth(value) {\n        if (value != null) {\n            setMonth(this, value);\n            hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth() {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            } else {\n                return this._monthsShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsShortRegex')) {\n                this._monthsShortRegex = defaultMonthsShortRegex;\n            }\n            return this._monthsShortStrictRegex && isStrict\n                ? this._monthsShortStrictRegex\n                : this._monthsShortRegex;\n        }\n    }\n\n    function monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                computeMonthsParse.call(this);\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            } else {\n                return this._monthsRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this._monthsRegex = defaultMonthsRegex;\n            }\n            return this._monthsStrictRegex && isStrict\n                ? this._monthsStrictRegex\n                : this._monthsRegex;\n        }\n    }\n\n    function computeMonthsParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, i]);\n            shortPieces.push(this.monthsShort(mom, ''));\n            longPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.months(mom, ''));\n            mixedPieces.push(this.monthsShort(mom, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n\n        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._monthsShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken('Y', 0, 0, function () {\n        var y = this.year();\n        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n    });\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY', 4], 0, 'year');\n    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PRIORITIES\n\n    addUnitPriority('year', 1);\n\n    // PARSING\n\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] =\n            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = hooks.parseTwoDigitYear(input);\n    });\n    addParseToken('Y', function (input, array) {\n        array[YEAR] = parseInt(input, 10);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    // HOOKS\n\n    hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', true);\n\n    function getIsLeapYear() {\n        return isLeapYear(this.year());\n    }\n\n    function createDate(y, m, d, h, M, s, ms) {\n        // can't just apply() to create a date:\n        // https://stackoverflow.com/q/181348\n        var date;\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            date = new Date(y + 400, m, d, h, M, s, ms);\n            if (isFinite(date.getFullYear())) {\n                date.setFullYear(y);\n            }\n        } else {\n            date = new Date(y, m, d, h, M, s, ms);\n        }\n\n        return date;\n    }\n\n    function createUTCDate(y) {\n        var date, args;\n        // the Date.UTC function remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            args = Array.prototype.slice.call(arguments);\n            // preserve leap years using a full 400 year cycle, then reset\n            args[0] = y + 400;\n            date = new Date(Date.UTC.apply(null, args));\n            if (isFinite(date.getUTCFullYear())) {\n                date.setUTCFullYear(y);\n            }\n        } else {\n            date = new Date(Date.UTC.apply(null, arguments));\n        }\n\n        return date;\n    }\n\n    // start-of-first-week - start-of-year\n    function firstWeekOffset(year, dow, doy) {\n        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n            fwd = 7 + dow - doy,\n            // first-week day local weekday -- which local weekday is fwd\n            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n        return -fwdlw + fwd - 1;\n    }\n\n    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n        var localWeekday = (7 + weekday - dow) % 7,\n            weekOffset = firstWeekOffset(year, dow, doy),\n            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n            resYear,\n            resDayOfYear;\n\n        if (dayOfYear <= 0) {\n            resYear = year - 1;\n            resDayOfYear = daysInYear(resYear) + dayOfYear;\n        } else if (dayOfYear > daysInYear(year)) {\n            resYear = year + 1;\n            resDayOfYear = dayOfYear - daysInYear(year);\n        } else {\n            resYear = year;\n            resDayOfYear = dayOfYear;\n        }\n\n        return {\n            year: resYear,\n            dayOfYear: resDayOfYear,\n        };\n    }\n\n    function weekOfYear(mom, dow, doy) {\n        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n            resWeek,\n            resYear;\n\n        if (week < 1) {\n            resYear = mom.year() - 1;\n            resWeek = week + weeksInYear(resYear, dow, doy);\n        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n            resWeek = week - weeksInYear(mom.year(), dow, doy);\n            resYear = mom.year() + 1;\n        } else {\n            resYear = mom.year();\n            resWeek = week;\n        }\n\n        return {\n            week: resWeek,\n            year: resYear,\n        };\n    }\n\n    function weeksInYear(year, dow, doy) {\n        var weekOffset = firstWeekOffset(year, dow, doy),\n            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n    }\n\n    // FORMATTING\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PRIORITIES\n\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n\n    // PARSING\n\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(\n        ['w', 'ww', 'W', 'WW'],\n        function (input, week, config, token) {\n            week[token.substr(0, 1)] = toInt(input);\n        }\n    );\n\n    // HELPERS\n\n    // LOCALES\n\n    function localeWeek(mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow: 0, // Sunday is the first day of the week.\n        doy: 6, // The week that contains Jan 6th is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek() {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear() {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek(input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek(input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n\n    // PARSING\n\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    });\n    addRegexToken('ddd', function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    });\n    addRegexToken('dddd', function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    });\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    function parseIsoWeekday(input, locale) {\n        if (typeof input === 'string') {\n            return locale.weekdaysParse(input) % 7 || 7;\n        }\n        return isNaN(input) ? null : input;\n    }\n\n    // LOCALES\n    function shiftWeekdays(ws, n) {\n        return ws.slice(n, 7).concat(ws.slice(0, n));\n    }\n\n    var defaultLocaleWeekdays =\n            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n        defaultWeekdaysRegex = matchWord,\n        defaultWeekdaysShortRegex = matchWord,\n        defaultWeekdaysMinRegex = matchWord;\n\n    function localeWeekdays(m, format) {\n        var weekdays = isArray(this._weekdays)\n            ? this._weekdays\n            : this._weekdays[\n                  m && m !== true && this._weekdays.isFormat.test(format)\n                      ? 'format'\n                      : 'standalone'\n              ];\n        return m === true\n            ? shiftWeekdays(weekdays, this._week.dow)\n            : m\n            ? weekdays[m.day()]\n            : weekdays;\n    }\n\n    function localeWeekdaysShort(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n            : m\n            ? this._weekdaysShort[m.day()]\n            : this._weekdaysShort;\n    }\n\n    function localeWeekdaysMin(m) {\n        return m === true\n            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n            : m\n            ? this._weekdaysMin[m.day()]\n            : this._weekdaysMin;\n    }\n\n    function handleStrictParse$1(weekdayName, format, strict) {\n        var i,\n            ii,\n            mom,\n            llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n\n            for (i = 0; i < 7; ++i) {\n                mom = createUTC([2000, 1]).day(i);\n                this._minWeekdaysParse[i] = this.weekdaysMin(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(\n                    mom,\n                    ''\n                ).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n            }\n        }\n\n        if (strict) {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        } else {\n            if (format === 'dddd') {\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else if (format === 'ddd') {\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            } else {\n                ii = indexOf.call(this._minWeekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._weekdaysParse, llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = indexOf.call(this._shortWeekdaysParse, llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n\n    function localeWeekdaysParse(weekdayName, format, strict) {\n        var i, mom, regex;\n\n        if (this._weekdaysParseExact) {\n            return handleStrictParse$1.call(this, weekdayName, format, strict);\n        }\n\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n\n            mom = createUTC([2000, 1]).day(i);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._shortWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n                this._minWeekdaysParse[i] = new RegExp(\n                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n                    'i'\n                );\n            }\n            if (!this._weekdaysParse[i]) {\n                regex =\n                    '^' +\n                    this.weekdays(mom, '') +\n                    '|^' +\n                    this.weekdaysShort(mom, '') +\n                    '|^' +\n                    this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (\n                strict &&\n                format === 'dddd' &&\n                this._fullWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'ddd' &&\n                this._shortWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (\n                strict &&\n                format === 'dd' &&\n                this._minWeekdaysParse[i].test(weekdayName)\n            ) {\n                return i;\n            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek(input) {\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n\n        if (input != null) {\n            var weekday = parseIsoWeekday(input, this.localeData());\n            return this.day(this.day() % 7 ? weekday : weekday - 7);\n        } else {\n            return this.day() || 7;\n        }\n    }\n\n    function weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            } else {\n                return this._weekdaysRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = defaultWeekdaysRegex;\n            }\n            return this._weekdaysStrictRegex && isStrict\n                ? this._weekdaysStrictRegex\n                : this._weekdaysRegex;\n        }\n    }\n\n    function weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            } else {\n                return this._weekdaysShortRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n            }\n            return this._weekdaysShortStrictRegex && isStrict\n                ? this._weekdaysShortStrictRegex\n                : this._weekdaysShortRegex;\n        }\n    }\n\n    function weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                computeWeekdaysParse.call(this);\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            } else {\n                return this._weekdaysMinRegex;\n            }\n        } else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n            }\n            return this._weekdaysMinStrictRegex && isStrict\n                ? this._weekdaysMinStrictRegex\n                : this._weekdaysMinRegex;\n        }\n    }\n\n    function computeWeekdaysParse() {\n        function cmpLenRev(a, b) {\n            return b.length - a.length;\n        }\n\n        var minPieces = [],\n            shortPieces = [],\n            longPieces = [],\n            mixedPieces = [],\n            i,\n            mom,\n            minp,\n            shortp,\n            longp;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            mom = createUTC([2000, 1]).day(i);\n            minp = regexEscape(this.weekdaysMin(mom, ''));\n            shortp = regexEscape(this.weekdaysShort(mom, ''));\n            longp = regexEscape(this.weekdays(mom, ''));\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n\n        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n\n        this._weekdaysStrictRegex = new RegExp(\n            '^(' + longPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysShortStrictRegex = new RegExp(\n            '^(' + shortPieces.join('|') + ')',\n            'i'\n        );\n        this._weekdaysMinStrictRegex = new RegExp(\n            '^(' + minPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    function hFormat() {\n        return this.hours() % 12 || 12;\n    }\n\n    function kFormat() {\n        return this.hours() || 24;\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, hFormat);\n    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n    addFormatToken('hmm', 0, 0, function () {\n        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('hmmss', 0, 0, function () {\n        return (\n            '' +\n            hFormat.apply(this) +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    addFormatToken('Hmm', 0, 0, function () {\n        return '' + this.hours() + zeroFill(this.minutes(), 2);\n    });\n\n    addFormatToken('Hmmss', 0, 0, function () {\n        return (\n            '' +\n            this.hours() +\n            zeroFill(this.minutes(), 2) +\n            zeroFill(this.seconds(), 2)\n        );\n    });\n\n    function meridiem(token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(\n                this.hours(),\n                this.minutes(),\n                lowercase\n            );\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PRIORITY\n    addUnitPriority('hour', 13);\n\n    // PARSING\n\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], function (input, array, config) {\n        var kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n    });\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n    });\n    addParseToken('Hmm', function (input, array, config) {\n        var pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n    });\n    addParseToken('Hmmss', function (input, array, config) {\n        var pos1 = input.length - 4,\n            pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n    });\n\n    // LOCALES\n\n    function localeIsPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return (input + '').toLowerCase().charAt(0) === 'p';\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n        // Setting the hour should keep the time, because the user explicitly\n        // specified which hour they want. So trying to maintain the same hour (in\n        // a new timezone) makes sense. Adding/subtracting hours does not follow\n        // this rule.\n        getSetHour = makeGetSet('Hours', true);\n\n    function localeMeridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n    var baseConfig = {\n        calendar: defaultCalendar,\n        longDateFormat: defaultLongDateFormat,\n        invalidDate: defaultInvalidDate,\n        ordinal: defaultOrdinal,\n        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n        relativeTime: defaultRelativeTime,\n\n        months: defaultLocaleMonths,\n        monthsShort: defaultLocaleMonthsShort,\n\n        week: defaultLocaleWeek,\n\n        weekdays: defaultLocaleWeekdays,\n        weekdaysMin: defaultLocaleWeekdaysMin,\n        weekdaysShort: defaultLocaleWeekdaysShort,\n\n        meridiemParse: defaultLocaleMeridiemParse,\n    };\n\n    // internal storage for locale config files\n    var locales = {},\n        localeFamilies = {},\n        globalLocale;\n\n    function commonPrefix(arr1, arr2) {\n        var i,\n            minl = Math.min(arr1.length, arr2.length);\n        for (i = 0; i < minl; i += 1) {\n            if (arr1[i] !== arr2[i]) {\n                return i;\n            }\n        }\n        return minl;\n    }\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0,\n            j,\n            next,\n            locale,\n            split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (\n                    next &&\n                    next.length >= j &&\n                    commonPrefix(split, next) >= j - 1\n                ) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return globalLocale;\n    }\n\n    function isLocaleNameSane(name) {\n        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n        return name.match('^[^/\\\\\\\\]*$') != null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null,\n            aliasedRequire;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (\n            locales[name] === undefined &&\n            typeof module !== 'undefined' &&\n            module &&\n            module.exports &&\n            isLocaleNameSane(name)\n        ) {\n            try {\n                oldLocale = globalLocale._abbr;\n                aliasedRequire = require;\n                aliasedRequire('./locale/' + name);\n                getSetGlobalLocale(oldLocale);\n            } catch (e) {\n                // mark as not found to avoid repeating expensive file require call causing high CPU\n                // when trying to find en-US, en_US, en-us for every format call\n                locales[name] = null; // null means not found\n            }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function getSetGlobalLocale(key, values) {\n        var data;\n        if (key) {\n            if (isUndefined(values)) {\n                data = getLocale(key);\n            } else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            } else {\n                if (typeof console !== 'undefined' && console.warn) {\n                    //warn user if arguments are passed but the locale could not be set\n                    console.warn(\n                        'Locale ' + key + ' not found. Did you forget to load it?'\n                    );\n                }\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale(name, config) {\n        if (config !== null) {\n            var locale,\n                parentConfig = baseConfig;\n            config.abbr = name;\n            if (locales[name] != null) {\n                deprecateSimple(\n                    'defineLocaleOverride',\n                    'use moment.updateLocale(localeName, config) to change ' +\n                        'an existing locale. moment.defineLocale(localeName, ' +\n                        'config) should only be used for creating a new locale ' +\n                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n                );\n                parentConfig = locales[name]._config;\n            } else if (config.parentLocale != null) {\n                if (locales[config.parentLocale] != null) {\n                    parentConfig = locales[config.parentLocale]._config;\n                } else {\n                    locale = loadLocale(config.parentLocale);\n                    if (locale != null) {\n                        parentConfig = locale._config;\n                    } else {\n                        if (!localeFamilies[config.parentLocale]) {\n                            localeFamilies[config.parentLocale] = [];\n                        }\n                        localeFamilies[config.parentLocale].push({\n                            name: name,\n                            config: config,\n                        });\n                        return null;\n                    }\n                }\n            }\n            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n            if (localeFamilies[name]) {\n                localeFamilies[name].forEach(function (x) {\n                    defineLocale(x.name, x.config);\n                });\n            }\n\n            // backwards compat for now: also set the locale\n            // make sure we set the locale AFTER all child locales have been\n            // created, so we won't end up with the child locale set.\n            getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    function updateLocale(name, config) {\n        if (config != null) {\n            var locale,\n                tmpLocale,\n                parentConfig = baseConfig;\n\n            if (locales[name] != null && locales[name].parentLocale != null) {\n                // Update existing child locale in-place to avoid memory-leaks\n                locales[name].set(mergeConfigs(locales[name]._config, config));\n            } else {\n                // MERGE\n                tmpLocale = loadLocale(name);\n                if (tmpLocale != null) {\n                    parentConfig = tmpLocale._config;\n                }\n                config = mergeConfigs(parentConfig, config);\n                if (tmpLocale == null) {\n                    // updateLocale is called for creating a new locale\n                    // Set abbr so it will have a name (getters return\n                    // undefined otherwise).\n                    config.abbr = name;\n                }\n                locale = new Locale(config);\n                locale.parentLocale = locales[name];\n                locales[name] = locale;\n            }\n\n            // backwards compat for now: also set the locale\n            getSetGlobalLocale(name);\n        } else {\n            // pass null for config to unupdate, useful for tests\n            if (locales[name] != null) {\n                if (locales[name].parentLocale != null) {\n                    locales[name] = locales[name].parentLocale;\n                    if (name === getSetGlobalLocale()) {\n                        getSetGlobalLocale(name);\n                    }\n                } else if (locales[name] != null) {\n                    delete locales[name];\n                }\n            }\n        }\n        return locales[name];\n    }\n\n    // returns locale data\n    function getLocale(key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    function listLocales() {\n        return keys(locales);\n    }\n\n    function checkOverflow(m) {\n        var overflow,\n            a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH] < 0 || a[MONTH] > 11\n                    ? MONTH\n                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n                    ? DATE\n                    : a[HOUR] < 0 ||\n                      a[HOUR] > 24 ||\n                      (a[HOUR] === 24 &&\n                          (a[MINUTE] !== 0 ||\n                              a[SECOND] !== 0 ||\n                              a[MILLISECOND] !== 0))\n                    ? HOUR\n                    : a[MINUTE] < 0 || a[MINUTE] > 59\n                    ? MINUTE\n                    : a[SECOND] < 0 || a[SECOND] > 59\n                    ? SECOND\n                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n                    ? MILLISECOND\n                    : -1;\n\n            if (\n                getParsingFlags(m)._overflowDayOfYear &&\n                (overflow < YEAR || overflow > DATE)\n            ) {\n                overflow = DATE;\n            }\n            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n                overflow = WEEK;\n            }\n            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n                overflow = WEEKDAY;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    // iso 8601 regex\n    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n    var extendedIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        basicIsoRegex =\n            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n        isoDates = [\n            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n            ['YYYYYYMMDD', /[+-]\\d{10}/],\n            ['YYYYMMDD', /\\d{8}/],\n            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n            ['YYYYDDD', /\\d{7}/],\n            ['YYYYMM', /\\d{6}/, false],\n            ['YYYY', /\\d{4}/, false],\n        ],\n        // iso time formats and regexes\n        isoTimes = [\n            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n            ['HH:mm', /\\d\\d:\\d\\d/],\n            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n            ['HHmm', /\\d\\d\\d\\d/],\n            ['HH', /\\d\\d/],\n        ],\n        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n        rfc2822 =\n            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n        obsOffsets = {\n            UT: 0,\n            GMT: 0,\n            EDT: -4 * 60,\n            EST: -5 * 60,\n            CDT: -5 * 60,\n            CST: -6 * 60,\n            MDT: -6 * 60,\n            MST: -7 * 60,\n            PDT: -7 * 60,\n            PST: -8 * 60,\n        };\n\n    // date from iso format\n    function configFromISO(config) {\n        var i,\n            l,\n            string = config._i,\n            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n            allowTime,\n            dateFormat,\n            timeFormat,\n            tzFormat,\n            isoDatesLen = isoDates.length,\n            isoTimesLen = isoTimes.length;\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDatesLen; i < l; i++) {\n                if (isoDates[i][1].exec(match[1])) {\n                    dateFormat = isoDates[i][0];\n                    allowTime = isoDates[i][2] !== false;\n                    break;\n                }\n            }\n            if (dateFormat == null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[3]) {\n                for (i = 0, l = isoTimesLen; i < l; i++) {\n                    if (isoTimes[i][1].exec(match[3])) {\n                        // match[2] should be 'T' or space\n                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                        break;\n                    }\n                }\n                if (timeFormat == null) {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            if (!allowTime && timeFormat != null) {\n                config._isValid = false;\n                return;\n            }\n            if (match[4]) {\n                if (tzRegex.exec(match[4])) {\n                    tzFormat = 'Z';\n                } else {\n                    config._isValid = false;\n                    return;\n                }\n            }\n            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    function extractFromRFC2822Strings(\n        yearStr,\n        monthStr,\n        dayStr,\n        hourStr,\n        minuteStr,\n        secondStr\n    ) {\n        var result = [\n            untruncateYear(yearStr),\n            defaultLocaleMonthsShort.indexOf(monthStr),\n            parseInt(dayStr, 10),\n            parseInt(hourStr, 10),\n            parseInt(minuteStr, 10),\n        ];\n\n        if (secondStr) {\n            result.push(parseInt(secondStr, 10));\n        }\n\n        return result;\n    }\n\n    function untruncateYear(yearStr) {\n        var year = parseInt(yearStr, 10);\n        if (year <= 49) {\n            return 2000 + year;\n        } else if (year <= 999) {\n            return 1900 + year;\n        }\n        return year;\n    }\n\n    function preprocessRFC2822(s) {\n        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n        return s\n            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n            .replace(/(\\s\\s+)/g, ' ')\n            .replace(/^\\s\\s*/, '')\n            .replace(/\\s\\s*$/, '');\n    }\n\n    function checkWeekday(weekdayStr, parsedInput, config) {\n        if (weekdayStr) {\n            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n                weekdayActual = new Date(\n                    parsedInput[0],\n                    parsedInput[1],\n                    parsedInput[2]\n                ).getDay();\n            if (weekdayProvided !== weekdayActual) {\n                getParsingFlags(config).weekdayMismatch = true;\n                config._isValid = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n        if (obsOffset) {\n            return obsOffsets[obsOffset];\n        } else if (militaryOffset) {\n            // the only allowed military tz is Z\n            return 0;\n        } else {\n            var hm = parseInt(numOffset, 10),\n                m = hm % 100,\n                h = (hm - m) / 100;\n            return h * 60 + m;\n        }\n    }\n\n    // date and time from ref 2822 format\n    function configFromRFC2822(config) {\n        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n            parsedArray;\n        if (match) {\n            parsedArray = extractFromRFC2822Strings(\n                match[4],\n                match[3],\n                match[2],\n                match[5],\n                match[6],\n                match[7]\n            );\n            if (!checkWeekday(match[1], parsedArray, config)) {\n                return;\n            }\n\n            config._a = parsedArray;\n            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n            config._d = createUTCDate.apply(null, config._a);\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n            getParsingFlags(config).rfc2822 = true;\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        configFromRFC2822(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n        } else {\n            return;\n        }\n\n        if (config._strict) {\n            config._isValid = false;\n        } else {\n            // Final attempt, use Input Fallback\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    hooks.createFromInputFallback = deprecate(\n        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        // hooks is actually the exported moment object\n        var nowValue = new Date(hooks.now());\n        if (config._useUTC) {\n            return [\n                nowValue.getUTCFullYear(),\n                nowValue.getUTCMonth(),\n                nowValue.getUTCDate(),\n            ];\n        }\n        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray(config) {\n        var i,\n            date,\n            input = [],\n            currentDate,\n            expectedWeekday,\n            yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear != null) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (\n                config._dayOfYear > daysInYear(yearToUse) ||\n                config._dayOfYear === 0\n            ) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] =\n                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (\n            config._a[HOUR] === 24 &&\n            config._a[MINUTE] === 0 &&\n            config._a[SECOND] === 0 &&\n            config._a[MILLISECOND] === 0\n        ) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n            null,\n            input\n        );\n        expectedWeekday = config._useUTC\n            ? config._d.getUTCDay()\n            : config._d.getDay();\n\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n\n        // check for mismatching day of week\n        if (\n            config._w &&\n            typeof config._w.d !== 'undefined' &&\n            config._w.d !== expectedWeekday\n        ) {\n            getParsingFlags(config).weekdayMismatch = true;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(\n                w.GG,\n                config._a[YEAR],\n                weekOfYear(createLocal(), 1, 4).year\n            );\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n            if (weekday < 1 || weekday > 7) {\n                weekdayOverflow = true;\n            }\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            curWeek = weekOfYear(createLocal(), dow, doy);\n\n            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n            // Default to current week.\n            week = defaults(w.w, curWeek.week);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < 0 || weekday > 6) {\n                    weekdayOverflow = true;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from beginning of week\n                weekday = w.e + dow;\n                if (w.e < 0 || w.e > 6) {\n                    weekdayOverflow = true;\n                }\n            } else {\n                // default to beginning of week\n                weekday = dow;\n            }\n        }\n        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n            getParsingFlags(config)._overflowWeeks = true;\n        } else if (weekdayOverflow != null) {\n            getParsingFlags(config)._overflowWeekday = true;\n        } else {\n            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n            config._a[YEAR] = temp.year;\n            config._dayOfYear = temp.dayOfYear;\n        }\n    }\n\n    // constant that refers to the ISO standard\n    hooks.ISO_8601 = function () {};\n\n    // constant that refers to the RFC 2822 form\n    hooks.RFC_2822 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n        if (config._f === hooks.RFC_2822) {\n            configFromRFC2822(config);\n            return;\n        }\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i,\n            parsedInput,\n            tokens,\n            token,\n            skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0,\n            era,\n            tokenLen;\n\n        tokens =\n            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n        tokenLen = tokens.length;\n        for (i = 0; i < tokenLen; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n                [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(\n                    string.indexOf(parsedInput) + parsedInput.length\n                );\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                } else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            } else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver =\n            stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (\n            config._a[HOUR] <= 12 &&\n            getParsingFlags(config).bigHour === true &&\n            config._a[HOUR] > 0\n        ) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n\n        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n        getParsingFlags(config).meridiem = config._meridiem;\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(\n            config._locale,\n            config._a[HOUR],\n            config._meridiem\n        );\n\n        // handle era\n        era = getParsingFlags(config).era;\n        if (era !== null) {\n            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n        }\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n    function meridiemFixWrap(locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    // date from string and array of format strings\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n            scoreToBeat,\n            i,\n            currentScore,\n            validFormatFound,\n            bestFormatIsValid = false,\n            configfLen = config._f.length;\n\n        if (configfLen === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < configfLen; i++) {\n            currentScore = 0;\n            validFormatFound = false;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (isValid(tempConfig)) {\n                validFormatFound = true;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (!bestFormatIsValid) {\n                if (\n                    scoreToBeat == null ||\n                    currentScore < scoreToBeat ||\n                    validFormatFound\n                ) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                    if (validFormatFound) {\n                        bestFormatIsValid = true;\n                    }\n                }\n            } else {\n                if (currentScore < scoreToBeat) {\n                    scoreToBeat = currentScore;\n                    bestMoment = tempConfig;\n                }\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i),\n            dayOrDate = i.day === undefined ? i.date : i.day;\n        config._a = map(\n            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n            function (obj) {\n                return obj && parseInt(obj, 10);\n            }\n        );\n\n        configFromArray(config);\n    }\n\n    function createFromConfig(config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig(config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return createInvalid({ nullInput: true });\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isDate(input)) {\n            config._d = input;\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else {\n            configFromInput(config);\n        }\n\n        if (!isValid(config)) {\n            config._d = null;\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (isUndefined(input)) {\n            config._d = new Date(hooks.now());\n        } else if (isDate(input)) {\n            config._d = new Date(input.valueOf());\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (isObject(input)) {\n            configFromObject(config);\n        } else if (isNumber(input)) {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (format === true || format === false) {\n            strict = format;\n            format = undefined;\n        }\n\n        if (locale === true || locale === false) {\n            strict = locale;\n            locale = undefined;\n        }\n\n        if (\n            (isObject(input) && isObjectEmpty(input)) ||\n            (isArray(input) && input.length === 0)\n        ) {\n            input = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function createLocal(input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other < this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        ),\n        prototypeMax = deprecate(\n            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n            function () {\n                var other = createLocal.apply(null, arguments);\n                if (this.isValid() && other.isValid()) {\n                    return other > this ? this : other;\n                } else {\n                    return createInvalid();\n                }\n            }\n        );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max() {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    var now = function () {\n        return Date.now ? Date.now() : +new Date();\n    };\n\n    var ordering = [\n        'year',\n        'quarter',\n        'month',\n        'week',\n        'day',\n        'hour',\n        'minute',\n        'second',\n        'millisecond',\n    ];\n\n    function isDurationValid(m) {\n        var key,\n            unitHasDecimal = false,\n            i,\n            orderLen = ordering.length;\n        for (key in m) {\n            if (\n                hasOwnProp(m, key) &&\n                !(\n                    indexOf.call(ordering, key) !== -1 &&\n                    (m[key] == null || !isNaN(m[key]))\n                )\n            ) {\n                return false;\n            }\n        }\n\n        for (i = 0; i < orderLen; ++i) {\n            if (m[ordering[i]]) {\n                if (unitHasDecimal) {\n                    return false; // only allow non-integers for smallest unit\n                }\n                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n                    unitHasDecimal = true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    function isValid$1() {\n        return this._isValid;\n    }\n\n    function createInvalid$1() {\n        return createDuration(NaN);\n    }\n\n    function Duration(duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        this._isValid = isDurationValid(normalizedInput);\n\n        // representation for dateAddRemove\n        this._milliseconds =\n            +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days + weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months + quarters * 3 + years * 12;\n\n        this._data = {};\n\n        this._locale = getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration(obj) {\n        return obj instanceof Duration;\n    }\n\n    function absRound(number) {\n        if (number < 0) {\n            return Math.round(-1 * number) * -1;\n        } else {\n            return Math.round(number);\n        }\n    }\n\n    // compare two arrays, return the number of differences\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if (\n                (dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n            ) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    // FORMATTING\n\n    function offset(token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset(),\n                sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return (\n                sign +\n                zeroFill(~~(offset / 60), 2) +\n                separator +\n                zeroFill(~~offset % 60, 2)\n            );\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(matcher, string) {\n        var matches = (string || '').match(matcher),\n            chunk,\n            parts,\n            minutes;\n\n        if (matches === null) {\n            return null;\n        }\n\n        chunk = matches[matches.length - 1] || [];\n        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff =\n                (isMoment(input) || isDate(input)\n                    ? input.valueOf()\n                    : createLocal(input).valueOf()) - res.valueOf();\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(res._d.valueOf() + diff);\n            hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return createLocal(input).local();\n        }\n    }\n\n    function getDateOffset(m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset());\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset(input, keepLocalTime, keepMinutes) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (!this.isValid()) {\n            return input != null ? this : NaN;\n        }\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(matchShortOffset, input);\n                if (input === null) {\n                    return this;\n                }\n            } else if (Math.abs(input) < 16 && !keepMinutes) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    addSubtract(\n                        this,\n                        createDuration(input - offset, 'm'),\n                        1,\n                        false\n                    );\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone(input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC(keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal(keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset() {\n        if (this._tzm != null) {\n            this.utcOffset(this._tzm, false, true);\n        } else if (typeof this._i === 'string') {\n            var tZone = offsetFromString(matchOffset, this._i);\n            if (tZone != null) {\n                this.utcOffset(tZone);\n            } else {\n                this.utcOffset(0, true);\n            }\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset(input) {\n        if (!this.isValid()) {\n            return false;\n        }\n        input = input ? createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime() {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted() {\n        if (!isUndefined(this._isDSTShifted)) {\n            return this._isDSTShifted;\n        }\n\n        var c = {},\n            other;\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n            this._isDSTShifted =\n                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal() {\n        return this.isValid() ? !this._isUTC : false;\n    }\n\n    function isUtcOffset() {\n        return this.isValid() ? this._isUTC : false;\n    }\n\n    function isUtc() {\n        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n    }\n\n    // ASP.NET json date format regex\n    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n        // and further modified to allow for strings containing both week and day\n        isoRegex =\n            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n    function createDuration(input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms: input._milliseconds,\n                d: input._days,\n                M: input._months,\n            };\n        } else if (isNumber(input) || !isNaN(+input)) {\n            duration = {};\n            if (key) {\n                duration[key] = +input;\n            } else {\n                duration.milliseconds = +input;\n            }\n        } else if ((match = aspNetRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: 0,\n                d: toInt(match[DATE]) * sign,\n                h: toInt(match[HOUR]) * sign,\n                m: toInt(match[MINUTE]) * sign,\n                s: toInt(match[SECOND]) * sign,\n                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n            };\n        } else if ((match = isoRegex.exec(input))) {\n            sign = match[1] === '-' ? -1 : 1;\n            duration = {\n                y: parseIso(match[2], sign),\n                M: parseIso(match[3], sign),\n                w: parseIso(match[4], sign),\n                d: parseIso(match[5], sign),\n                h: parseIso(match[6], sign),\n                m: parseIso(match[7], sign),\n                s: parseIso(match[8], sign),\n            };\n        } else if (duration == null) {\n            // checks for null or undefined\n            duration = {};\n        } else if (\n            typeof duration === 'object' &&\n            ('from' in duration || 'to' in duration)\n        ) {\n            diffRes = momentsDifference(\n                createLocal(duration.from),\n                createLocal(duration.to)\n            );\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n            ret._isValid = input._isValid;\n        }\n\n        return ret;\n    }\n\n    createDuration.fn = Duration.prototype;\n    createDuration.invalid = createInvalid$1;\n\n    function parseIso(inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {};\n\n        res.months =\n            other.month() - base.month() + (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        if (!(base.isValid() && other.isValid())) {\n            return { milliseconds: 0, months: 0 };\n        }\n\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    // TODO: remove 'name' arg after deprecation is removed\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(\n                    name,\n                    'moment().' +\n                        name +\n                        '(period, number) is deprecated. Please use moment().' +\n                        name +\n                        '(number, period). ' +\n                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n                );\n                tmp = val;\n                val = period;\n                period = tmp;\n            }\n\n            dur = createDuration(val, period);\n            addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function addSubtract(mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = absRound(duration._days),\n            months = absRound(duration._months);\n\n        if (!mom.isValid()) {\n            // No op\n            return;\n        }\n\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (months) {\n            setMonth(mom, get(mom, 'Month') + months * isAdding);\n        }\n        if (days) {\n            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n        }\n        if (milliseconds) {\n            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n        }\n        if (updateOffset) {\n            hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add = createAdder(1, 'add'),\n        subtract = createAdder(-1, 'subtract');\n\n    function isString(input) {\n        return typeof input === 'string' || input instanceof String;\n    }\n\n    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n    function isMomentInput(input) {\n        return (\n            isMoment(input) ||\n            isDate(input) ||\n            isString(input) ||\n            isNumber(input) ||\n            isNumberOrStringArray(input) ||\n            isMomentInputObject(input) ||\n            input === null ||\n            input === undefined\n        );\n    }\n\n    function isMomentInputObject(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'years',\n                'year',\n                'y',\n                'months',\n                'month',\n                'M',\n                'days',\n                'day',\n                'd',\n                'dates',\n                'date',\n                'D',\n                'hours',\n                'hour',\n                'h',\n                'minutes',\n                'minute',\n                'm',\n                'seconds',\n                'second',\n                's',\n                'milliseconds',\n                'millisecond',\n                'ms',\n            ],\n            i,\n            property,\n            propertyLen = properties.length;\n\n        for (i = 0; i < propertyLen; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function isNumberOrStringArray(input) {\n        var arrayTest = isArray(input),\n            dataTypeTest = false;\n        if (arrayTest) {\n            dataTypeTest =\n                input.filter(function (item) {\n                    return !isNumber(item) && isString(input);\n                }).length === 0;\n        }\n        return arrayTest && dataTypeTest;\n    }\n\n    function isCalendarSpec(input) {\n        var objectTest = isObject(input) && !isObjectEmpty(input),\n            propertyTest = false,\n            properties = [\n                'sameDay',\n                'nextDay',\n                'lastDay',\n                'nextWeek',\n                'lastWeek',\n                'sameElse',\n            ],\n            i,\n            property;\n\n        for (i = 0; i < properties.length; i += 1) {\n            property = properties[i];\n            propertyTest = propertyTest || hasOwnProp(input, property);\n        }\n\n        return objectTest && propertyTest;\n    }\n\n    function getCalendarFormat(myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        return diff < -6\n            ? 'sameElse'\n            : diff < -1\n            ? 'lastWeek'\n            : diff < 0\n            ? 'lastDay'\n            : diff < 1\n            ? 'sameDay'\n            : diff < 2\n            ? 'nextDay'\n            : diff < 7\n            ? 'nextWeek'\n            : 'sameElse';\n    }\n\n    function calendar$1(time, formats) {\n        // Support for single parameter, formats only overload to the calendar function\n        if (arguments.length === 1) {\n            if (!arguments[0]) {\n                time = undefined;\n                formats = undefined;\n            } else if (isMomentInput(arguments[0])) {\n                time = arguments[0];\n                formats = undefined;\n            } else if (isCalendarSpec(arguments[0])) {\n                formats = arguments[0];\n                time = undefined;\n            }\n        }\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            format = hooks.calendarFormat(this, sod) || 'sameElse',\n            output =\n                formats &&\n                (isFunction(formats[format])\n                    ? formats[format].call(this, now)\n                    : formats[format]);\n\n        return this.format(\n            output || this.localeData().calendar(format, this, createLocal(now))\n        );\n    }\n\n    function clone() {\n        return new Moment(this);\n    }\n\n    function isAfter(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() > localInput.valueOf();\n        } else {\n            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n        }\n    }\n\n    function isBefore(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input);\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() < localInput.valueOf();\n        } else {\n            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n        }\n    }\n\n    function isBetween(from, to, units, inclusivity) {\n        var localFrom = isMoment(from) ? from : createLocal(from),\n            localTo = isMoment(to) ? to : createLocal(to);\n        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n            return false;\n        }\n        inclusivity = inclusivity || '()';\n        return (\n            (inclusivity[0] === '('\n                ? this.isAfter(localFrom, units)\n                : !this.isBefore(localFrom, units)) &&\n            (inclusivity[1] === ')'\n                ? this.isBefore(localTo, units)\n                : !this.isAfter(localTo, units))\n        );\n    }\n\n    function isSame(input, units) {\n        var localInput = isMoment(input) ? input : createLocal(input),\n            inputMs;\n        if (!(this.isValid() && localInput.isValid())) {\n            return false;\n        }\n        units = normalizeUnits(units) || 'millisecond';\n        if (units === 'millisecond') {\n            return this.valueOf() === localInput.valueOf();\n        } else {\n            inputMs = localInput.valueOf();\n            return (\n                this.clone().startOf(units).valueOf() <= inputMs &&\n                inputMs <= this.clone().endOf(units).valueOf()\n            );\n        }\n    }\n\n    function isSameOrAfter(input, units) {\n        return this.isSame(input, units) || this.isAfter(input, units);\n    }\n\n    function isSameOrBefore(input, units) {\n        return this.isSame(input, units) || this.isBefore(input, units);\n    }\n\n    function diff(input, units, asFloat) {\n        var that, zoneDelta, output;\n\n        if (!this.isValid()) {\n            return NaN;\n        }\n\n        that = cloneWithOffset(input, this);\n\n        if (!that.isValid()) {\n            return NaN;\n        }\n\n        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n        units = normalizeUnits(units);\n\n        switch (units) {\n            case 'year':\n                output = monthDiff(this, that) / 12;\n                break;\n            case 'month':\n                output = monthDiff(this, that);\n                break;\n            case 'quarter':\n                output = monthDiff(this, that) / 3;\n                break;\n            case 'second':\n                output = (this - that) / 1e3;\n                break; // 1000\n            case 'minute':\n                output = (this - that) / 6e4;\n                break; // 1000 * 60\n            case 'hour':\n                output = (this - that) / 36e5;\n                break; // 1000 * 60 * 60\n            case 'day':\n                output = (this - that - zoneDelta) / 864e5;\n                break; // 1000 * 60 * 60 * 24, negate dst\n            case 'week':\n                output = (this - that - zoneDelta) / 6048e5;\n                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n            default:\n                output = this - that;\n        }\n\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff(a, b) {\n        if (a.date() < b.date()) {\n            // end-of-month calculations work correct when the start month has more\n            // days than the end month.\n            return -monthDiff(b, a);\n        }\n        // difference in months\n        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2,\n            adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        //check for negative zero, return zero if negative zero\n        return -(wholeMonthDiff + adjust) || 0;\n    }\n\n    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n    function toString() {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function toISOString(keepOffset) {\n        if (!this.isValid()) {\n            return null;\n        }\n        var utc = keepOffset !== true,\n            m = utc ? this.clone().utc() : this;\n        if (m.year() < 0 || m.year() > 9999) {\n            return formatMoment(\n                m,\n                utc\n                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n            );\n        }\n        if (isFunction(Date.prototype.toISOString)) {\n            // native implementation is ~50x faster, use it when we can\n            if (utc) {\n                return this.toDate().toISOString();\n            } else {\n                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n                    .toISOString()\n                    .replace('Z', formatMoment(m, 'Z'));\n            }\n        }\n        return formatMoment(\n            m,\n            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n        );\n    }\n\n    /**\n     * Return a human readable representation of a moment that can\n     * also be evaluated to get a new moment which is the same\n     *\n     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n     */\n    function inspect() {\n        if (!this.isValid()) {\n            return 'moment.invalid(/* ' + this._i + ' */)';\n        }\n        var func = 'moment',\n            zone = '',\n            prefix,\n            year,\n            datetime,\n            suffix;\n        if (!this.isLocal()) {\n            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n            zone = 'Z';\n        }\n        prefix = '[' + func + '(\"]';\n        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n        suffix = zone + '[\")]';\n\n        return this.format(prefix + year + datetime + suffix);\n    }\n\n    function format(inputString) {\n        if (!inputString) {\n            inputString = this.isUtc()\n                ? hooks.defaultFormatUtc\n                : hooks.defaultFormat;\n        }\n        var output = formatMoment(this, inputString);\n        return this.localeData().postformat(output);\n    }\n\n    function from(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ to: this, from: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function fromNow(withoutSuffix) {\n        return this.from(createLocal(), withoutSuffix);\n    }\n\n    function to(time, withoutSuffix) {\n        if (\n            this.isValid() &&\n            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n        ) {\n            return createDuration({ from: this, to: time })\n                .locale(this.locale())\n                .humanize(!withoutSuffix);\n        } else {\n            return this.localeData().invalidDate();\n        }\n    }\n\n    function toNow(withoutSuffix) {\n        return this.to(createLocal(), withoutSuffix);\n    }\n\n    // If passed a locale key, it will set the locale for this\n    // instance.  Otherwise, it will return the locale configuration\n    // variables for this instance.\n    function locale(key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData() {\n        return this._locale;\n    }\n\n    var MS_PER_SECOND = 1000,\n        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n    // actual modulo - handles negative numbers (for dates before 1970):\n    function mod$1(dividend, divisor) {\n        return ((dividend % divisor) + divisor) % divisor;\n    }\n\n    function localStartOfDate(y, m, d) {\n        // the date constructor remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return new Date(y, m, d).valueOf();\n        }\n    }\n\n    function utcStartOfDate(y, m, d) {\n        // Date.UTC remaps years 0-99 to 1900-1999\n        if (y < 100 && y >= 0) {\n            // preserve leap years using a full 400 year cycle, then reset\n            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n        } else {\n            return Date.UTC(y, m, d);\n        }\n    }\n\n    function startOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year(), 0, 1);\n                break;\n            case 'quarter':\n                time = startOfDate(\n                    this.year(),\n                    this.month() - (this.month() % 3),\n                    1\n                );\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month(), 1);\n                break;\n            case 'week':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - this.weekday()\n                );\n                break;\n            case 'isoWeek':\n                time = startOfDate(\n                    this.year(),\n                    this.month(),\n                    this.date() - (this.isoWeekday() - 1)\n                );\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date());\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time -= mod$1(\n                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                    MS_PER_HOUR\n                );\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_MINUTE);\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time -= mod$1(time, MS_PER_SECOND);\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function endOf(units) {\n        var time, startOfDate;\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n            return this;\n        }\n\n        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n        switch (units) {\n            case 'year':\n                time = startOfDate(this.year() + 1, 0, 1) - 1;\n                break;\n            case 'quarter':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month() - (this.month() % 3) + 3,\n                        1\n                    ) - 1;\n                break;\n            case 'month':\n                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n                break;\n            case 'week':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - this.weekday() + 7\n                    ) - 1;\n                break;\n            case 'isoWeek':\n                time =\n                    startOfDate(\n                        this.year(),\n                        this.month(),\n                        this.date() - (this.isoWeekday() - 1) + 7\n                    ) - 1;\n                break;\n            case 'day':\n            case 'date':\n                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n                break;\n            case 'hour':\n                time = this._d.valueOf();\n                time +=\n                    MS_PER_HOUR -\n                    mod$1(\n                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n                        MS_PER_HOUR\n                    ) -\n                    1;\n                break;\n            case 'minute':\n                time = this._d.valueOf();\n                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n                break;\n            case 'second':\n                time = this._d.valueOf();\n                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n                break;\n        }\n\n        this._d.setTime(time);\n        hooks.updateOffset(this, true);\n        return this;\n    }\n\n    function valueOf() {\n        return this._d.valueOf() - (this._offset || 0) * 60000;\n    }\n\n    function unix() {\n        return Math.floor(this.valueOf() / 1000);\n    }\n\n    function toDate() {\n        return new Date(this.valueOf());\n    }\n\n    function toArray() {\n        var m = this;\n        return [\n            m.year(),\n            m.month(),\n            m.date(),\n            m.hour(),\n            m.minute(),\n            m.second(),\n            m.millisecond(),\n        ];\n    }\n\n    function toObject() {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds(),\n        };\n    }\n\n    function toJSON() {\n        // new Date(NaN).toJSON() === null\n        return this.isValid() ? this.toISOString() : null;\n    }\n\n    function isValid$2() {\n        return isValid(this);\n    }\n\n    function parsingFlags() {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt() {\n        return getParsingFlags(this).overflow;\n    }\n\n    function creationData() {\n        return {\n            input: this._i,\n            format: this._f,\n            locale: this._locale,\n            isUTC: this._isUTC,\n            strict: this._strict,\n        };\n    }\n\n    addFormatToken('N', 0, 0, 'eraAbbr');\n    addFormatToken('NN', 0, 0, 'eraAbbr');\n    addFormatToken('NNN', 0, 0, 'eraAbbr');\n    addFormatToken('NNNN', 0, 0, 'eraName');\n    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n    addRegexToken('N', matchEraAbbr);\n    addRegexToken('NN', matchEraAbbr);\n    addRegexToken('NNN', matchEraAbbr);\n    addRegexToken('NNNN', matchEraName);\n    addRegexToken('NNNNN', matchEraNarrow);\n\n    addParseToken(\n        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n        function (input, array, config, token) {\n            var era = config._locale.erasParse(input, token, config._strict);\n            if (era) {\n                getParsingFlags(config).era = era;\n            } else {\n                getParsingFlags(config).invalidEra = input;\n            }\n        }\n    );\n\n    addRegexToken('y', matchUnsigned);\n    addRegexToken('yy', matchUnsigned);\n    addRegexToken('yyy', matchUnsigned);\n    addRegexToken('yyyy', matchUnsigned);\n    addRegexToken('yo', matchEraYearOrdinal);\n\n    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n    addParseToken(['yo'], function (input, array, config, token) {\n        var match;\n        if (config._locale._eraYearOrdinalRegex) {\n            match = input.match(config._locale._eraYearOrdinalRegex);\n        }\n\n        if (config._locale.eraYearOrdinalParse) {\n            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n        } else {\n            array[YEAR] = parseInt(input, 10);\n        }\n    });\n\n    function localeEras(m, format) {\n        var i,\n            l,\n            date,\n            eras = this._eras || getLocale('en')._eras;\n        for (i = 0, l = eras.length; i < l; ++i) {\n            switch (typeof eras[i].since) {\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].since).startOf('day');\n                    eras[i].since = date.valueOf();\n                    break;\n            }\n\n            switch (typeof eras[i].until) {\n                case 'undefined':\n                    eras[i].until = +Infinity;\n                    break;\n                case 'string':\n                    // truncate time\n                    date = hooks(eras[i].until).startOf('day').valueOf();\n                    eras[i].until = date.valueOf();\n                    break;\n            }\n        }\n        return eras;\n    }\n\n    function localeErasParse(eraName, format, strict) {\n        var i,\n            l,\n            eras = this.eras(),\n            name,\n            abbr,\n            narrow;\n        eraName = eraName.toUpperCase();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            name = eras[i].name.toUpperCase();\n            abbr = eras[i].abbr.toUpperCase();\n            narrow = eras[i].narrow.toUpperCase();\n\n            if (strict) {\n                switch (format) {\n                    case 'N':\n                    case 'NN':\n                    case 'NNN':\n                        if (abbr === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNN':\n                        if (name === eraName) {\n                            return eras[i];\n                        }\n                        break;\n\n                    case 'NNNNN':\n                        if (narrow === eraName) {\n                            return eras[i];\n                        }\n                        break;\n                }\n            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n                return eras[i];\n            }\n        }\n    }\n\n    function localeErasConvertYear(era, year) {\n        var dir = era.since <= era.until ? +1 : -1;\n        if (year === undefined) {\n            return hooks(era.since).year();\n        } else {\n            return hooks(era.since).year() + (year - era.offset) * dir;\n        }\n    }\n\n    function getEraName() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].name;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].name;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraNarrow() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].narrow;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].narrow;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraAbbr() {\n        var i,\n            l,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (eras[i].since <= val && val <= eras[i].until) {\n                return eras[i].abbr;\n            }\n            if (eras[i].until <= val && val <= eras[i].since) {\n                return eras[i].abbr;\n            }\n        }\n\n        return '';\n    }\n\n    function getEraYear() {\n        var i,\n            l,\n            dir,\n            val,\n            eras = this.localeData().eras();\n        for (i = 0, l = eras.length; i < l; ++i) {\n            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n            // truncate time\n            val = this.clone().startOf('day').valueOf();\n\n            if (\n                (eras[i].since <= val && val <= eras[i].until) ||\n                (eras[i].until <= val && val <= eras[i].since)\n            ) {\n                return (\n                    (this.year() - hooks(eras[i].since).year()) * dir +\n                    eras[i].offset\n                );\n            }\n        }\n\n        return this.year();\n    }\n\n    function erasNameRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNameRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNameRegex : this._erasRegex;\n    }\n\n    function erasAbbrRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n    }\n\n    function erasNarrowRegex(isStrict) {\n        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n            computeErasParse.call(this);\n        }\n        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n    }\n\n    function matchEraAbbr(isStrict, locale) {\n        return locale.erasAbbrRegex(isStrict);\n    }\n\n    function matchEraName(isStrict, locale) {\n        return locale.erasNameRegex(isStrict);\n    }\n\n    function matchEraNarrow(isStrict, locale) {\n        return locale.erasNarrowRegex(isStrict);\n    }\n\n    function matchEraYearOrdinal(isStrict, locale) {\n        return locale._eraYearOrdinalRegex || matchUnsigned;\n    }\n\n    function computeErasParse() {\n        var abbrPieces = [],\n            namePieces = [],\n            narrowPieces = [],\n            mixedPieces = [],\n            i,\n            l,\n            eras = this.eras();\n\n        for (i = 0, l = eras.length; i < l; ++i) {\n            namePieces.push(regexEscape(eras[i].name));\n            abbrPieces.push(regexEscape(eras[i].abbr));\n            narrowPieces.push(regexEscape(eras[i].narrow));\n\n            mixedPieces.push(regexEscape(eras[i].name));\n            mixedPieces.push(regexEscape(eras[i].abbr));\n            mixedPieces.push(regexEscape(eras[i].narrow));\n        }\n\n        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n        this._erasNarrowRegex = new RegExp(\n            '^(' + narrowPieces.join('|') + ')',\n            'i'\n        );\n    }\n\n    // FORMATTING\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken(token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg', 'weekYear');\n    addWeekYearFormatToken('ggggg', 'weekYear');\n    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PRIORITY\n\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n\n    // PARSING\n\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n\n    addWeekParseToken(\n        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n        function (input, week, config, token) {\n            week[token.substr(0, 2)] = toInt(input);\n        }\n    );\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = hooks.parseTwoDigitYear(input);\n    });\n\n    // MOMENTS\n\n    function getSetWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.week(),\n            this.weekday(),\n            this.localeData()._week.dow,\n            this.localeData()._week.doy\n        );\n    }\n\n    function getSetISOWeekYear(input) {\n        return getSetWeekYearHelper.call(\n            this,\n            input,\n            this.isoWeek(),\n            this.isoWeekday(),\n            1,\n            4\n        );\n    }\n\n    function getISOWeeksInYear() {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getISOWeeksInISOWeekYear() {\n        return weeksInYear(this.isoWeekYear(), 1, 4);\n    }\n\n    function getWeeksInYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getWeeksInWeekYear() {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n    }\n\n    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n        var weeksTarget;\n        if (input == null) {\n            return weekOfYear(this, dow, doy).year;\n        } else {\n            weeksTarget = weeksInYear(input, dow, doy);\n            if (week > weeksTarget) {\n                week = weeksTarget;\n            }\n            return setWeekAll.call(this, input, week, weekday, dow, doy);\n        }\n    }\n\n    function setWeekAll(weekYear, week, weekday, dow, doy) {\n        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n        this.year(date.getUTCFullYear());\n        this.month(date.getUTCMonth());\n        this.date(date.getUTCDate());\n        return this;\n    }\n\n    // FORMATTING\n\n    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PRIORITY\n\n    addUnitPriority('quarter', 7);\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter(input) {\n        return input == null\n            ? Math.ceil((this.month() + 1) / 3)\n            : this.month((input - 1) * 3 + (this.month() % 3));\n    }\n\n    // FORMATTING\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PRIORITY\n    addUnitPriority('date', 9);\n\n    // PARSING\n\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        // TODO: Remove \"ordinalParse\" fallback in next major release.\n        return isStrict\n            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n            : locale._dayOfMonthOrdinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    // FORMATTING\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n\n    // PARSING\n\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    // MOMENTS\n\n    function getSetDayOfYear(input) {\n        var dayOfYear =\n            Math.round(\n                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n            ) + 1;\n        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n    }\n\n    // FORMATTING\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PRIORITY\n\n    addUnitPriority('minute', 14);\n\n    // PARSING\n\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    // FORMATTING\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PRIORITY\n\n    addUnitPriority('second', 15);\n\n    // PARSING\n\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    // FORMATTING\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PRIORITY\n\n    addUnitPriority('millisecond', 16);\n\n    // PARSING\n\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n\n    var token, getSetMillisecond;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n\n    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    // FORMATTING\n\n    addFormatToken('z', 0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr() {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName() {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var proto = Moment.prototype;\n\n    proto.add = add;\n    proto.calendar = calendar$1;\n    proto.clone = clone;\n    proto.diff = diff;\n    proto.endOf = endOf;\n    proto.format = format;\n    proto.from = from;\n    proto.fromNow = fromNow;\n    proto.to = to;\n    proto.toNow = toNow;\n    proto.get = stringGet;\n    proto.invalidAt = invalidAt;\n    proto.isAfter = isAfter;\n    proto.isBefore = isBefore;\n    proto.isBetween = isBetween;\n    proto.isSame = isSame;\n    proto.isSameOrAfter = isSameOrAfter;\n    proto.isSameOrBefore = isSameOrBefore;\n    proto.isValid = isValid$2;\n    proto.lang = lang;\n    proto.locale = locale;\n    proto.localeData = localeData;\n    proto.max = prototypeMax;\n    proto.min = prototypeMin;\n    proto.parsingFlags = parsingFlags;\n    proto.set = stringSet;\n    proto.startOf = startOf;\n    proto.subtract = subtract;\n    proto.toArray = toArray;\n    proto.toObject = toObject;\n    proto.toDate = toDate;\n    proto.toISOString = toISOString;\n    proto.inspect = inspect;\n    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n            return 'Moment<' + this.format() + '>';\n        };\n    }\n    proto.toJSON = toJSON;\n    proto.toString = toString;\n    proto.unix = unix;\n    proto.valueOf = valueOf;\n    proto.creationData = creationData;\n    proto.eraName = getEraName;\n    proto.eraNarrow = getEraNarrow;\n    proto.eraAbbr = getEraAbbr;\n    proto.eraYear = getEraYear;\n    proto.year = getSetYear;\n    proto.isLeapYear = getIsLeapYear;\n    proto.weekYear = getSetWeekYear;\n    proto.isoWeekYear = getSetISOWeekYear;\n    proto.quarter = proto.quarters = getSetQuarter;\n    proto.month = getSetMonth;\n    proto.daysInMonth = getDaysInMonth;\n    proto.week = proto.weeks = getSetWeek;\n    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n    proto.weeksInYear = getWeeksInYear;\n    proto.weeksInWeekYear = getWeeksInWeekYear;\n    proto.isoWeeksInYear = getISOWeeksInYear;\n    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n    proto.date = getSetDayOfMonth;\n    proto.day = proto.days = getSetDayOfWeek;\n    proto.weekday = getSetLocaleDayOfWeek;\n    proto.isoWeekday = getSetISODayOfWeek;\n    proto.dayOfYear = getSetDayOfYear;\n    proto.hour = proto.hours = getSetHour;\n    proto.minute = proto.minutes = getSetMinute;\n    proto.second = proto.seconds = getSetSecond;\n    proto.millisecond = proto.milliseconds = getSetMillisecond;\n    proto.utcOffset = getSetOffset;\n    proto.utc = setOffsetToUTC;\n    proto.local = setOffsetToLocal;\n    proto.parseZone = setOffsetToParsedOffset;\n    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    proto.isDST = isDaylightSavingTime;\n    proto.isLocal = isLocal;\n    proto.isUtcOffset = isUtcOffset;\n    proto.isUtc = isUtc;\n    proto.isUTC = isUtc;\n    proto.zoneAbbr = getZoneAbbr;\n    proto.zoneName = getZoneName;\n    proto.dates = deprecate(\n        'dates accessor is deprecated. Use date instead.',\n        getSetDayOfMonth\n    );\n    proto.months = deprecate(\n        'months accessor is deprecated. Use month instead',\n        getSetMonth\n    );\n    proto.years = deprecate(\n        'years accessor is deprecated. Use year instead',\n        getSetYear\n    );\n    proto.zone = deprecate(\n        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n        getSetZone\n    );\n    proto.isDSTShifted = deprecate(\n        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n        isDaylightSavingTimeShifted\n    );\n\n    function createUnix(input) {\n        return createLocal(input * 1000);\n    }\n\n    function createInZone() {\n        return createLocal.apply(null, arguments).parseZone();\n    }\n\n    function preParsePostFormat(string) {\n        return string;\n    }\n\n    var proto$1 = Locale.prototype;\n\n    proto$1.calendar = calendar;\n    proto$1.longDateFormat = longDateFormat;\n    proto$1.invalidDate = invalidDate;\n    proto$1.ordinal = ordinal;\n    proto$1.preparse = preParsePostFormat;\n    proto$1.postformat = preParsePostFormat;\n    proto$1.relativeTime = relativeTime;\n    proto$1.pastFuture = pastFuture;\n    proto$1.set = set;\n    proto$1.eras = localeEras;\n    proto$1.erasParse = localeErasParse;\n    proto$1.erasConvertYear = localeErasConvertYear;\n    proto$1.erasAbbrRegex = erasAbbrRegex;\n    proto$1.erasNameRegex = erasNameRegex;\n    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n    proto$1.months = localeMonths;\n    proto$1.monthsShort = localeMonthsShort;\n    proto$1.monthsParse = localeMonthsParse;\n    proto$1.monthsRegex = monthsRegex;\n    proto$1.monthsShortRegex = monthsShortRegex;\n    proto$1.week = localeWeek;\n    proto$1.firstDayOfYear = localeFirstDayOfYear;\n    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n    proto$1.weekdays = localeWeekdays;\n    proto$1.weekdaysMin = localeWeekdaysMin;\n    proto$1.weekdaysShort = localeWeekdaysShort;\n    proto$1.weekdaysParse = localeWeekdaysParse;\n\n    proto$1.weekdaysRegex = weekdaysRegex;\n    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n    proto$1.isPM = localeIsPM;\n    proto$1.meridiem = localeMeridiem;\n\n    function get$1(format, index, field, setter) {\n        var locale = getLocale(),\n            utc = createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function listMonthsImpl(format, index, field) {\n        if (isNumber(format)) {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return get$1(format, index, field, 'month');\n        }\n\n        var i,\n            out = [];\n        for (i = 0; i < 12; i++) {\n            out[i] = get$1(format, i, field, 'month');\n        }\n        return out;\n    }\n\n    // ()\n    // (5)\n    // (fmt, 5)\n    // (fmt)\n    // (true)\n    // (true, 5)\n    // (true, fmt, 5)\n    // (true, fmt)\n    function listWeekdaysImpl(localeSorted, format, index, field) {\n        if (typeof localeSorted === 'boolean') {\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        } else {\n            format = localeSorted;\n            index = format;\n            localeSorted = false;\n\n            if (isNumber(format)) {\n                index = format;\n                format = undefined;\n            }\n\n            format = format || '';\n        }\n\n        var locale = getLocale(),\n            shift = localeSorted ? locale._week.dow : 0,\n            i,\n            out = [];\n\n        if (index != null) {\n            return get$1(format, (index + shift) % 7, field, 'day');\n        }\n\n        for (i = 0; i < 7; i++) {\n            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n        }\n        return out;\n    }\n\n    function listMonths(format, index) {\n        return listMonthsImpl(format, index, 'months');\n    }\n\n    function listMonthsShort(format, index) {\n        return listMonthsImpl(format, index, 'monthsShort');\n    }\n\n    function listWeekdays(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n    }\n\n    function listWeekdaysShort(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n    }\n\n    function listWeekdaysMin(localeSorted, format, index) {\n        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n    }\n\n    getSetGlobalLocale('en', {\n        eras: [\n            {\n                since: '0001-01-01',\n                until: +Infinity,\n                offset: 1,\n                name: 'Anno Domini',\n                narrow: 'AD',\n                abbr: 'AD',\n            },\n            {\n                since: '0000-12-31',\n                until: -Infinity,\n                offset: 1,\n                name: 'Before Christ',\n                narrow: 'BC',\n                abbr: 'BC',\n            },\n        ],\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal: function (number) {\n            var b = number % 10,\n                output =\n                    toInt((number % 100) / 10) === 1\n                        ? 'th'\n                        : b === 1\n                        ? 'st'\n                        : b === 2\n                        ? 'nd'\n                        : b === 3\n                        ? 'rd'\n                        : 'th';\n            return number + output;\n        },\n    });\n\n    // Side effect imports\n\n    hooks.lang = deprecate(\n        'moment.lang is deprecated. Use moment.locale instead.',\n        getSetGlobalLocale\n    );\n    hooks.langData = deprecate(\n        'moment.langData is deprecated. Use moment.localeData instead.',\n        getLocale\n    );\n\n    var mathAbs = Math.abs;\n\n    function abs() {\n        var data = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.months = mathAbs(data.months);\n        data.years = mathAbs(data.years);\n\n        return this;\n    }\n\n    function addSubtract$1(duration, input, value, direction) {\n        var other = createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days += direction * other._days;\n        duration._months += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function add$1(input, value) {\n        return addSubtract$1(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function subtract$1(input, value) {\n        return addSubtract$1(this, input, value, -1);\n    }\n\n    function absCeil(number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble() {\n        var milliseconds = this._milliseconds,\n            days = this._days,\n            months = this._months,\n            data = this._data,\n            seconds,\n            minutes,\n            hours,\n            years,\n            monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (\n            !(\n                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0)\n            )\n        ) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds = absFloor(milliseconds / 1000);\n        data.seconds = seconds % 60;\n\n        minutes = absFloor(seconds / 60);\n        data.minutes = minutes % 60;\n\n        hours = absFloor(minutes / 60);\n        data.hours = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days = days;\n        data.months = months;\n        data.years = years;\n\n        return this;\n    }\n\n    function daysToMonths(days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return (days * 4800) / 146097;\n    }\n\n    function monthsToDays(months) {\n        // the reverse of daysToMonths\n        return (months * 146097) / 4800;\n    }\n\n    function as(units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        var days,\n            months,\n            milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'quarter' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            switch (units) {\n                case 'month':\n                    return months;\n                case 'quarter':\n                    return months / 3;\n                case 'year':\n                    return months / 12;\n            }\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week':\n                    return days / 7 + milliseconds / 6048e5;\n                case 'day':\n                    return days + milliseconds / 864e5;\n                case 'hour':\n                    return days * 24 + milliseconds / 36e5;\n                case 'minute':\n                    return days * 1440 + milliseconds / 6e4;\n                case 'second':\n                    return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond':\n                    return Math.floor(days * 864e5) + milliseconds;\n                default:\n                    throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function valueOf$1() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs(alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms'),\n        asSeconds = makeAs('s'),\n        asMinutes = makeAs('m'),\n        asHours = makeAs('h'),\n        asDays = makeAs('d'),\n        asWeeks = makeAs('w'),\n        asMonths = makeAs('M'),\n        asQuarters = makeAs('Q'),\n        asYears = makeAs('y');\n\n    function clone$1() {\n        return createDuration(this);\n    }\n\n    function get$2(units) {\n        units = normalizeUnits(units);\n        return this.isValid() ? this[units + 's']() : NaN;\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this.isValid() ? this._data[name] : NaN;\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds'),\n        seconds = makeGetter('seconds'),\n        minutes = makeGetter('minutes'),\n        hours = makeGetter('hours'),\n        days = makeGetter('days'),\n        months = makeGetter('months'),\n        years = makeGetter('years');\n\n    function weeks() {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round,\n        thresholds = {\n            ss: 44, // a few seconds to seconds\n            s: 45, // seconds to minute\n            m: 45, // minutes to hour\n            h: 22, // hours to day\n            d: 26, // days to month/week\n            w: null, // weeks to month\n            M: 11, // months to year\n        };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n        var duration = createDuration(posNegDuration).abs(),\n            seconds = round(duration.as('s')),\n            minutes = round(duration.as('m')),\n            hours = round(duration.as('h')),\n            days = round(duration.as('d')),\n            months = round(duration.as('M')),\n            weeks = round(duration.as('w')),\n            years = round(duration.as('y')),\n            a =\n                (seconds <= thresholds.ss && ['s', seconds]) ||\n                (seconds < thresholds.s && ['ss', seconds]) ||\n                (minutes <= 1 && ['m']) ||\n                (minutes < thresholds.m && ['mm', minutes]) ||\n                (hours <= 1 && ['h']) ||\n                (hours < thresholds.h && ['hh', hours]) ||\n                (days <= 1 && ['d']) ||\n                (days < thresholds.d && ['dd', days]);\n\n        if (thresholds.w != null) {\n            a =\n                a ||\n                (weeks <= 1 && ['w']) ||\n                (weeks < thresholds.w && ['ww', weeks]);\n        }\n        a = a ||\n            (months <= 1 && ['M']) ||\n            (months < thresholds.M && ['MM', months]) ||\n            (years <= 1 && ['y']) || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set the rounding function for relative time strings\n    function getSetRelativeTimeRounding(roundingFunction) {\n        if (roundingFunction === undefined) {\n            return round;\n        }\n        if (typeof roundingFunction === 'function') {\n            round = roundingFunction;\n            return true;\n        }\n        return false;\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function getSetRelativeTimeThreshold(threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        if (threshold === 's') {\n            thresholds.ss = limit - 1;\n        }\n        return true;\n    }\n\n    function humanize(argWithSuffix, argThresholds) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var withSuffix = false,\n            th = thresholds,\n            locale,\n            output;\n\n        if (typeof argWithSuffix === 'object') {\n            argThresholds = argWithSuffix;\n            argWithSuffix = false;\n        }\n        if (typeof argWithSuffix === 'boolean') {\n            withSuffix = argWithSuffix;\n        }\n        if (typeof argThresholds === 'object') {\n            th = Object.assign({}, thresholds, argThresholds);\n            if (argThresholds.s != null && argThresholds.ss == null) {\n                th.ss = argThresholds.s - 1;\n            }\n        }\n\n        locale = this.localeData();\n        output = relativeTime$1(this, !withSuffix, th, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var abs$1 = Math.abs;\n\n    function sign(x) {\n        return (x > 0) - (x < 0) || +x;\n    }\n\n    function toISOString$1() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n\n        var seconds = abs$1(this._milliseconds) / 1000,\n            days = abs$1(this._days),\n            months = abs$1(this._months),\n            minutes,\n            hours,\n            years,\n            s,\n            total = this.asSeconds(),\n            totalSign,\n            ymSign,\n            daysSign,\n            hmsSign;\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes = absFloor(seconds / 60);\n        hours = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n        totalSign = total < 0 ? '-' : '';\n        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n        return (\n            totalSign +\n            'P' +\n            (years ? ymSign + years + 'Y' : '') +\n            (months ? ymSign + months + 'M' : '') +\n            (days ? daysSign + days + 'D' : '') +\n            (hours || minutes || seconds ? 'T' : '') +\n            (hours ? hmsSign + hours + 'H' : '') +\n            (minutes ? hmsSign + minutes + 'M' : '') +\n            (seconds ? hmsSign + s + 'S' : '')\n        );\n    }\n\n    var proto$2 = Duration.prototype;\n\n    proto$2.isValid = isValid$1;\n    proto$2.abs = abs;\n    proto$2.add = add$1;\n    proto$2.subtract = subtract$1;\n    proto$2.as = as;\n    proto$2.asMilliseconds = asMilliseconds;\n    proto$2.asSeconds = asSeconds;\n    proto$2.asMinutes = asMinutes;\n    proto$2.asHours = asHours;\n    proto$2.asDays = asDays;\n    proto$2.asWeeks = asWeeks;\n    proto$2.asMonths = asMonths;\n    proto$2.asQuarters = asQuarters;\n    proto$2.asYears = asYears;\n    proto$2.valueOf = valueOf$1;\n    proto$2._bubble = bubble;\n    proto$2.clone = clone$1;\n    proto$2.get = get$2;\n    proto$2.milliseconds = milliseconds;\n    proto$2.seconds = seconds;\n    proto$2.minutes = minutes;\n    proto$2.hours = hours;\n    proto$2.days = days;\n    proto$2.weeks = weeks;\n    proto$2.months = months;\n    proto$2.years = years;\n    proto$2.humanize = humanize;\n    proto$2.toISOString = toISOString$1;\n    proto$2.toString = toISOString$1;\n    proto$2.toJSON = toISOString$1;\n    proto$2.locale = locale;\n    proto$2.localeData = localeData;\n\n    proto$2.toIsoString = deprecate(\n        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n        toISOString$1\n    );\n    proto$2.lang = lang;\n\n    // FORMATTING\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    //! moment.js\n\n    hooks.version = '2.29.4';\n\n    setHookCallback(createLocal);\n\n    hooks.fn = proto;\n    hooks.min = min;\n    hooks.max = max;\n    hooks.now = now;\n    hooks.utc = createUTC;\n    hooks.unix = createUnix;\n    hooks.months = listMonths;\n    hooks.isDate = isDate;\n    hooks.locale = getSetGlobalLocale;\n    hooks.invalid = createInvalid;\n    hooks.duration = createDuration;\n    hooks.isMoment = isMoment;\n    hooks.weekdays = listWeekdays;\n    hooks.parseZone = createInZone;\n    hooks.localeData = getLocale;\n    hooks.isDuration = isDuration;\n    hooks.monthsShort = listMonthsShort;\n    hooks.weekdaysMin = listWeekdaysMin;\n    hooks.defineLocale = defineLocale;\n    hooks.updateLocale = updateLocale;\n    hooks.locales = listLocales;\n    hooks.weekdaysShort = listWeekdaysShort;\n    hooks.normalizeUnits = normalizeUnits;\n    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n    hooks.calendarFormat = getCalendarFormat;\n    hooks.prototype = proto;\n\n    // currently HTML5 input type only supports 24-hour formats\n    hooks.HTML5_FMT = {\n        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n        TIME: 'HH:mm', // <input type=\"time\" />\n        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n        MONTH: 'YYYY-MM', // <input type=\"month\" />\n    };\n\n    return hooks;\n\n})));\n","/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n","import { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport Cookies from 'js-cookie';\nimport { CONFIG } from '../constants';\nimport { IdentifyParams, ValidIdentifyParameters } from '../types/base';\n\nexport function getSaved(key: string) {\n    // first check if cookie exists\n    const cookieValue = getCookie(key);\n    const storageValue = getStorage(key);\n    if (cookieValue != null && storageValue != null) {\n        if (cookieValue === storageValue) {\n            // 99% of the time, this will be the case\n            return cookieValue;\n        }\n        if (cookieValue !== storageValue) {\n            // if cookie and storage are different, use cookie and update storage\n            setStorage(key, cookieValue);\n            return cookieValue;\n        }\n    }\n\n    if (cookieValue != null && storageValue == null) {\n        setStorage(key, cookieValue);\n        return cookieValue;\n    }\n\n    if (cookieValue == null && storageValue != null) {\n        setCookie(key, storageValue, 365);\n        return storageValue;\n    }\n\n    return undefined\n}\n\nexport function setSaved(key: string, value: string) {\n    setCookie(key, value, 365);\n    setStorage(key, value);\n}\n\nfunction setStorage(key: string, value: string) {\n    localStorage.setItem(key, value);\n}\n\nfunction getStorage(key: string): string | null {\n    const value = localStorage.getItem(key);\n    return value ? value : null;\n}\n\nfunction getCookie(name: string): string | null {\n    const cookie = Cookies.get(name);\n    return cookie ? cookie : null;\n}\n\nfunction setCookie(key: string, value: string, days: number) {\n    Cookies.set(key, value, { expires: days });\n}\n\nexport function generateUserId() {\n    return uuidv4();\n}\n\nexport function getExactUTCTimeISO() {\n    const nowUTC = moment().utc().format(\"YYYY-MM-DD HH:mm:ss.SSS\");\n    return nowUTC;\n}\n\nexport function debugLog(message: string, debug: boolean) {\n    if (!debug) { return }\n    console.log(`[@multibase/js] ${message}`);\n}\n\nexport function logError(message: string) {\n    console.error(`[@multibase/js] ${message}`);\n}\n\nexport function validateIdentifyParams(params: IdentifyParams): | {\n    isValid: true,\n    message: null,\n    params: ValidIdentifyParameters,\n    properties?: object\n} | {\n    isValid: false,\n    message: string,\n    params: null,\n    properties?: object\n} {\n    if (params == null) {\n        return { isValid: false, message: \"Missing parameters for 'identify' call.\", params: null };\n    }\n    if (params.type == null || (params.type !== \"custom\" && params.type !== \"address\")) {\n        return { isValid: false, message: \"Missing or invalid 'type' parameter for 'identify' call.\", params: null };\n    }\n\n    if (params.type === \"custom\") {\n        const { id, properties } = params;\n        if (id == null || typeof id !== 'string') {\n            return { isValid: false, message: \"Missing or invalid 'id' parameter for 'identify' call.\", params: null };\n        }\n        return { isValid: true, message: null, params: { type: \"custom\", id, properties } };\n    }\n\n    if (params.type === \"address\") {\n        const { address, chain, properties } = params;\n        const validAddress = getValidAddress(address);\n        if (validAddress == null) return { isValid: false, message: \"Missing or invalid 'address' parameter for 'identify' call.\", params: null };\n        const validChain = getValidChain(chain);\n        if (validChain == null) return { isValid: false, message: \"Missing or invalid 'chain' parameter for 'identify' call.\", params: null };\n        return { isValid: true, message: null, params: { type: \"address\", address: validAddress, chain: validChain, properties } };\n    }\n\n    return { isValid: false, message: \"Missing or invalid 'type' parameter for 'identify' call.\", params: null };\n}\n\nexport function validateAddress(address: string) {\n    return /^(0x)?[0-9a-f]{40}$/i.test(address);\n}\n\nexport function getValidAddress(address: string) {\n    if (!validateAddress(address)) return null;\n    return address.toLowerCase();\n}\n\nexport function validateChain(chain: string | number) {\n    // if chain is number, parse int and check\n    if (typeof chain === 'number') {\n        const chainInt = Math.floor(chain);\n        const isValid = CONFIG.chains.some((c) => c.id === chainInt);\n        return isValid;\n    }\n\n    if (typeof chain !== 'string') {\n        const isValid = CONFIG.chains.some((c) => c.validIds.includes(chain));\n        return isValid;\n    }\n\n    return false;\n}\n\nexport function getValidChain(chain: string | number) {\n    if (typeof chain === 'number') {\n        const chainInt = Math.floor(chain);\n        const chainObj = CONFIG.chains.find((c) => c.id === chainInt);\n        if (chainObj == null) return null;\n        return chainObj!.multibaseId;\n    }\n\n    if (typeof chain === 'string') {\n        const chainObj = CONFIG.chains.find((c) => c.validIds.includes(chain));\n        if (chainObj == null) return null;\n        return chainObj!.multibaseId;\n    }\n\n    return null;\n}","import { CONFIG } from \"../constants\";\nimport { Context } from \"../types/context\";\n\ntype campaign = {\n    name?: string;\n    source?: string;\n    medium?: string;\n    term?: string;\n    content?: string;\n}\n\nfunction getCampaignFromURL() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const keys = [\"utm_campaign\", \"utm_source\", \"utm_medium\", \"utm_term\", \"utm_content\"]\n    if (!keys.every(key => urlParams.has(key))) {\n        return null;\n    }\n\n    const campaign: campaign = {}\n    if(urlParams.get(\"utm_campaign\")) campaign.name = urlParams.get(\"utm_campaign\")!\n    if(urlParams.get(\"utm_source\")) campaign.source = urlParams.get(\"utm_source\")!\n    if(urlParams.get(\"utm_medium\")) campaign.medium = urlParams.get(\"utm_medium\")!\n    if(urlParams.get(\"utm_term\")) campaign.term = urlParams.get(\"utm_term\")!\n    if(urlParams.get(\"utm_content\")) campaign.content = urlParams.get(\"utm_content\")!\n\n    return campaign;\n}\n\ntype referrer = {\n    name?: string;\n    url?: string;\n    link?: string;\n}\n\nfunction getReferrerFromURL() {\n    if(document.referrer === \"\") return null;\n    const referrerUrl = new URL(document.referrer);\n    const referrer: referrer = {}\n\n    if(referrerUrl.hostname) referrer.name = referrerUrl.hostname\n    if(referrerUrl.href) referrer.url = referrerUrl.href\n    if(referrerUrl.origin) referrer.link = referrerUrl.origin\n\n    return referrer;\n}\n\nfunction getPage(){\n    const vals = [\n        window.location.pathname,\n        document.referrer,\n        window.location.search,\n        document.title,\n        window.location.href,\n    ]\n    // if all null, return null\n    if(vals.every(val => val === \"\" || val == null)) return null;\n    return {\n        path: window.location.pathname,\n        referrer: document.referrer,\n        search: window.location.search,\n        title: document.title,\n        url: window.location.href,\n    }\n}\n\nexport function generateContext():Context {\n    const locale = navigator.language;\n    const userAgent = navigator.userAgent;\n    const userAgentData = navigator.userAgentData;\n    const page = getPage()\n    const library = { name: CONFIG.name, version: CONFIG.version}\n    const campaign = getCampaignFromURL()\n    const referrer = getReferrerFromURL()\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    const context: Context = {}\n    if(locale) context.locale = locale\n    if(userAgent) context.userAgent = userAgent\n    if(userAgentData) context.userAgentData = userAgentData\n    if(page) context.page = page\n    if(library) context.library = library\n    if(campaign) context.campaign = campaign\n    if(referrer) context.referrer = referrer\n    if(timezone) context.timezone = timezone\n\n    return context;\n}","import { ajv } from '../constants';\nimport { getExactUTCTimeISO } from '../utils';\nimport { generateContext } from '../utils/context';\n\ndeclare global {\n    interface Window {\n        multibase: any;\n    }\n}\n\nexport type Chain = {\n    id: number;\n    multibaseId: string;\n    validIds: string[];\n}\n\nexport type MultibaseConfig = {\n    enabled: boolean;\n    debug: boolean;\n}\n\nconst multibaseConfigSchema = {\n    type: \"object\",\n    properties: {\n        enabled: { type: \"boolean\" },\n        debug: { type: \"boolean\" },\n    },\n    required: [],\n    additionalProperties: false,\n    // errorMessage: {\n    //     properties: {\n    //         enabled: \"config.enabled must be boolean\",\n    //         debug: \"config.debug must be boolean\",\n    //     },\n    // },\n}\nexport const validateMultibaseConfig = ajv.compile(multibaseConfigSchema)\n\nexport interface IMultibaseCore {\n    apiKey: string;\n    config: MultibaseConfig;\n    queuedEvents: Array<Event>;\n    eventQueueTimer: any;\n\n    getAPIKey(): string;\n    getUser(): User;\n    addToEventQueue(event: string, properties: object): void;\n    startEventQueueTimer(): void;\n    executeEventQueue(): void;\n    identify(params: IdentifyParams): void;\n}\n\n\nexport const defaultConfig: MultibaseConfig = {\n    enabled: true,\n    debug: false,\n}\n\nexport class Event {\n    timestamp: string;\n    name: string;\n    properties: object;\n    context: object;\n\n    constructor({ name, properties }: { name: string, properties: object }) {\n        this.timestamp = getExactUTCTimeISO();\n        this.name = name;\n        this.properties = properties;\n        this.context = generateContext();\n    }\n\n    toJSON(): object {\n        return {\n            timestamp: this.timestamp,\n            name: this.name,\n            properties: this.properties,\n            context: this.context,\n        }\n    }\n}\n\nexport type IdentifyParams =\n    | { type: \"custom\", id: string, properties?: object }\n    | { type: \"address\", address: string, chain: string | number; properties?: object }\n\nexport type ValidIdentifyParameters =\n    | { type: \"custom\", id: string, properties?: object }\n    | { type: \"address\", address: string, chain: string; properties?: object }\n\nexport class Identify {\n    type: string;\n    timestamp: string;\n    context: object;\n    id?: string;\n    address?: string;\n    chain?: string;\n    properties?: object;\n\n    constructor(params: ValidIdentifyParameters) {\n        const { type, properties } = params;\n        this.type = type;\n        this.timestamp = getExactUTCTimeISO();\n        this.properties = properties;\n        this.context = generateContext();\n        if (type === \"custom\") this.id = params.id;\n        if (type === \"address\") {\n            this.address = params.address;\n            this.chain = params.chain;\n        }\n    }\n\n    toJSON(): object {\n        return {\n            timestamp: this.timestamp,\n            properties: this.properties,\n            context: this.context,\n            type: this.type,\n            id: this.id,\n            address: this.address,\n            chain: this.chain,\n        }\n    }\n}\n\nexport class User {\n    anonymousId: string;\n    id?: string;\n    address?: string;\n    chain?: string;\n    properties: object;\n\n    constructor({ anonymousId, id, address, chain, properties }: { anonymousId: string, id?: string, address?: string, chain?: string, properties: object }) {\n        this.anonymousId = anonymousId;\n        this.id = id;\n        this.address = address;\n        this.chain = chain;\n        this.properties = properties;\n    }\n\n    toJSON(): object {\n        return {\n            anonymousId: this.anonymousId,\n            userId: this.id,\n            address: this.address,\n            chain: this.chain,\n        }\n    }\n}","import { generateUserId, getSaved, setSaved } from \".\";\nimport { User, ValidIdentifyParameters } from \"../types/base\";\n\nexport function getSavedUser():User {\n    let mbId = getSaved('mbjs_anonymous_id');\n    if(mbId == null){\n        mbId = generateUserId();\n    }\n    setSaved('mbjs_anonymous_id', mbId);\n    const uid = getSaved('mbjs_user_id');\n    const address = getSaved('mbjs_address');\n    const chain = getSaved('mbjs_chain');\n    const user = new User({\n        anonymousId: mbId!,\n        id: uid,\n        address: address,\n        chain: chain,\n        properties: {},\n    })\n    return user;\n}\n\nexport function resetAnonymousId() {\n    setSaved('mbjs_anonymous_id', generateUserId());\n}\n\nexport function associateUser(params: ValidIdentifyParameters){\n    if(params == null) return\n    if(params.type === \"custom\"){\n        return associateUserByCustomID(params.id);\n    }\n    if(params.type === \"address\"){\n        return associateUserByAddress(params.address, params.chain);\n    }\n}\n\nfunction associateUserByCustomID(id: string){\n    const existingId = getSaved('mbjs_user_id');\n    if(existingId == null) {\n        setSaved('mbjs_user_id', id);\n        return\n    }\n    if(id === existingId) return\n    resetAnonymousId();\n    setSaved('mbjs_user_id', id);\n}\n\nfunction associateUserByAddress(address: string, chain: string){\n    const existingAddress = getSaved(\"mbjs_address\");\n    const existingChain = getSaved(\"mbjs_chain\");\n    if(existingAddress === address && existingChain === address) return\n    if(existingAddress == null && existingChain == null){\n        setSaved(\"mbjs_address\", address);\n        setSaved(\"mbjs_chain\", chain);\n        return\n    }\n    // we know here that existingAddress is not null and existingChain is not null\n    // we also know either existingAddress != address or existingChain != chain\n    resetAnonymousId();\n    setSaved(\"mbjs_address\", address);\n    setSaved(\"mbjs_chain\", chain);\n}","import { CONFIG } from \"../constants\"\nimport { IMultibaseCore } from \"../types/base\"\n\nexport async function postRequest(\n    { endpoint, body, client }: { endpoint: string, body: object, client: IMultibaseCore }) {\n    const apiKey = client.getAPIKey()\n    const user = client.getUser()\n\n    try {\n        const res = await fetch(`${CONFIG.url}/${endpoint}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'x-api-key': apiKey\n            },\n            body: JSON.stringify({\n                ...user.toJSON(),\n                ...body,\n            })\n        })\n        return res\n    }catch{\n        throw new Error(\"There was an error\")\n    }\n}","export class TypeError extends Error {\n    constructor(message: string) {\n        super(message);\n        this.name = \"TypeError\";\n    }\n\n    toString() {\n        return `${this.name}: ${this.message}`;\n    }\n}","import { Event, IMultibaseCore, Identify, IdentifyParams, MultibaseConfig, User, ValidIdentifyParameters, defaultConfig, validateMultibaseConfig } from \"./types/base\"\nimport { associateUser, getSavedUser } from \"./utils/user\"\nimport { postRequest } from \"./utils/connector\"\nimport { debugLog, logError, validateIdentifyParams } from \"./utils\"\nimport { TypeError } from \"./exceptions\"\n\nlet multibase: MultibaseCore | null = null\n\nclass MultibaseCore implements IMultibaseCore {\n\n    apiKey: string\n    config: MultibaseConfig\n    queuedEvents: Array<Event> = []\n    eventQueueTimer: any\n\n    constructor({ apiKey, configuration }: { apiKey: string, configuration: MultibaseConfig }) {\n        this.apiKey = apiKey\n        this.config = configuration\n    }\n\n    getUser(): User {\n        return getSavedUser()\n    }\n\n    getAPIKey() {\n        return this.apiKey\n    }\n\n    addToEventQueue(event: string, properties: object) {\n        if (!this.config.enabled) return\n        debugLog(`Tracking event '${event}'...`, this.config.debug)\n        const e = new Event({\n            name: event,\n            properties,\n        })\n\n        this.queuedEvents.push(e)\n        this.startEventQueueTimer()\n    }\n\n    startEventQueueTimer() {\n        if (!this.config.enabled) return\n        if (this.eventQueueTimer) {\n            clearTimeout(this.eventQueueTimer)\n        }\n\n        this.eventQueueTimer = setTimeout(async () => {\n            try {\n                await this.executeEventQueue()\n            } catch {\n                logError(\"There was an error executing the event queue\")\n            }\n        }, 1000)\n    }\n\n    async executeEventQueue() {\n        if (!this.config.enabled) return\n        await postRequest({\n            endpoint: \"event/track\",\n            body: {\n                events: this.queuedEvents.map((e) => e.toJSON()),\n            },\n            client: this,\n        })\n        this.queuedEvents = []\n    }\n\n    async identify(params: ValidIdentifyParameters) {\n        if (!this.config.enabled) return\n        const identify = new Identify(params)\n        associateUser(params)\n\n        await postRequest({\n            endpoint: \"user/identify\",\n            body: identify.toJSON(),\n            client: this,\n        })\n    }\n}\n\nfunction init(apiKey: string, configuration?: MultibaseConfig) {\n    if (typeof window === 'undefined') return\n    const mc: MultibaseConfig = {\n        ...defaultConfig,\n        ...configuration || {},\n    }\n    if (!validateMultibaseConfig(mc)) {\n        const errors = validateMultibaseConfig.errors || []\n        for (let err of errors) {\n            logError(`Error in ${err.instancePath}: ${err.message}`);\n        }\n        throw new TypeError(\"Invalid 'init' configuration.\");\n    }\n    debugLog(\"Initializing Multibase SDK...\", mc.debug)\n    const sdkInstance = multibase\n    if (sdkInstance != null) {\n        return\n    }\n    multibase = new MultibaseCore({ apiKey, configuration: mc })\n}\n\nfunction track(event: string, properties: object) {\n    if (multibase == null) {\n        logError(\"Multibase SDK not initialized\")\n        return\n    }\n    multibase.addToEventQueue(event, properties)\n}\n\nasync function identify(params: IdentifyParams) {\n    if (multibase == null) {\n        logError(\"Multibase SDK not initialized\")\n        return\n    }\n    const validationObj = validateIdentifyParams(params)\n    const { isValid, message, params: validatedParams } = validationObj\n    if (!isValid) {\n        logError(message)\n        return\n    }\n    try {\n        await multibase.identify(validatedParams)\n    } catch {\n        logError(\"There was an unknown error identifying the user\")\n    }\n}\n\nexport { init, track, identify }"],"names":["require$$0","require$$1","names","names_1","require$$2","require$$3","require$$4","traverse","jsonSchemaTraverseModule","util_1","equal","resolve","require$$5","require$$6","require$$7","require$$8","require$$9","require$$10","codegen_1","validate_1","merge","sets","length","slice","xl","x","join","subexp","str","typeOf","o","undefined","Object","prototype","toString","call","split","pop","shift","toLowerCase","toUpperCase","toArray","obj","Array","setInterval","assign","target","source","key","buildExps","isIRI","ALPHA$$","DIGIT$$","HEXDIG$$","PCT_ENCODED$","SUB_DELIMS$$","RESERVED$$","GEN_DELIMS$$","UCSCHAR$$","UNRESERVED$$","DEC_OCTET$","DEC_OCTET_RELAXED$","H16$","LS32$","IPV4ADDRESS$","IPV6ADDRESS1$","IPV6ADDRESS2$","IPV6ADDRESS3$","IPV6ADDRESS4$","IPV6ADDRESS5$","IPV6ADDRESS6$","IPV6ADDRESS7$","IPV6ADDRESS8$","IPV6ADDRESS9$","ZONEID$","HOST$","PCHAR$","PATH_ABEMPTY$","IPRIVATE$$","RegExp","IPV6ADDRESS$","maxInt","base","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexPunycode","regexNonASCII","regexSeparators","errors","baseMinusTMin","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","map","array","fn","result","mapDomain","string","parts","replace","labels","encoded","ucs2decode","output","counter","value","charCodeAt","extra","push","ucs2encode","fromCodePoint","basicToDigit","codePoint","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","k","decode","input","inputLength","i","n","bias","basic","lastIndexOf","j","index","oldi","w","t","baseMinusT","out","splice","encode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","toUnicode","test","toASCII","punycode","SCHEMES","pctEncChar","chr","c","e","pctDecChars","newStr","il","parseInt","substr","c2","c3","_normalizeComponentEncoding","components","protocol","decodeUnreserved","decStr","match","UNRESERVED","scheme","PCT_ENCODED","NOT_SCHEME","userinfo","NOT_USERINFO","host","NOT_HOST","path","NOT_PATH","NOT_PATH_NOSCHEME","query","NOT_QUERY","fragment","NOT_FRAGMENT","_stripLeadingZeros","_normalizeIPv4","matches","IPV4ADDRESS","address","_normalizeIPv6","IPV6ADDRESS","zone","reverse","last","first","firstFields","lastFields","isLastFieldIPv4Address","fieldCount","lastFieldsStart","fields","allZeroFields","reduce","acc","field","lastLongest","longestZeroFields","sort","a","b","newHost","newFirst","newLast","URI_PARSE","NO_MATCH_IS_UNDEFINED","parse","uriString","options","iri","IRI_PROTOCOL","URI_PROTOCOL","reference","port","isNaN","indexOf","schemeHandler","unicodeSupport","domainHost","_recomposeAuthority","uriTokens","_","$1","$2","RDS1","RDS2","RDS3","RDS5","removeDotSegments","im","s","Error","serialize","authority","charAt","absolutePath","resolveComponents","relative","skipNormalization","tolerant","baseURI","relativeURI","schemelessOptions","normalize","uri","uriA","uriB","escapeComponent","ESCAPE","unescapeComponent","handler","secure","http","isSecure","wsComponents","resourceName","ws","O","ATEXT$$","QTEXT$$","VCHAR$$","SOME_DELIMS$$","NOT_LOCAL_PART","NOT_HFNAME","NOT_HFVALUE","mailtoComponents","to","unknownHeaders","headers","hfields","hfield","toAddrs","subject","body","addr","toAddr","atIdx","localPart","domain","name","URN_PARSE","urnComponents","nid","nss","urnScheme","uriComponents","UUID","uuidComponents","uuid","https","wss","mailto","urn","uri_1","def","code_1","compile_1","core_1","ucs2length_1","equal_1","validation_1","items_1","additionalItems_1","additionalProperties_1","properties","require$$11","require$$12","require$$13","require$$14","require$$15","format","format_1","format_2","this","require","init","Cookies","uuidv4","TypeError"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83]}